<Type Name="BotFrameworkHttpAdapterBase" FullName="Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc1ab8f1cf050ab04fbde387f68ed94e3a7560ad" /><Meta Name="ms.sourcegitcommit" Value="36928e6f81288095af0c66776a5ef320ec309c1a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/13/2020" /><Meta Name="ms.locfileid" Value="94609588" /></Metadata><TypeSignature Language="C#" Value="public class BotFrameworkHttpAdapterBase : Microsoft.Bot.Builder.BotFrameworkAdapter, Microsoft.Bot.Builder.Streaming.IStreamingActivityProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotFrameworkHttpAdapterBase extends Microsoft.Bot.Builder.BotFrameworkAdapter implements class Microsoft.Bot.Builder.Streaming.IStreamingActivityProcessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" />
  <TypeSignature Language="VB.NET" Value="Public Class BotFrameworkHttpAdapterBase&#xA;Inherits BotFrameworkAdapter&#xA;Implements IStreamingActivityProcessor" />
  <TypeSignature Language="F#" Value="type BotFrameworkHttpAdapterBase = class&#xA;    inherit BotFrameworkAdapter&#xA;    interface IStreamingActivityProcessor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.BotFrameworkAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Streaming.IStreamingActivityProcessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Uma classe base de adaptador HTTP.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapterBase (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider = default, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional credentialProvider As ICredentialProvider = Nothing, Optional channelProvider As IChannelProvider = Nothing, Optional logger As ILogger(Of BotFrameworkHttpAdapterBase) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; -&gt; Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" Usage="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase (credentialProvider, channelProvider, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapterBase (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, System.Net.Http.HttpClient httpClient, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class System.Net.Http.HttpClient httpClient, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, channelProvider As IChannelProvider, httpClient As HttpClient, logger As ILogger(Of BotFrameworkHttpAdapterBase))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt; -&gt; Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" Usage="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase (credentialProvider, channelProvider, httpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="httpClient">O cliente HTTP.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapterBase (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Bot.Builder.IMiddleware middleware = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Bot.Builder.IMiddleware middleware, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Rest.TransientFaultHandling.RetryPolicy,System.Net.Http.HttpClient,Microsoft.Bot.Builder.IMiddleware,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, authConfig As AuthenticationConfiguration, Optional channelProvider As IChannelProvider = Nothing, Optional connectorClientRetryPolicy As RetryPolicy = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional middleware As IMiddleware = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Rest.TransientFaultHandling.RetryPolicy * System.Net.Http.HttpClient * Microsoft.Bot.Builder.IMiddleware * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" Usage="new Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase (credentialProvider, authConfig, channelProvider, connectorClientRetryPolicy, customHttpClient, middleware, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="connectorClientRetryPolicy" Type="Microsoft.Rest.TransientFaultHandling.RetryPolicy" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="middleware" Type="Microsoft.Bot.Builder.IMiddleware" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="authConfig">A configuração de autenticação.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="connectorClientRetryPolicy">Política de repetição para operações HTTP Retyring.</param>
        <param name="customHttpClient">O cliente HTTP.</param>
        <param name="middleware">O middleware a ser adicionado inicialmente ao adaptador.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanProcessOutgoingActivity">
      <MemberSignature Language="C#" Value="protected override bool CanProcessOutgoingActivity (Microsoft.Bot.Schema.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanProcessOutgoingActivity(class Microsoft.Bot.Schema.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.CanProcessOutgoingActivity(Microsoft.Bot.Schema.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanProcessOutgoingActivity (activity As Activity) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CanProcessOutgoingActivity : Microsoft.Bot.Schema.Activity -&gt; bool" Usage="botFrameworkHttpAdapterBase.CanProcessOutgoingActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">A atividade de saída.</param>
        <summary>Avalia se o processamento de uma atividade de saída é possível.</summary>
        <returns>Se deve chamar ProcessOutgoingActivityAsync para enviar a atividade de saída.</returns>
        <remarks>Se retornar true, <see cref="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ProcessOutgoingActivityAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" /> será responsável por enviar a atividade de saída.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsIdentity">
      <MemberSignature Language="C#" Value="protected System.Security.Claims.ClaimsIdentity ClaimsIdentity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity ClaimsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ClaimsIdentity" />
      <MemberSignature Language="VB.NET" Value="Protected Property ClaimsIdentity As ClaimsIdentity" />
      <MemberSignature Language="F#" Value="member this.ClaimsIdentity : System.Security.Claims.ClaimsIdentity with get, set" Usage="Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ClaimsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a identidade de declarações para esse adaptador.</summary>
        <value>A identidade de declarações para esse adaptador.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectedBot">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Builder.IBot ConnectedBot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.IBot ConnectedBot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ConnectedBot" />
      <MemberSignature Language="VB.NET" Value="Protected Property ConnectedBot As IBot" />
      <MemberSignature Language="F#" Value="member this.ConnectedBot : Microsoft.Bot.Builder.IBot with get, set" Usage="Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ConnectedBot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.IBot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o bot conectado a esse adaptador.</summary>
        <value>O bot conectado a esse adaptador.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectNamedPipeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectNamedPipeAsync (string pipeName, Microsoft.Bot.Builder.IBot bot, string audience = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectNamedPipeAsync(string pipeName, class Microsoft.Bot.Builder.IBot bot, string audience) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ConnectNamedPipeAsync(System.String,Microsoft.Bot.Builder.IBot,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectNamedPipeAsync (pipeName As String, bot As IBot, Optional audience As String = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.ConnectNamedPipeAsync : string * Microsoft.Bot.Builder.IBot * string -&gt; System.Threading.Tasks.Task" Usage="botFrameworkHttpAdapterBase.ConnectNamedPipeAsync (pipeName, bot, audience)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="bot" Type="Microsoft.Bot.Builder.IBot" />
        <Parameter Name="audience" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">O nome do pipe nomeado ao qual se conectar.</param>
        <param name="bot">O bot a ser usado ao processar atividades recebidas no pipe nomeado.</param>
        <param name="audience">O destinatário especificado de todas as atividades de saída.</param>
        <summary>Cria um novo StreamingRequestHandler para escutar o pipe nomeado especificado e passar solicitações para esse adaptador.</summary>
        <returns>Uma tarefa que é concluída apenas uma vez que o StreamingRequestHandler parou de escutar solicitações de entrada no pipe nomeado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessOutgoingActivityAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; ProcessOutgoingActivityAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; ProcessOutgoingActivityAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ProcessOutgoingActivityAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessOutgoingActivityAsync (turnContext As ITurnContext, activity As Activity, cancellationToken As CancellationToken) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="override this.ProcessOutgoingActivityAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="botFrameworkHttpAdapterBase.ProcessOutgoingActivityAsync (turnContext, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">O objeto de contexto para a rodada.</param>
        <param name="activity">A atividade a ser processada.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>Envia uma atividade de saída.</summary>
        <returns>O resultado do processamento da atividade.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStreamingActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; ProcessStreamingActivityAsync (Microsoft.Bot.Schema.Activity activity, Microsoft.Bot.Builder.BotCallbackHandler callbackHandler, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; ProcessStreamingActivityAsync(class Microsoft.Bot.Schema.Activity activity, class Microsoft.Bot.Builder.BotCallbackHandler callbackHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.ProcessStreamingActivityAsync(Microsoft.Bot.Schema.Activity,Microsoft.Bot.Builder.BotCallbackHandler,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessStreamingActivityAsync (activity As Activity, callbackHandler As BotCallbackHandler, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member ProcessStreamingActivityAsync : Microsoft.Bot.Schema.Activity * Microsoft.Bot.Builder.BotCallbackHandler * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;&#xA;override this.ProcessStreamingActivityAsync : Microsoft.Bot.Schema.Activity * Microsoft.Bot.Builder.BotCallbackHandler * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="botFrameworkHttpAdapterBase.ProcessStreamingActivityAsync (activity, callbackHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Streaming.IStreamingActivityProcessor.ProcessStreamingActivityAsync(Microsoft.Bot.Schema.Activity,Microsoft.Bot.Builder.BotCallbackHandler,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="callbackHandler" Type="Microsoft.Bot.Builder.BotCallbackHandler" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:Microsoft.Bot.Schema.Activity" /> a processar.</param>
        <param name="callbackHandler">O <see cref="T:Microsoft.Bot.Builder.BotCallbackHandler" /> que processará a atividade.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Método do adaptador primário para processar atividades enviadas do canal de streaming.
Cria um contexto de ativação e executa o pipeline de middleware para uma atividade de entrada.
Gera <see cref="T:System.ArgumentNullException" /> argumentos nulos.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado. Se o tipo de atividade era ' Invoke ' e a chave correspondente (channelId + ActivityId) for encontrada, um InvokeResponse será retornado, caso contrário, NULL será retornado.</returns>
        <remarks>Chame esse método para enviar de forma reativa uma mensagem a uma conversa.
Se a tarefa for concluída com êxito, se a atividade <see cref="P:Microsoft.Bot.Schema.Activity.Type" /> for <see cref="F:Microsoft.Bot.Schema.ActivityTypes.Invoke" /> e a chave correspondente ( <see cref="P:Microsoft.Bot.Schema.Activity.ChannelId" />  +  <see cref="P:Microsoft.Bot.Schema.Activity.Id" /> ) for encontrada, um será retornado <see cref="T:Microsoft.Bot.Builder.InvokeResponse" /> , caso contrário, NULL será retornado.
            <para>Esse método registra os seguintes serviços para a ativação.<list type="bullet" /></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestHandlers">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Streaming.StreamingRequestHandler&gt; RequestHandlers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Builder.Streaming.StreamingRequestHandler&gt; RequestHandlers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.RequestHandlers" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequestHandlers As IList(Of StreamingRequestHandler)" />
      <MemberSignature Language="F#" Value="member this.RequestHandlers : System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Streaming.StreamingRequestHandler&gt; with get, set" Usage="Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.RequestHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Builder.Streaming.StreamingRequestHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define os manipuladores de solicitação para este adaptador.</summary>
        <value>Os manipuladores de solicitação para este adaptador.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendStreamingActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; SendStreamingActivityAsync (Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; SendStreamingActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase.SendStreamingActivityAsync(Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendStreamingActivityAsync (activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.SendStreamingActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="botFrameworkHttpAdapterBase.SendStreamingActivityAsync (activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">&gt;O <see cref="T:Microsoft.Bot.Schema.Activity" /> a ser enviado.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Envia uma atividade.</summary>
        <returns>Uma tarefa que representa a operação assíncrona.</returns>
        <remarks>Se a tarefa for concluída com êxito, o resultado conterá um objeto de resposta de recurso.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
