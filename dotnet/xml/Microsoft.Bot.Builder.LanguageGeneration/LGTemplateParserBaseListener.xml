<Type Name="LGTemplateParserBaseListener" FullName="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b42ae7877cf7878ecd1a75cc6768f97faeb925b" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151576" /></Metadata><TypeSignature Language="C#" Value="public class LGTemplateParserBaseListener : Antlr4.Runtime.Tree.IParseTreeListener, Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LGTemplateParserBaseListener extends System.Object implements class Antlr4.Runtime.Tree.IParseTreeListener, class Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener" />
  <TypeSignature Language="VB.NET" Value="Public Class LGTemplateParserBaseListener&#xA;Implements ILGTemplateParserListener, IParseTreeListener" />
  <TypeSignature Language="F#" Value="type LGTemplateParserBaseListener = class&#xA;    interface ILGTemplateParserListener&#xA;    interface IParseTreeListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa classe fornece uma implementação vazia do <see cref="T:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener" /> , que pode ser estendida para criar um ouvinte que precisa apenas manipular um subconjunto dos métodos disponíveis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LGTemplateParserBaseListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterBody">
      <MemberSignature Language="C#" Value="public virtual void EnterBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/BodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterBody (context As LGTemplateParser.BodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext -&gt; unit&#xA;override this.EnterBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+BodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterContext">
      <MemberSignature Language="C#" Value="public virtual void EnterContext (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterContext(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ContextContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterContext(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterContext (context As LGTemplateParser.ContextContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterContext : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext -&gt; unit&#xA;override this.EnterContext : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterContext context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterContext(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ContextContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.context" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorStructuredName">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorStructuredName (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorStructuredName(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorStructuredNameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterErrorStructuredName(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorStructuredName (context As LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorStructuredName : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext -&gt; unit&#xA;override this.EnterErrorStructuredName : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorStructuredName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterErrorStructuredName(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorStructuredNameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorStructuredName" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorStructureLine">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorStructureLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorStructureLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterErrorStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorStructureLine (context As LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext -&gt; unit&#xA;override this.EnterErrorStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterErrorStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterErrorTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorTemplateString (context As LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext -&gt; unit&#xA;override this.EnterErrorTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterErrorTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterEveryRule">
      <MemberSignature Language="C#" Value="public virtual void EnterEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnterExpression">
      <MemberSignature Language="C#" Value="public virtual void EnterExpression (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpression(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterExpression(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterExpression (context As LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpression : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext -&gt; unit&#xA;override this.EnterExpression : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterExpression context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterExpression(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.expression" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterExpressionInStructure">
      <MemberSignature Language="C#" Value="public virtual void EnterExpressionInStructure (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpressionInStructure(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ExpressionInStructureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterExpressionInStructure(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterExpressionInStructure (context As LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpressionInStructure : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext -&gt; unit&#xA;override this.EnterExpressionInStructure : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterExpressionInStructure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterExpressionInStructure(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ExpressionInStructureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.expressionInStructure" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfCondition">
      <MemberSignature Language="C#" Value="public virtual void EnterIfCondition (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfCondition(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfConditionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterIfCondition(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfCondition (context As LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfCondition : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext -&gt; unit&#xA;override this.EnterIfCondition : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfCondition context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterIfCondition(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfConditionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifCondition" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfConditionRule">
      <MemberSignature Language="C#" Value="public virtual void EnterIfConditionRule (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfConditionRule(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfConditionRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterIfConditionRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfConditionRule (context As LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfConditionRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext -&gt; unit&#xA;override this.EnterIfConditionRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfConditionRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterIfConditionRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfConditionRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifConditionRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfElseBody">
      <MemberSignature Language="C#" Value="public virtual void EnterIfElseBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfElseBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfElseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterIfElseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfElseBody (context As LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfElseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext -&gt; unit&#xA;override this.EnterIfElseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfElseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterIfElseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfElseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>ifElseBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfElseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterIfElseTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfElseTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfElseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterIfElseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfElseTemplateBody (context As LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfElseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext -&gt; unit&#xA;override this.EnterIfElseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfElseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterIfElseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfElseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifElseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValueStructureLine">
      <MemberSignature Language="C#" Value="public virtual void EnterKeyValueStructureLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValueStructureLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/KeyValueStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterKeyValueStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterKeyValueStructureLine (context As LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValueStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext -&gt; unit&#xA;override this.EnterKeyValueStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterKeyValueStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterKeyValueStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+KeyValueStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.keyValueStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValueStructureValue">
      <MemberSignature Language="C#" Value="public virtual void EnterKeyValueStructureValue (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValueStructureValue(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/KeyValueStructureValueContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterKeyValueStructureValue(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterKeyValueStructureValue (context As LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValueStructureValue : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext -&gt; unit&#xA;override this.EnterKeyValueStructureValue : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterKeyValueStructureValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterKeyValueStructureValue(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+KeyValueStructureValueContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.keyValueStructureValue" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalBody">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterNormalBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalBody (context As LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext -&gt; unit&#xA;override this.EnterNormalBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterNormalBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>normalBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterNormalTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalTemplateBody (context As LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext -&gt; unit&#xA;override this.EnterNormalTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterNormalTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.normalTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterNormalTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalTemplateString (context As LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext -&gt; unit&#xA;override this.EnterNormalTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterNormalTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.normalTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBody">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterStructuredBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBody (context As LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext -&gt; unit&#xA;override this.EnterStructuredBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterStructuredBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>structuredBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyContentLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyContentLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyContentLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyContentLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterStructuredBodyContentLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyContentLine (context As LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyContentLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext -&gt; unit&#xA;override this.EnterStructuredBodyContentLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyContentLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterStructuredBodyContentLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyContentLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyContentLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyEndLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyEndLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyEndLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyEndLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterStructuredBodyEndLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyEndLine (context As LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyEndLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext -&gt; unit&#xA;override this.EnterStructuredBodyEndLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyEndLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterStructuredBodyEndLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyEndLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyEndLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyNameLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyNameLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyNameLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyNameLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterStructuredBodyNameLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyNameLine (context As LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyNameLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext -&gt; unit&#xA;override this.EnterStructuredBodyNameLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyNameLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterStructuredBodyNameLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyNameLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyNameLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterStructuredTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredTemplateBody (context As LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext -&gt; unit&#xA;override this.EnterStructuredTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterStructuredTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseBody">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterSwitchCaseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseBody (context As LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext -&gt; unit&#xA;override this.EnterSwitchCaseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterSwitchCaseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>switchCaseBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseRule">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseRule (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseRule(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterSwitchCaseRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseRule (context As LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext -&gt; unit&#xA;override this.EnterSwitchCaseRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterSwitchCaseRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseStat">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseStat (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseStat(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseStatContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterSwitchCaseStat(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseStat (context As LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseStat : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext -&gt; unit&#xA;override this.EnterSwitchCaseStat : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseStat context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterSwitchCaseStat(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseStatContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseStat" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterSwitchCaseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseTemplateBody (context As LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit&#xA;override this.EnterSwitchCaseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterSwitchCaseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/TemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.EnterTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterTemplateString (context As LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext -&gt; unit&#xA;override this.EnterTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.EnterTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+TemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.templateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitBody">
      <MemberSignature Language="C#" Value="public virtual void ExitBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/BodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitBody (context As LGTemplateParser.BodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext -&gt; unit&#xA;override this.ExitBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.BodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+BodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitContext">
      <MemberSignature Language="C#" Value="public virtual void ExitContext (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitContext(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ContextContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitContext(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitContext (context As LGTemplateParser.ContextContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitContext : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext -&gt; unit&#xA;override this.ExitContext : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitContext context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitContext(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ContextContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ContextContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.context" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorStructuredName">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorStructuredName (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorStructuredName(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorStructuredNameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitErrorStructuredName(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorStructuredName (context As LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorStructuredName : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext -&gt; unit&#xA;override this.ExitErrorStructuredName : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorStructuredName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitErrorStructuredName(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructuredNameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorStructuredNameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorStructuredName" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorStructureLine">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorStructureLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorStructureLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitErrorStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorStructureLine (context As LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext -&gt; unit&#xA;override this.ExitErrorStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitErrorStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ErrorTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitErrorTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorTemplateString (context As LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext -&gt; unit&#xA;override this.ExitErrorTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitErrorTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ErrorTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ErrorTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.errorTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitEveryRule">
      <MemberSignature Language="C#" Value="public virtual void ExitEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ExitExpression">
      <MemberSignature Language="C#" Value="public virtual void ExitExpression (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpression(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitExpression(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitExpression (context As LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpression : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext -&gt; unit&#xA;override this.ExitExpression : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitExpression context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitExpression(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.expression" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitExpressionInStructure">
      <MemberSignature Language="C#" Value="public virtual void ExitExpressionInStructure (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpressionInStructure(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/ExpressionInStructureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitExpressionInStructure(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitExpressionInStructure (context As LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpressionInStructure : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext -&gt; unit&#xA;override this.ExitExpressionInStructure : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitExpressionInStructure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitExpressionInStructure(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ExpressionInStructureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+ExpressionInStructureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.expressionInStructure" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfCondition">
      <MemberSignature Language="C#" Value="public virtual void ExitIfCondition (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfCondition(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfConditionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitIfCondition(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfCondition (context As LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfCondition : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext -&gt; unit&#xA;override this.ExitIfCondition : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfCondition context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitIfCondition(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfConditionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifCondition" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfConditionRule">
      <MemberSignature Language="C#" Value="public virtual void ExitIfConditionRule (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfConditionRule(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfConditionRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitIfConditionRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfConditionRule (context As LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfConditionRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext -&gt; unit&#xA;override this.ExitIfConditionRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfConditionRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitIfConditionRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfConditionRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfConditionRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifConditionRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfElseBody">
      <MemberSignature Language="C#" Value="public virtual void ExitIfElseBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfElseBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfElseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitIfElseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfElseBody (context As LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfElseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext -&gt; unit&#xA;override this.ExitIfElseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfElseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitIfElseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfElseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>ifElseBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfElseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitIfElseTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfElseTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/IfElseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitIfElseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfElseTemplateBody (context As LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfElseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext -&gt; unit&#xA;override this.ExitIfElseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfElseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitIfElseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.IfElseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+IfElseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.ifElseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValueStructureLine">
      <MemberSignature Language="C#" Value="public virtual void ExitKeyValueStructureLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValueStructureLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/KeyValueStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitKeyValueStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitKeyValueStructureLine (context As LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValueStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext -&gt; unit&#xA;override this.ExitKeyValueStructureLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitKeyValueStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitKeyValueStructureLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+KeyValueStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.keyValueStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValueStructureValue">
      <MemberSignature Language="C#" Value="public virtual void ExitKeyValueStructureValue (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValueStructureValue(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/KeyValueStructureValueContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitKeyValueStructureValue(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitKeyValueStructureValue (context As LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValueStructureValue : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext -&gt; unit&#xA;override this.ExitKeyValueStructureValue : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitKeyValueStructureValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitKeyValueStructureValue(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.KeyValueStructureValueContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+KeyValueStructureValueContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.keyValueStructureValue" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalBody">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitNormalBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalBody (context As LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext -&gt; unit&#xA;override this.ExitNormalBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitNormalBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>normalBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitNormalTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalTemplateBody (context As LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext -&gt; unit&#xA;override this.ExitNormalTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitNormalTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.normalTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/NormalTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitNormalTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalTemplateString (context As LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext -&gt; unit&#xA;override this.ExitNormalTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitNormalTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.NormalTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+NormalTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.normalTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBody">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitStructuredBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBody (context As LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext -&gt; unit&#xA;override this.ExitStructuredBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitStructuredBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>structuredBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyContentLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyContentLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyContentLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyContentLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitStructuredBodyContentLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyContentLine (context As LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyContentLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext -&gt; unit&#xA;override this.ExitStructuredBodyContentLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyContentLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitStructuredBodyContentLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyContentLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyContentLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyContentLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyEndLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyEndLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyEndLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyEndLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitStructuredBodyEndLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyEndLine (context As LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyEndLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext -&gt; unit&#xA;override this.ExitStructuredBodyEndLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyEndLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitStructuredBodyEndLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyEndLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyEndLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyEndLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyNameLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyNameLine (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyNameLine(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredBodyNameLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitStructuredBodyNameLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyNameLine (context As LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyNameLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext -&gt; unit&#xA;override this.ExitStructuredBodyNameLine : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyNameLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitStructuredBodyNameLine(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredBodyNameLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredBodyNameLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredBodyNameLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/StructuredTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitStructuredTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredTemplateBody (context As LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext -&gt; unit&#xA;override this.ExitStructuredTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitStructuredTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.StructuredTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+StructuredTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.structuredTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseBody">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitSwitchCaseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseBody (context As LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext -&gt; unit&#xA;override this.ExitSwitchCaseBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitSwitchCaseBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>switchCaseBody</c> rotulado como alternativa em <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseRule">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseRule (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseRule(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitSwitchCaseRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseRule (context As LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext -&gt; unit&#xA;override this.ExitSwitchCaseRule : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitSwitchCaseRule(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseStat">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseStat (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseStat(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseStatContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitSwitchCaseStat(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseStat (context As LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseStat : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext -&gt; unit&#xA;override this.ExitSwitchCaseStat : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseStat context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitSwitchCaseStat(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseStatContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseStatContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseStat" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseTemplateBody (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseTemplateBody(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/SwitchCaseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitSwitchCaseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseTemplateBody (context As LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit&#xA;override this.ExitSwitchCaseTemplateBody : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitSwitchCaseTemplateBody(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.SwitchCaseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+SwitchCaseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.switchCaseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitTemplateString (Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitTemplateString(class Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser/TemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.ExitTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitTemplateString (context As LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext -&gt; unit&#xA;override this.ExitTemplateString : Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.LanguageGeneration.ILGTemplateParserListener.ExitTemplateString(Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.TemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser+TemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParser.templateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorNode">
      <MemberSignature Language="C#" Value="public virtual void VisitErrorNode (Antlr4.Runtime.Tree.IErrorNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitErrorNode(class Antlr4.Runtime.Tree.IErrorNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitErrorNode (node As IErrorNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit&#xA;override this.VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit" Usage="lGTemplateParserBaseListener.VisitErrorNode node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.IErrorNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitTerminal">
      <MemberSignature Language="C#" Value="public virtual void VisitTerminal (Antlr4.Runtime.Tree.ITerminalNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTerminal(class Antlr4.Runtime.Tree.ITerminalNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.LanguageGeneration.LGTemplateParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTerminal (node As ITerminalNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit&#xA;override this.VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit" Usage="lGTemplateParserBaseListener.VisitTerminal node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.ITerminalNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
