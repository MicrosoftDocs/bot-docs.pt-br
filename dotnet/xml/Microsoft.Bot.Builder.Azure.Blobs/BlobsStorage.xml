<Type Name="BlobsStorage" FullName="Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1558a0d8b6d97a62d75cf54117043f7df52833b8" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95466900" /></Metadata><TypeSignature Language="C#" Value="public class BlobsStorage : Microsoft.Bot.Builder.IStorage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobsStorage extends System.Object implements class Microsoft.Bot.Builder.IStorage" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobsStorage&#xA;Implements IStorage" />
  <TypeSignature Language="F#" Value="type BlobsStorage = class&#xA;    interface IStorage" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Azure.Blobs</AssemblyName>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IStorage</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementa <see cref="T:Microsoft.Bot.Builder.IStorage" /> usando os blobs de armazenamento do Azure.</summary>
    <remarks>Essa classe usa um único contêiner de Azure Storage Blob.
Cada entidade ou <see cref="T:Microsoft.Bot.Builder.IStoreItem" /> é serializada em uma cadeia de caracteres JSON e armazenada em um blob de texto individual.
Cada blob é nomeado após a chave do item de armazenamento, que é codificada para que ele esteja de acordo com um nome de blob válido.
Se uma entidade for um <see cref="T:Microsoft.Bot.Builder.IStoreItem" /> , o objeto de armazenamento definirá o valor da propriedade da entidade <see cref="P:Microsoft.Bot.Builder.IStoreItem.ETag" /> como a eTag do blob após a leitura. Depois disso, um <see cref="T:Azure.Storage.Blobs.Models.BlobRequestConditions" /> com o valor de eTag será gerado durante a gravação. Novas entidades começam com uma ETag nula.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobsStorage (string dataConnectionString, string containerName, Newtonsoft.Json.JsonSerializer jsonSerializer = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dataConnectionString, string containerName, class Newtonsoft.Json.JsonSerializer jsonSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage.#ctor(System.String,System.String,Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataConnectionString As String, containerName As String, Optional jsonSerializer As JsonSerializer = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage : string * string * Newtonsoft.Json.JsonSerializer -&gt; Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage" Usage="new Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage (dataConnectionString, containerName, jsonSerializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Azure.Blobs</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataConnectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="jsonSerializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="dataConnectionString">Cadeia de conexão do armazenamento do Azure.</param>
        <param name="containerName">Nome do contêiner de BLOB em que as entidades serão armazenadas.</param>
        <param name="jsonSerializer">Ao passar em um JsonSerializer personalizado, recomendamos as seguintes configurações:
            <para>jsonSerializer. TypeNameHandling = TypeNameHandling. None.</para><para>jsonSerializer. NullValueHandling = NullValueHandling. include.</para><para>jsonSerializer. ContractResolver = New DefaultContractResolver ().</para></param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteAsync (string[] keys, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(string[] keys, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (keys As String(), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobsStorage.DeleteAsync (keys, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Azure.Blobs</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keys">Uma matriz de chaves de entidade.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Exclui os blobs de entidade do contêiner configurado.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; ReadAsync (string[] keys, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; ReadAsync(string[] keys, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage.ReadAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (keys As String(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of IDictionary(Of String, Object))" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt;&#xA;override this.ReadAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt;" Usage="blobsStorage.ReadAsync (keys, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.ReadAsync(System.String[],System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Azure.Blobs</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keys">Uma matriz de chaves de entidade.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Recupere entidades do contêiner de blob configurado.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (System.Collections.Generic.IDictionary&lt;string,object&gt; changes, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; changes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Azure.Blobs.BlobsStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (changes As IDictionary(Of String, Object), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="blobsStorage.WriteAsync (changes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Azure.Blobs</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changes">As alterações a serem gravadas no armazenamento.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Armazena uma nova entidade no contêiner de blob configurado.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
