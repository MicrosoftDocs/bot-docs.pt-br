<Type Name="LGTemplateParserBaseListener" FullName="LGTemplateParserBaseListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b849801b363e448bbb508e2bd1c833b62530584" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95463200" /></Metadata><TypeSignature Language="C#" Value="public class LGTemplateParserBaseListener : Antlr4.Runtime.Tree.IParseTreeListener, ILGTemplateParserListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LGTemplateParserBaseListener extends System.Object implements class Antlr4.Runtime.Tree.IParseTreeListener, ILGTemplateParserListener" />
  <TypeSignature Language="DocId" Value="T:LGTemplateParserBaseListener" />
  <TypeSignature Language="VB.NET" Value="Public Class LGTemplateParserBaseListener&#xA;Implements ILGTemplateParserListener, IParseTreeListener" />
  <TypeSignature Language="F#" Value="type LGTemplateParserBaseListener = class&#xA;    interface ILGTemplateParserListener&#xA;    interface IParseTreeListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ILGTemplateParserListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa classe fornece uma implementação vazia do <see cref="T:ILGTemplateParserListener" /> , que pode ser estendida para criar um ouvinte que precisa apenas manipular um subconjunto dos métodos disponíveis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LGTemplateParserBaseListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterContext">
      <MemberSignature Language="C#" Value="public virtual void EnterContext (LGTemplateParser.ContextContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterContext(LGTemplateParser/ContextContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterContext(LGTemplateParser.ContextContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterContext (context As LGTemplateParser.ContextContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterContext : LGTemplateParser.ContextContext -&gt; unit&#xA;override this.EnterContext : LGTemplateParser.ContextContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterContext context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterContext(LGTemplateParser.ContextContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ContextContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.context" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorStructuredName">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorStructuredName (LGTemplateParser.ErrorStructuredNameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorStructuredName(LGTemplateParser/ErrorStructuredNameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorStructuredName (context As LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; unit&#xA;override this.EnterErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorStructuredName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructuredNameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructuredName" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorStructureLine">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorStructureLine (LGTemplateParser.ErrorStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorStructureLine(LGTemplateParser/ErrorStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorStructureLine (context As LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; unit&#xA;override this.EnterErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterErrorTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterErrorTemplateString (LGTemplateParser.ErrorTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterErrorTemplateString(LGTemplateParser/ErrorTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterErrorTemplateString (context As LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; unit&#xA;override this.EnterErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterErrorTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterEveryRule">
      <MemberSignature Language="C#" Value="public virtual void EnterEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnterExpression">
      <MemberSignature Language="C#" Value="public virtual void EnterExpression (LGTemplateParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpression(LGTemplateParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterExpression(LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterExpression (context As LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpression : LGTemplateParser.ExpressionContext -&gt; unit&#xA;override this.EnterExpression : LGTemplateParser.ExpressionContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterExpression context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterExpression(LGTemplateParser.ExpressionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.expression" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterExpressionInStructure">
      <MemberSignature Language="C#" Value="public virtual void EnterExpressionInStructure (LGTemplateParser.ExpressionInStructureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpressionInStructure(LGTemplateParser/ExpressionInStructureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterExpressionInStructure (context As LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; unit&#xA;override this.EnterExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterExpressionInStructure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionInStructureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.expressionInStructure" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfCondition">
      <MemberSignature Language="C#" Value="public virtual void EnterIfCondition (LGTemplateParser.IfConditionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfCondition(LGTemplateParser/IfConditionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterIfCondition(LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfCondition (context As LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfCondition : LGTemplateParser.IfConditionContext -&gt; unit&#xA;override this.EnterIfCondition : LGTemplateParser.IfConditionContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfCondition context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterIfCondition(LGTemplateParser.IfConditionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifCondition" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfConditionRule">
      <MemberSignature Language="C#" Value="public virtual void EnterIfConditionRule (LGTemplateParser.IfConditionRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfConditionRule(LGTemplateParser/IfConditionRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterIfConditionRule(LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfConditionRule (context As LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; unit&#xA;override this.EnterIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfConditionRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterIfConditionRule(LGTemplateParser.IfConditionRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifConditionRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfElseBody">
      <MemberSignature Language="C#" Value="public virtual void EnterIfElseBody (LGTemplateParser.IfElseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfElseBody(LGTemplateParser/IfElseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterIfElseBody(LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfElseBody (context As LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; unit&#xA;override this.EnterIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfElseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterIfElseBody(LGTemplateParser.IfElseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>ifElseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIfElseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterIfElseTemplateBody (LGTemplateParser.IfElseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIfElseTemplateBody(LGTemplateParser/IfElseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterIfElseTemplateBody (context As LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; unit&#xA;override this.EnterIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterIfElseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifElseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValueStructureLine">
      <MemberSignature Language="C#" Value="public virtual void EnterKeyValueStructureLine (LGTemplateParser.KeyValueStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValueStructureLine(LGTemplateParser/KeyValueStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterKeyValueStructureLine (context As LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; unit&#xA;override this.EnterKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterKeyValueStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValueStructureValue">
      <MemberSignature Language="C#" Value="public virtual void EnterKeyValueStructureValue (LGTemplateParser.KeyValueStructureValueContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValueStructureValue(LGTemplateParser/KeyValueStructureValueContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterKeyValueStructureValue (context As LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; unit&#xA;override this.EnterKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterKeyValueStructureValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureValueContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureValue" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalBody">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalBody (LGTemplateParser.NormalBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalBody(LGTemplateParser/NormalBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterNormalBody(LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalBody (context As LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalBody : LGTemplateParser.NormalBodyContext -&gt; unit&#xA;override this.EnterNormalBody : LGTemplateParser.NormalBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterNormalBody(LGTemplateParser.NormalBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>normalBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalTemplateBody (LGTemplateParser.NormalTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalTemplateBody(LGTemplateParser/NormalTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalTemplateBody (context As LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; unit&#xA;override this.EnterNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNormalTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterNormalTemplateString (LGTemplateParser.NormalTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNormalTemplateString(LGTemplateParser/NormalTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNormalTemplateString (context As LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; unit&#xA;override this.EnterNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterNormalTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBody">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBody (LGTemplateParser.StructuredBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBody(LGTemplateParser/StructuredBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterStructuredBody(LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBody (context As LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; unit&#xA;override this.EnterStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterStructuredBody(LGTemplateParser.StructuredBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>structuredBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyContentLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyContentLine (LGTemplateParser.StructuredBodyContentLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyContentLine(LGTemplateParser/StructuredBodyContentLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyContentLine (context As LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; unit&#xA;override this.EnterStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyContentLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContentLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyContentLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyEndLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyEndLine (LGTemplateParser.StructuredBodyEndLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyEndLine(LGTemplateParser/StructuredBodyEndLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyEndLine (context As LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; unit&#xA;override this.EnterStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyEndLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyEndLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyEndLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredBodyNameLine">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredBodyNameLine (LGTemplateParser.StructuredBodyNameLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredBodyNameLine(LGTemplateParser/StructuredBodyNameLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredBodyNameLine (context As LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; unit&#xA;override this.EnterStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredBodyNameLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyNameLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyNameLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStructuredTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterStructuredTemplateBody (LGTemplateParser.StructuredTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStructuredTemplateBody(LGTemplateParser/StructuredTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStructuredTemplateBody (context As LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; unit&#xA;override this.EnterStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterStructuredTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseBody">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseBody (LGTemplateParser.SwitchCaseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseBody(LGTemplateParser/SwitchCaseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseBody (context As LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; unit&#xA;override this.EnterSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>switchCaseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseRule">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseRule (LGTemplateParser.SwitchCaseRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseRule(LGTemplateParser/SwitchCaseRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseRule (context As LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; unit&#xA;override this.EnterSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseStat">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseStat (LGTemplateParser.SwitchCaseStatContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseStat(LGTemplateParser/SwitchCaseStatContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseStat (context As LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; unit&#xA;override this.EnterSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseStat context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseStatContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseStat" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterSwitchCaseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void EnterSwitchCaseTemplateBody (LGTemplateParser.SwitchCaseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterSwitchCaseTemplateBody(LGTemplateParser/SwitchCaseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterSwitchCaseTemplateBody (context As LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit&#xA;override this.EnterSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterSwitchCaseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterTemplateString">
      <MemberSignature Language="C#" Value="public virtual void EnterTemplateString (LGTemplateParser.TemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterTemplateString(LGTemplateParser/TemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.EnterTemplateString(LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterTemplateString (context As LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterTemplateString : LGTemplateParser.TemplateStringContext -&gt; unit&#xA;override this.EnterTemplateString : LGTemplateParser.TemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.EnterTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.EnterTemplateString(LGTemplateParser.TemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+TemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:LGTemplateParser.templateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitContext">
      <MemberSignature Language="C#" Value="public virtual void ExitContext (LGTemplateParser.ContextContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitContext(LGTemplateParser/ContextContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitContext(LGTemplateParser.ContextContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitContext (context As LGTemplateParser.ContextContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitContext : LGTemplateParser.ContextContext -&gt; unit&#xA;override this.ExitContext : LGTemplateParser.ContextContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitContext context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitContext(LGTemplateParser.ContextContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ContextContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.context" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorStructuredName">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorStructuredName (LGTemplateParser.ErrorStructuredNameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorStructuredName(LGTemplateParser/ErrorStructuredNameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorStructuredName (context As LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; unit&#xA;override this.ExitErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorStructuredName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructuredNameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructuredName" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorStructureLine">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorStructureLine (LGTemplateParser.ErrorStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorStructureLine(LGTemplateParser/ErrorStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorStructureLine (context As LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; unit&#xA;override this.ExitErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitErrorTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitErrorTemplateString (LGTemplateParser.ErrorTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitErrorTemplateString(LGTemplateParser/ErrorTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitErrorTemplateString (context As LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; unit&#xA;override this.ExitErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitErrorTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitEveryRule">
      <MemberSignature Language="C#" Value="public virtual void ExitEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ExitExpression">
      <MemberSignature Language="C#" Value="public virtual void ExitExpression (LGTemplateParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpression(LGTemplateParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitExpression(LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitExpression (context As LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpression : LGTemplateParser.ExpressionContext -&gt; unit&#xA;override this.ExitExpression : LGTemplateParser.ExpressionContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitExpression context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitExpression(LGTemplateParser.ExpressionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.expression" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitExpressionInStructure">
      <MemberSignature Language="C#" Value="public virtual void ExitExpressionInStructure (LGTemplateParser.ExpressionInStructureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpressionInStructure(LGTemplateParser/ExpressionInStructureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitExpressionInStructure (context As LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; unit&#xA;override this.ExitExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitExpressionInStructure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionInStructureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.expressionInStructure" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfCondition">
      <MemberSignature Language="C#" Value="public virtual void ExitIfCondition (LGTemplateParser.IfConditionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfCondition(LGTemplateParser/IfConditionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitIfCondition(LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfCondition (context As LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfCondition : LGTemplateParser.IfConditionContext -&gt; unit&#xA;override this.ExitIfCondition : LGTemplateParser.IfConditionContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfCondition context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitIfCondition(LGTemplateParser.IfConditionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifCondition" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfConditionRule">
      <MemberSignature Language="C#" Value="public virtual void ExitIfConditionRule (LGTemplateParser.IfConditionRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfConditionRule(LGTemplateParser/IfConditionRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitIfConditionRule(LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfConditionRule (context As LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; unit&#xA;override this.ExitIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfConditionRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitIfConditionRule(LGTemplateParser.IfConditionRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifConditionRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfElseBody">
      <MemberSignature Language="C#" Value="public virtual void ExitIfElseBody (LGTemplateParser.IfElseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfElseBody(LGTemplateParser/IfElseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitIfElseBody(LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfElseBody (context As LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; unit&#xA;override this.ExitIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfElseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitIfElseBody(LGTemplateParser.IfElseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>ifElseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIfElseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitIfElseTemplateBody (LGTemplateParser.IfElseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIfElseTemplateBody(LGTemplateParser/IfElseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitIfElseTemplateBody (context As LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; unit&#xA;override this.ExitIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitIfElseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifElseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValueStructureLine">
      <MemberSignature Language="C#" Value="public virtual void ExitKeyValueStructureLine (LGTemplateParser.KeyValueStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValueStructureLine(LGTemplateParser/KeyValueStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitKeyValueStructureLine (context As LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; unit&#xA;override this.ExitKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitKeyValueStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValueStructureValue">
      <MemberSignature Language="C#" Value="public virtual void ExitKeyValueStructureValue (LGTemplateParser.KeyValueStructureValueContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValueStructureValue(LGTemplateParser/KeyValueStructureValueContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitKeyValueStructureValue (context As LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; unit&#xA;override this.ExitKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitKeyValueStructureValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureValueContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureValue" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalBody">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalBody (LGTemplateParser.NormalBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalBody(LGTemplateParser/NormalBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitNormalBody(LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalBody (context As LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalBody : LGTemplateParser.NormalBodyContext -&gt; unit&#xA;override this.ExitNormalBody : LGTemplateParser.NormalBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitNormalBody(LGTemplateParser.NormalBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>normalBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalTemplateBody (LGTemplateParser.NormalTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalTemplateBody(LGTemplateParser/NormalTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalTemplateBody (context As LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; unit&#xA;override this.ExitNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNormalTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitNormalTemplateString (LGTemplateParser.NormalTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNormalTemplateString(LGTemplateParser/NormalTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNormalTemplateString (context As LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; unit&#xA;override this.ExitNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitNormalTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBody">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBody (LGTemplateParser.StructuredBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBody(LGTemplateParser/StructuredBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitStructuredBody(LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBody (context As LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; unit&#xA;override this.ExitStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitStructuredBody(LGTemplateParser.StructuredBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>structuredBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyContentLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyContentLine (LGTemplateParser.StructuredBodyContentLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyContentLine(LGTemplateParser/StructuredBodyContentLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyContentLine (context As LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; unit&#xA;override this.ExitStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyContentLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContentLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyContentLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyEndLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyEndLine (LGTemplateParser.StructuredBodyEndLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyEndLine(LGTemplateParser/StructuredBodyEndLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyEndLine (context As LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; unit&#xA;override this.ExitStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyEndLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyEndLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyEndLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredBodyNameLine">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredBodyNameLine (LGTemplateParser.StructuredBodyNameLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredBodyNameLine(LGTemplateParser/StructuredBodyNameLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredBodyNameLine (context As LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; unit&#xA;override this.ExitStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredBodyNameLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyNameLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyNameLine" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStructuredTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitStructuredTemplateBody (LGTemplateParser.StructuredTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStructuredTemplateBody(LGTemplateParser/StructuredTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStructuredTemplateBody (context As LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; unit&#xA;override this.ExitStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitStructuredTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseBody">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseBody (LGTemplateParser.SwitchCaseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseBody(LGTemplateParser/SwitchCaseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseBody (context As LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; unit&#xA;override this.ExitSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>switchCaseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseRule">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseRule (LGTemplateParser.SwitchCaseRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseRule(LGTemplateParser/SwitchCaseRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseRule (context As LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; unit&#xA;override this.ExitSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseRule" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseStat">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseStat (LGTemplateParser.SwitchCaseStatContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseStat(LGTemplateParser/SwitchCaseStatContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseStat (context As LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; unit&#xA;override this.ExitSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseStat context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseStatContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseStat" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitSwitchCaseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual void ExitSwitchCaseTemplateBody (LGTemplateParser.SwitchCaseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitSwitchCaseTemplateBody(LGTemplateParser/SwitchCaseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitSwitchCaseTemplateBody (context As LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit&#xA;override this.ExitSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitSwitchCaseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseTemplateBody" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTemplateString">
      <MemberSignature Language="C#" Value="public virtual void ExitTemplateString (LGTemplateParser.TemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitTemplateString(LGTemplateParser/TemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.ExitTemplateString(LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitTemplateString (context As LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitTemplateString : LGTemplateParser.TemplateStringContext -&gt; unit&#xA;override this.ExitTemplateString : LGTemplateParser.TemplateStringContext -&gt; unit" Usage="lGTemplateParserBaseListener.ExitTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserListener.ExitTemplateString(LGTemplateParser.TemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+TemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:LGTemplateParser.templateString" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorNode">
      <MemberSignature Language="C#" Value="public virtual void VisitErrorNode (Antlr4.Runtime.Tree.IErrorNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitErrorNode(class Antlr4.Runtime.Tree.IErrorNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitErrorNode (node As IErrorNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit&#xA;override this.VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit" Usage="lGTemplateParserBaseListener.VisitErrorNode node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.IErrorNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitTerminal">
      <MemberSignature Language="C#" Value="public virtual void VisitTerminal (Antlr4.Runtime.Tree.ITerminalNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTerminal(class Antlr4.Runtime.Tree.ITerminalNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTerminal (node As ITerminalNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit&#xA;override this.VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit" Usage="lGTemplateParserBaseListener.VisitTerminal node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.ITerminalNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
