<Type Name="SkillHandler" FullName="Microsoft.Bot.Builder.Skills.SkillHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e0e40a74afe76c0e95971d3906fa1d744b88d3b" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95462540" /></Metadata><TypeSignature Language="C#" Value="public class SkillHandler : Microsoft.Bot.Builder.ChannelServiceHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SkillHandler extends Microsoft.Bot.Builder.ChannelServiceHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Skills.SkillHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SkillHandler&#xA;Inherits ChannelServiceHandler" />
  <TypeSignature Language="F#" Value="type SkillHandler = class&#xA;    inherit ChannelServiceHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.ChannelServiceHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Um manipulador de estrutura de bot para habilidades.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SkillHandler (Microsoft.Bot.Builder.BotAdapter adapter, Microsoft.Bot.Builder.IBot bot, Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase conversationIdFactory, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.BotAdapter adapter, class Microsoft.Bot.Builder.IBot bot, class Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase conversationIdFactory, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.SkillHandler.#ctor(Microsoft.Bot.Builder.BotAdapter,Microsoft.Bot.Builder.IBot,Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As BotAdapter, bot As IBot, conversationIdFactory As SkillConversationIdFactoryBase, credentialProvider As ICredentialProvider, authConfig As AuthenticationConfiguration, Optional channelProvider As IChannelProvider = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Skills.SkillHandler : Microsoft.Bot.Builder.BotAdapter * Microsoft.Bot.Builder.IBot * Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Builder.Skills.SkillHandler" Usage="new Microsoft.Bot.Builder.Skills.SkillHandler (adapter, bot, conversationIdFactory, credentialProvider, authConfig, channelProvider, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="Microsoft.Bot.Builder.BotAdapter" />
        <Parameter Name="bot" Type="Microsoft.Bot.Builder.IBot" />
        <Parameter Name="conversationIdFactory" Type="Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase" />
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="adapter">Uma instância do <see cref="T:Microsoft.Bot.Builder.BotAdapter" /> que manipulará a solicitação.</param>
        <param name="bot">A instância <see cref="T:Microsoft.Bot.Builder.IBot" />.</param>
        <param name="conversationIdFactory">Um <see cref="T:Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase" /> para descompactar a ID de conversa e mapeá-la para o bot de chamada.</param>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="authConfig">A configuração de autenticação.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da <see cref="T:Microsoft.Bot.Builder.Skills.SkillHandler" /> classe usando um provedor de credenciais.</summary>
        <remarks>Use um <see cref="T:Microsoft.Bot.Builder.MiddlewareSet" /> objeto para adicionar vários componentes de middleware no construtor. Use o método use ( <see cref="T:Microsoft.Bot.Builder.IMiddleware" /> ) para adicionar middleware adicional ao adaptador após a construção.</remarks>
        <exception cref="T:System.ArgumentNullException">lançar ArgumentNullException.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteActivityAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task OnDeleteActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task OnDeleteActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.SkillHandler.OnDeleteActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnDeleteActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.OnDeleteActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="skillHandler.OnDeleteActivityAsync (claimsIdentity, conversationId, activityId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">To be added.</param>
        <param name="conversationId">To be added.</param>
        <param name="activityId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnReplyToActivityAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnReplyToActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnReplyToActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.SkillHandler.OnReplyToActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnReplyToActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="override this.OnReplyToActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="skillHandler.OnReplyToActivityAsync (claimsIdentity, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="activityId">ActivityId a resposta é (opcional).</param>
        <param name="activity">Atividade a ser enviada.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API ReplyToActivity () para habilidade.</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Esse método permite que você responda a uma atividade.
            
Isso é um pouco diferente de SendToConversation ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendToConversationAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnSendToConversationAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnSendToConversationAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.SkillHandler.OnSendToConversationAsync(System.Security.Claims.ClaimsIdentity,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnSendToConversationAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="override this.OnSendToConversationAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="skillHandler.OnSendToConversationAsync (claimsIdentity, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">conversaid.</param>
        <param name="activity">Atividade a ser enviada.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API SendToConversation () para habilidade.</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Esse método permite que você envie uma atividade ao final de uma conversa.
            
Isso é um pouco diferente de ReplyToActivity ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnUpdateActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnUpdateActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.SkillHandler.OnUpdateActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnUpdateActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="override this.OnUpdateActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="skillHandler.OnUpdateActivityAsync (claimsIdentity, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">To be added.</param>
        <param name="conversationId">To be added.</param>
        <param name="activityId">To be added.</param>
        <param name="activity">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SkillConversationReferenceKey">
      <MemberSignature Language="C#" Value="public static readonly string SkillConversationReferenceKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SkillConversationReferenceKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.Skills.SkillHandler.SkillConversationReferenceKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SkillConversationReferenceKey As String " />
      <MemberSignature Language="F#" Value=" staticval mutable SkillConversationReferenceKey : string" Usage="Microsoft.Bot.Builder.Skills.SkillHandler.SkillConversationReferenceKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A referência de conversa de habilidades.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
