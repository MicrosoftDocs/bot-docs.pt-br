<Type Name="ICommonRegexVisitor&lt;Result&gt;" FullName="ICommonRegexVisitor&lt;Result&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b0132d38ebf8df9d7ed98958658fd4054887f57" /><Meta Name="ms.sourcegitcommit" Value="36928e6f81288095af0c66776a5ef320ec309c1a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/13/2020" /><Meta Name="ms.locfileid" Value="94617996" /></Metadata><TypeSignature Language="C#" Value="public interface ICommonRegexVisitor&lt;Result&gt; : Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommonRegexVisitor`1&lt;Result&gt; implements class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!Result&gt;" />
  <TypeSignature Language="DocId" Value="T:ICommonRegexVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommonRegexVisitor(Of Result)&#xA;Implements IParseTreeVisitor(Of Result)" />
  <TypeSignature Language="F#" Value="type ICommonRegexVisitor&lt;'Result&gt; = interface&#xA;    interface IParseTreeVisitor&lt;'Result&gt;" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Result" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="Result">O tipo de retorno da operação de visita.</typeparam>
    <summary>Essa interface define um visitante genérico completo para uma árvore de análise produzida pelo <see cref="T:CommonRegexParser" /> .</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="VisitAlpha_nums">
      <MemberSignature Language="C#" Value="public Result VisitAlpha_nums (CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAlpha_nums(CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitAlpha_nums(CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitAlpha_nums (context As CommonRegexParser.Alpha_numsContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAlpha_nums : CommonRegexParser.Alpha_numsContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitAlpha_nums context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.alpha_nums" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitAlternation">
      <MemberSignature Language="C#" Value="public Result VisitAlternation (CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAlternation(CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitAlternation(CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitAlternation (context As CommonRegexParser.AlternationContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAlternation : CommonRegexParser.AlternationContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitAlternation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.alternation" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitAtom">
      <MemberSignature Language="C#" Value="public Result VisitAtom (CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAtom(CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitAtom(CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitAtom (context As CommonRegexParser.AtomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAtom : CommonRegexParser.AtomContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.atom" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCapture">
      <MemberSignature Language="C#" Value="public Result VisitCapture (CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCapture(CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitCapture(CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitCapture (context As CommonRegexParser.CaptureContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCapture : CommonRegexParser.CaptureContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitCapture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.capture" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCc_atom">
      <MemberSignature Language="C#" Value="public Result VisitCc_atom (CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCc_atom(CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitCc_atom(CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitCc_atom (context As CommonRegexParser.Cc_atomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCc_atom : CommonRegexParser.Cc_atomContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitCc_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.cc_atom" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCc_literal">
      <MemberSignature Language="C#" Value="public Result VisitCc_literal (CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCc_literal(CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitCc_literal(CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitCc_literal (context As CommonRegexParser.Cc_literalContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCc_literal : CommonRegexParser.Cc_literalContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitCc_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.cc_literal" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCharacter_class">
      <MemberSignature Language="C#" Value="public Result VisitCharacter_class (CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCharacter_class(CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitCharacter_class(CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitCharacter_class (context As CommonRegexParser.Character_classContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCharacter_class : CommonRegexParser.Character_classContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitCharacter_class context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.character_class" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitDigit">
      <MemberSignature Language="C#" Value="public Result VisitDigit (CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitDigit(CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitDigit(CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitDigit (context As CommonRegexParser.DigitContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitDigit : CommonRegexParser.DigitContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitDigit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.digit" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitDigits">
      <MemberSignature Language="C#" Value="public Result VisitDigits (CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitDigits(CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitDigits(CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitDigits (context As CommonRegexParser.DigitsContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitDigits : CommonRegexParser.DigitsContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitDigits context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.digits" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitElement">
      <MemberSignature Language="C#" Value="public Result VisitElement (CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitElement(CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitElement(CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitElement (context As CommonRegexParser.ElementContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitElement : CommonRegexParser.ElementContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitElement context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.element" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitExpr">
      <MemberSignature Language="C#" Value="public Result VisitExpr (CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitExpr(CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitExpr(CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitExpr (context As CommonRegexParser.ExprContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitExpr : CommonRegexParser.ExprContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitExpr context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.expr" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitLetter">
      <MemberSignature Language="C#" Value="public Result VisitLetter (CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitLetter(CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitLetter(CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitLetter (context As CommonRegexParser.LetterContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitLetter : CommonRegexParser.LetterContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitLetter context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.letter" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteral">
      <MemberSignature Language="C#" Value="public Result VisitLiteral (CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitLiteral(CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitLiteral(CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitLiteral (context As CommonRegexParser.LiteralContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitLiteral : CommonRegexParser.LiteralContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitLiteral context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.literal" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitName">
      <MemberSignature Language="C#" Value="public Result VisitName (CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitName(CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitName(CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitName (context As CommonRegexParser.NameContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitName : CommonRegexParser.NameContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.name" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_capture">
      <MemberSignature Language="C#" Value="public Result VisitNon_capture (CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_capture(CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitNon_capture(CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitNon_capture (context As CommonRegexParser.Non_captureContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_capture : CommonRegexParser.Non_captureContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitNon_capture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.non_capture" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_close_paren">
      <MemberSignature Language="C#" Value="public Result VisitNon_close_paren (CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_close_paren(CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitNon_close_paren(CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitNon_close_paren (context As CommonRegexParser.Non_close_parenContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_close_paren : CommonRegexParser.Non_close_parenContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitNon_close_paren context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.non_close_paren" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_close_parens">
      <MemberSignature Language="C#" Value="public Result VisitNon_close_parens (CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_close_parens(CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitNon_close_parens(CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitNon_close_parens (context As CommonRegexParser.Non_close_parensContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_close_parens : CommonRegexParser.Non_close_parensContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitNon_close_parens context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.non_close_parens" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNumber">
      <MemberSignature Language="C#" Value="public Result VisitNumber (CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNumber(CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitNumber(CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitNumber (context As CommonRegexParser.NumberContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNumber : CommonRegexParser.NumberContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitNumber context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.number" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOctal_char">
      <MemberSignature Language="C#" Value="public Result VisitOctal_char (CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOctal_char(CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitOctal_char(CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitOctal_char (context As CommonRegexParser.Octal_charContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOctal_char : CommonRegexParser.Octal_charContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitOctal_char context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.octal_char" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOctal_digit">
      <MemberSignature Language="C#" Value="public Result VisitOctal_digit (CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOctal_digit(CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitOctal_digit(CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitOctal_digit (context As CommonRegexParser.Octal_digitContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOctal_digit : CommonRegexParser.Octal_digitContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitOctal_digit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.octal_digit" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOption">
      <MemberSignature Language="C#" Value="public Result VisitOption (CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOption(CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitOption(CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitOption (context As CommonRegexParser.OptionContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOption : CommonRegexParser.OptionContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitOption context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.option" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOption_flag">
      <MemberSignature Language="C#" Value="public Result VisitOption_flag (CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOption_flag(CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitOption_flag(CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitOption_flag (context As CommonRegexParser.Option_flagContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOption_flag : CommonRegexParser.Option_flagContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitOption_flag context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.option_flag" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitParse">
      <MemberSignature Language="C#" Value="public Result VisitParse (CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitParse(CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitParse(CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitParse (context As CommonRegexParser.ParseContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitParse : CommonRegexParser.ParseContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitParse context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.parse" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitQuantifier">
      <MemberSignature Language="C#" Value="public Result VisitQuantifier (CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitQuantifier(CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitQuantifier(CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitQuantifier (context As CommonRegexParser.QuantifierContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitQuantifier : CommonRegexParser.QuantifierContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitQuantifier context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.quantifier" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitQuantifier_type">
      <MemberSignature Language="C#" Value="public Result VisitQuantifier_type (CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitQuantifier_type(CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitQuantifier_type(CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitQuantifier_type (context As CommonRegexParser.Quantifier_typeContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitQuantifier_type : CommonRegexParser.Quantifier_typeContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitQuantifier_type context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.quantifier_type" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitShared_atom">
      <MemberSignature Language="C#" Value="public Result VisitShared_atom (CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitShared_atom(CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitShared_atom(CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitShared_atom (context As CommonRegexParser.Shared_atomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitShared_atom : CommonRegexParser.Shared_atomContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitShared_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.shared_atom" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitShared_literal">
      <MemberSignature Language="C#" Value="public Result VisitShared_literal (CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitShared_literal(CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:ICommonRegexVisitor`1.VisitShared_literal(CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function VisitShared_literal (context As CommonRegexParser.Shared_literalContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitShared_literal : CommonRegexParser.Shared_literalContext -&gt; 'Result" Usage="iCommonRegexVisitor.VisitShared_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:CommonRegexParser.shared_literal" /> .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
  </Members>
</Type>
