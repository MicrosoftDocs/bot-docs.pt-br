<Type Name="CommonRegexBaseListener" FullName="AdaptiveExpressions.CommonRegexBaseListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c82aeeece9f4fcc1e97b4f62da1eef624494e623" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151461" /></Metadata><TypeSignature Language="C#" Value="public class CommonRegexBaseListener : AdaptiveExpressions.ICommonRegexListener, Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommonRegexBaseListener extends System.Object implements class AdaptiveExpressions.ICommonRegexListener, class Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.CommonRegexBaseListener" />
  <TypeSignature Language="VB.NET" Value="Public Class CommonRegexBaseListener&#xA;Implements ICommonRegexListener, IParseTreeListener" />
  <TypeSignature Language="F#" Value="type CommonRegexBaseListener = class&#xA;    interface ICommonRegexListener&#xA;    interface IParseTreeListener" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AdaptiveExpressions.ICommonRegexListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa classe fornece uma implementação vazia do <see cref="T:AdaptiveExpressions.ICommonRegexListener" /> , que pode ser estendida para criar um ouvinte que precisa apenas manipular um subconjunto dos métodos disponíveis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonRegexBaseListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterAlpha_nums">
      <MemberSignature Language="C#" Value="public virtual void EnterAlpha_nums (AdaptiveExpressions.CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAlpha_nums(class AdaptiveExpressions.CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterAlpha_nums (context As CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit&#xA;override this.EnterAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit" Usage="commonRegexBaseListener.EnterAlpha_nums context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alpha_nums" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterAlternation">
      <MemberSignature Language="C#" Value="public virtual void EnterAlternation (AdaptiveExpressions.CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAlternation(class AdaptiveExpressions.CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterAlternation (context As CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit&#xA;override this.EnterAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit" Usage="commonRegexBaseListener.EnterAlternation context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alternation" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterAtom">
      <MemberSignature Language="C#" Value="public virtual void EnterAtom (AdaptiveExpressions.CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAtom(class AdaptiveExpressions.CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterAtom (context As CommonRegexParser.AtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit&#xA;override this.EnterAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit" Usage="commonRegexBaseListener.EnterAtom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCapture">
      <MemberSignature Language="C#" Value="public virtual void EnterCapture (AdaptiveExpressions.CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCapture(class AdaptiveExpressions.CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterCapture (context As CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit&#xA;override this.EnterCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit" Usage="commonRegexBaseListener.EnterCapture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.capture" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCc_atom">
      <MemberSignature Language="C#" Value="public virtual void EnterCc_atom (AdaptiveExpressions.CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCc_atom(class AdaptiveExpressions.CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterCc_atom (context As CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit&#xA;override this.EnterCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit" Usage="commonRegexBaseListener.EnterCc_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCc_literal">
      <MemberSignature Language="C#" Value="public virtual void EnterCc_literal (AdaptiveExpressions.CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCc_literal(class AdaptiveExpressions.CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterCc_literal (context As CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit&#xA;override this.EnterCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit" Usage="commonRegexBaseListener.EnterCc_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCharacter_class">
      <MemberSignature Language="C#" Value="public virtual void EnterCharacter_class (AdaptiveExpressions.CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCharacter_class(class AdaptiveExpressions.CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterCharacter_class (context As CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit&#xA;override this.EnterCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit" Usage="commonRegexBaseListener.EnterCharacter_class context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.character_class" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterDigit">
      <MemberSignature Language="C#" Value="public virtual void EnterDigit (AdaptiveExpressions.CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterDigit(class AdaptiveExpressions.CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterDigit (context As CommonRegexParser.DigitContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit&#xA;override this.EnterDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit" Usage="commonRegexBaseListener.EnterDigit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digit" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterDigits">
      <MemberSignature Language="C#" Value="public virtual void EnterDigits (AdaptiveExpressions.CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterDigits(class AdaptiveExpressions.CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterDigits (context As CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit&#xA;override this.EnterDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit" Usage="commonRegexBaseListener.EnterDigits context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digits" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterElement">
      <MemberSignature Language="C#" Value="public virtual void EnterElement (AdaptiveExpressions.CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterElement(class AdaptiveExpressions.CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterElement(AdaptiveExpressions.CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterElement (context As CommonRegexParser.ElementContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit&#xA;override this.EnterElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit" Usage="commonRegexBaseListener.EnterElement context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterElement(AdaptiveExpressions.CommonRegexParser.ElementContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.element" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterEveryRule">
      <MemberSignature Language="C#" Value="public virtual void EnterEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.EnterEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="commonRegexBaseListener.EnterEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EnterExpr">
      <MemberSignature Language="C#" Value="public virtual void EnterExpr (AdaptiveExpressions.CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpr(class AdaptiveExpressions.CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterExpr (context As CommonRegexParser.ExprContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit&#xA;override this.EnterExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit" Usage="commonRegexBaseListener.EnterExpr context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.expr" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterLetter">
      <MemberSignature Language="C#" Value="public virtual void EnterLetter (AdaptiveExpressions.CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterLetter(class AdaptiveExpressions.CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterLetter (context As CommonRegexParser.LetterContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit&#xA;override this.EnterLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit" Usage="commonRegexBaseListener.EnterLetter context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.letter" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterLiteral">
      <MemberSignature Language="C#" Value="public virtual void EnterLiteral (AdaptiveExpressions.CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterLiteral(class AdaptiveExpressions.CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterLiteral (context As CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit&#xA;override this.EnterLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit" Usage="commonRegexBaseListener.EnterLiteral context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterName">
      <MemberSignature Language="C#" Value="public virtual void EnterName (AdaptiveExpressions.CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterName(class AdaptiveExpressions.CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterName(AdaptiveExpressions.CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterName (context As CommonRegexParser.NameContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit&#xA;override this.EnterName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit" Usage="commonRegexBaseListener.EnterName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterName(AdaptiveExpressions.CommonRegexParser.NameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.name" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_capture">
      <MemberSignature Language="C#" Value="public virtual void EnterNon_capture (AdaptiveExpressions.CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_capture(class AdaptiveExpressions.CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNon_capture (context As CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit&#xA;override this.EnterNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit" Usage="commonRegexBaseListener.EnterNon_capture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_capture" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_close_paren">
      <MemberSignature Language="C#" Value="public virtual void EnterNon_close_paren (AdaptiveExpressions.CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_close_paren(class AdaptiveExpressions.CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNon_close_paren (context As CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit&#xA;override this.EnterNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit" Usage="commonRegexBaseListener.EnterNon_close_paren context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_paren" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_close_parens">
      <MemberSignature Language="C#" Value="public virtual void EnterNon_close_parens (AdaptiveExpressions.CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_close_parens(class AdaptiveExpressions.CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNon_close_parens (context As CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit&#xA;override this.EnterNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit" Usage="commonRegexBaseListener.EnterNon_close_parens context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_parens" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNumber">
      <MemberSignature Language="C#" Value="public virtual void EnterNumber (AdaptiveExpressions.CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNumber(class AdaptiveExpressions.CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterNumber (context As CommonRegexParser.NumberContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit&#xA;override this.EnterNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit" Usage="commonRegexBaseListener.EnterNumber context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.number" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOctal_char">
      <MemberSignature Language="C#" Value="public virtual void EnterOctal_char (AdaptiveExpressions.CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOctal_char(class AdaptiveExpressions.CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterOctal_char (context As CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit&#xA;override this.EnterOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit" Usage="commonRegexBaseListener.EnterOctal_char context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_char" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOctal_digit">
      <MemberSignature Language="C#" Value="public virtual void EnterOctal_digit (AdaptiveExpressions.CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOctal_digit(class AdaptiveExpressions.CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterOctal_digit (context As CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit&#xA;override this.EnterOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit" Usage="commonRegexBaseListener.EnterOctal_digit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_digit" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOption">
      <MemberSignature Language="C#" Value="public virtual void EnterOption (AdaptiveExpressions.CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOption(class AdaptiveExpressions.CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterOption(AdaptiveExpressions.CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterOption (context As CommonRegexParser.OptionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit&#xA;override this.EnterOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit" Usage="commonRegexBaseListener.EnterOption context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterOption(AdaptiveExpressions.CommonRegexParser.OptionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOption_flag">
      <MemberSignature Language="C#" Value="public virtual void EnterOption_flag (AdaptiveExpressions.CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOption_flag(class AdaptiveExpressions.CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterOption_flag (context As CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit&#xA;override this.EnterOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit" Usage="commonRegexBaseListener.EnterOption_flag context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option_flag" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterParse">
      <MemberSignature Language="C#" Value="public virtual void EnterParse (AdaptiveExpressions.CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterParse(class AdaptiveExpressions.CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterParse(AdaptiveExpressions.CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterParse (context As CommonRegexParser.ParseContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit&#xA;override this.EnterParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit" Usage="commonRegexBaseListener.EnterParse context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterParse(AdaptiveExpressions.CommonRegexParser.ParseContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.parse" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterQuantifier">
      <MemberSignature Language="C#" Value="public virtual void EnterQuantifier (AdaptiveExpressions.CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterQuantifier(class AdaptiveExpressions.CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterQuantifier (context As CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit&#xA;override this.EnterQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit" Usage="commonRegexBaseListener.EnterQuantifier context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterQuantifier_type">
      <MemberSignature Language="C#" Value="public virtual void EnterQuantifier_type (AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterQuantifier_type(class AdaptiveExpressions.CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterQuantifier_type (context As CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit&#xA;override this.EnterQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit" Usage="commonRegexBaseListener.EnterQuantifier_type context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier_type" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterShared_atom">
      <MemberSignature Language="C#" Value="public virtual void EnterShared_atom (AdaptiveExpressions.CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterShared_atom(class AdaptiveExpressions.CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterShared_atom (context As CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit&#xA;override this.EnterShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit" Usage="commonRegexBaseListener.EnterShared_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterShared_literal">
      <MemberSignature Language="C#" Value="public virtual void EnterShared_literal (AdaptiveExpressions.CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterShared_literal(class AdaptiveExpressions.CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.EnterShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterShared_literal (context As CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit&#xA;override this.EnterShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit" Usage="commonRegexBaseListener.EnterShared_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.EnterShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAlpha_nums">
      <MemberSignature Language="C#" Value="public virtual void ExitAlpha_nums (AdaptiveExpressions.CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAlpha_nums(class AdaptiveExpressions.CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitAlpha_nums (context As CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit&#xA;override this.ExitAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit" Usage="commonRegexBaseListener.ExitAlpha_nums context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alpha_nums" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAlternation">
      <MemberSignature Language="C#" Value="public virtual void ExitAlternation (AdaptiveExpressions.CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAlternation(class AdaptiveExpressions.CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitAlternation (context As CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit&#xA;override this.ExitAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit" Usage="commonRegexBaseListener.ExitAlternation context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alternation" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAtom">
      <MemberSignature Language="C#" Value="public virtual void ExitAtom (AdaptiveExpressions.CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAtom(class AdaptiveExpressions.CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitAtom (context As CommonRegexParser.AtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit&#xA;override this.ExitAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit" Usage="commonRegexBaseListener.ExitAtom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCapture">
      <MemberSignature Language="C#" Value="public virtual void ExitCapture (AdaptiveExpressions.CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCapture(class AdaptiveExpressions.CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitCapture (context As CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit&#xA;override this.ExitCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit" Usage="commonRegexBaseListener.ExitCapture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.capture" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCc_atom">
      <MemberSignature Language="C#" Value="public virtual void ExitCc_atom (AdaptiveExpressions.CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCc_atom(class AdaptiveExpressions.CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitCc_atom (context As CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit&#xA;override this.ExitCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit" Usage="commonRegexBaseListener.ExitCc_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCc_literal">
      <MemberSignature Language="C#" Value="public virtual void ExitCc_literal (AdaptiveExpressions.CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCc_literal(class AdaptiveExpressions.CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitCc_literal (context As CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit&#xA;override this.ExitCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit" Usage="commonRegexBaseListener.ExitCc_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCharacter_class">
      <MemberSignature Language="C#" Value="public virtual void ExitCharacter_class (AdaptiveExpressions.CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCharacter_class(class AdaptiveExpressions.CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitCharacter_class (context As CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit&#xA;override this.ExitCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit" Usage="commonRegexBaseListener.ExitCharacter_class context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.character_class" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitDigit">
      <MemberSignature Language="C#" Value="public virtual void ExitDigit (AdaptiveExpressions.CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitDigit(class AdaptiveExpressions.CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitDigit (context As CommonRegexParser.DigitContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit&#xA;override this.ExitDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit" Usage="commonRegexBaseListener.ExitDigit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digit" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitDigits">
      <MemberSignature Language="C#" Value="public virtual void ExitDigits (AdaptiveExpressions.CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitDigits(class AdaptiveExpressions.CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitDigits (context As CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit&#xA;override this.ExitDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit" Usage="commonRegexBaseListener.ExitDigits context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digits" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitElement">
      <MemberSignature Language="C#" Value="public virtual void ExitElement (AdaptiveExpressions.CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitElement(class AdaptiveExpressions.CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitElement(AdaptiveExpressions.CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitElement (context As CommonRegexParser.ElementContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit&#xA;override this.ExitElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit" Usage="commonRegexBaseListener.ExitElement context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitElement(AdaptiveExpressions.CommonRegexParser.ElementContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.element" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitEveryRule">
      <MemberSignature Language="C#" Value="public virtual void ExitEveryRule (Antlr4.Runtime.ParserRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitEveryRule(class Antlr4.Runtime.ParserRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitEveryRule (context As ParserRuleContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit&#xA;override this.ExitEveryRule : Antlr4.Runtime.ParserRuleContext -&gt; unit" Usage="commonRegexBaseListener.ExitEveryRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Antlr4.Runtime.ParserRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ExitExpr">
      <MemberSignature Language="C#" Value="public virtual void ExitExpr (AdaptiveExpressions.CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpr(class AdaptiveExpressions.CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitExpr (context As CommonRegexParser.ExprContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit&#xA;override this.ExitExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit" Usage="commonRegexBaseListener.ExitExpr context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.expr" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitLetter">
      <MemberSignature Language="C#" Value="public virtual void ExitLetter (AdaptiveExpressions.CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitLetter(class AdaptiveExpressions.CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitLetter (context As CommonRegexParser.LetterContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit&#xA;override this.ExitLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit" Usage="commonRegexBaseListener.ExitLetter context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.letter" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitLiteral">
      <MemberSignature Language="C#" Value="public virtual void ExitLiteral (AdaptiveExpressions.CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitLiteral(class AdaptiveExpressions.CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitLiteral (context As CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit&#xA;override this.ExitLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit" Usage="commonRegexBaseListener.ExitLiteral context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitName">
      <MemberSignature Language="C#" Value="public virtual void ExitName (AdaptiveExpressions.CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitName(class AdaptiveExpressions.CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitName(AdaptiveExpressions.CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitName (context As CommonRegexParser.NameContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit&#xA;override this.ExitName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit" Usage="commonRegexBaseListener.ExitName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitName(AdaptiveExpressions.CommonRegexParser.NameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.name" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_capture">
      <MemberSignature Language="C#" Value="public virtual void ExitNon_capture (AdaptiveExpressions.CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_capture(class AdaptiveExpressions.CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNon_capture (context As CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit&#xA;override this.ExitNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit" Usage="commonRegexBaseListener.ExitNon_capture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_capture" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_close_paren">
      <MemberSignature Language="C#" Value="public virtual void ExitNon_close_paren (AdaptiveExpressions.CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_close_paren(class AdaptiveExpressions.CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNon_close_paren (context As CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit&#xA;override this.ExitNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit" Usage="commonRegexBaseListener.ExitNon_close_paren context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_paren" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_close_parens">
      <MemberSignature Language="C#" Value="public virtual void ExitNon_close_parens (AdaptiveExpressions.CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_close_parens(class AdaptiveExpressions.CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNon_close_parens (context As CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit&#xA;override this.ExitNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit" Usage="commonRegexBaseListener.ExitNon_close_parens context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_parens" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNumber">
      <MemberSignature Language="C#" Value="public virtual void ExitNumber (AdaptiveExpressions.CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNumber(class AdaptiveExpressions.CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitNumber (context As CommonRegexParser.NumberContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit&#xA;override this.ExitNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit" Usage="commonRegexBaseListener.ExitNumber context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.number" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOctal_char">
      <MemberSignature Language="C#" Value="public virtual void ExitOctal_char (AdaptiveExpressions.CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOctal_char(class AdaptiveExpressions.CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitOctal_char (context As CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit&#xA;override this.ExitOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit" Usage="commonRegexBaseListener.ExitOctal_char context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_char" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOctal_digit">
      <MemberSignature Language="C#" Value="public virtual void ExitOctal_digit (AdaptiveExpressions.CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOctal_digit(class AdaptiveExpressions.CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitOctal_digit (context As CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit&#xA;override this.ExitOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit" Usage="commonRegexBaseListener.ExitOctal_digit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_digit" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOption">
      <MemberSignature Language="C#" Value="public virtual void ExitOption (AdaptiveExpressions.CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOption(class AdaptiveExpressions.CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitOption(AdaptiveExpressions.CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitOption (context As CommonRegexParser.OptionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit&#xA;override this.ExitOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit" Usage="commonRegexBaseListener.ExitOption context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitOption(AdaptiveExpressions.CommonRegexParser.OptionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOption_flag">
      <MemberSignature Language="C#" Value="public virtual void ExitOption_flag (AdaptiveExpressions.CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOption_flag(class AdaptiveExpressions.CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitOption_flag (context As CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit&#xA;override this.ExitOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit" Usage="commonRegexBaseListener.ExitOption_flag context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option_flag" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitParse">
      <MemberSignature Language="C#" Value="public virtual void ExitParse (AdaptiveExpressions.CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitParse(class AdaptiveExpressions.CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitParse(AdaptiveExpressions.CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitParse (context As CommonRegexParser.ParseContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit&#xA;override this.ExitParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit" Usage="commonRegexBaseListener.ExitParse context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitParse(AdaptiveExpressions.CommonRegexParser.ParseContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.parse" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitQuantifier">
      <MemberSignature Language="C#" Value="public virtual void ExitQuantifier (AdaptiveExpressions.CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitQuantifier(class AdaptiveExpressions.CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitQuantifier (context As CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit&#xA;override this.ExitQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit" Usage="commonRegexBaseListener.ExitQuantifier context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitQuantifier_type">
      <MemberSignature Language="C#" Value="public virtual void ExitQuantifier_type (AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitQuantifier_type(class AdaptiveExpressions.CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitQuantifier_type (context As CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit&#xA;override this.ExitQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit" Usage="commonRegexBaseListener.ExitQuantifier_type context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier_type" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitShared_atom">
      <MemberSignature Language="C#" Value="public virtual void ExitShared_atom (AdaptiveExpressions.CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitShared_atom(class AdaptiveExpressions.CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitShared_atom (context As CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit&#xA;override this.ExitShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit" Usage="commonRegexBaseListener.ExitShared_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_atom" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitShared_literal">
      <MemberSignature Language="C#" Value="public virtual void ExitShared_literal (AdaptiveExpressions.CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitShared_literal(class AdaptiveExpressions.CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.ExitShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitShared_literal (context As CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit&#xA;override this.ExitShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit" Usage="commonRegexBaseListener.ExitShared_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexListener.ExitShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_literal" /> .
            <para>A implementação padrão não faz nada.</para></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorNode">
      <MemberSignature Language="C#" Value="public virtual void VisitErrorNode (Antlr4.Runtime.Tree.IErrorNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitErrorNode(class Antlr4.Runtime.Tree.IErrorNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitErrorNode (node As IErrorNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit&#xA;override this.VisitErrorNode : Antlr4.Runtime.Tree.IErrorNode -&gt; unit" Usage="commonRegexBaseListener.VisitErrorNode node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.IErrorNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VisitTerminal">
      <MemberSignature Language="C#" Value="public virtual void VisitTerminal (Antlr4.Runtime.Tree.ITerminalNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTerminal(class Antlr4.Runtime.Tree.ITerminalNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTerminal (node As ITerminalNode)" />
      <MemberSignature Language="F#" Value="abstract member VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit&#xA;override this.VisitTerminal : Antlr4.Runtime.Tree.ITerminalNode -&gt; unit" Usage="commonRegexBaseListener.VisitTerminal node" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Antlr4.Runtime.Tree.IParseTreeListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Antlr4.Runtime.Tree.ITerminalNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <remarks>A implementação padrão não faz nada.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
