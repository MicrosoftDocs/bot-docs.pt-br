<Type Name="CommonRegexBaseVisitor&lt;Result&gt;" FullName="AdaptiveExpressions.CommonRegexBaseVisitor&lt;Result&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ef741cd196485cd71acd07a1e1a62905f28a5a1" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151460" /></Metadata><TypeSignature Language="C#" Value="public class CommonRegexBaseVisitor&lt;Result&gt; : Antlr4.Runtime.Tree.AbstractParseTreeVisitor&lt;Result&gt;, AdaptiveExpressions.ICommonRegexVisitor&lt;Result&gt;, Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommonRegexBaseVisitor`1&lt;Result&gt; extends Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1&lt;!Result&gt; implements class AdaptiveExpressions.ICommonRegexVisitor`1&lt;!Result&gt;, class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!Result&gt;" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.CommonRegexBaseVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class CommonRegexBaseVisitor(Of Result)&#xA;Inherits AbstractParseTreeVisitor(Of Result)&#xA;Implements ICommonRegexVisitor(Of Result), IParseTreeVisitor(Of Result)" />
  <TypeSignature Language="F#" Value="type CommonRegexBaseVisitor&lt;'Result&gt; = class&#xA;    inherit AbstractParseTreeVisitor&lt;'Result&gt;&#xA;    interface ICommonRegexVisitor&lt;'Result&gt;&#xA;    interface IParseTreeVisitor&lt;'Result&gt;" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Result" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Antlr4.Runtime.Tree.AbstractParseTreeVisitor&lt;Result&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Result</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>AdaptiveExpressions.ICommonRegexVisitor&lt;Result&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="Result">O tipo de retorno da operação de visita.</typeparam>
    <summary>Essa classe fornece uma implementação vazia do <see cref="T:AdaptiveExpressions.ICommonRegexVisitor`1" /> , que pode ser estendida para criar um visitante que só precisa manipular um subconjunto dos métodos disponíveis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonRegexBaseVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAlpha_nums">
      <MemberSignature Language="C#" Value="public virtual Result VisitAlpha_nums (AdaptiveExpressions.CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAlpha_nums(class AdaptiveExpressions.CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAlpha_nums (context As CommonRegexParser.Alpha_numsContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; 'Result&#xA;override this.VisitAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitAlpha_nums context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alpha_nums" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitAlternation">
      <MemberSignature Language="C#" Value="public virtual Result VisitAlternation (AdaptiveExpressions.CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAlternation(class AdaptiveExpressions.CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAlternation (context As CommonRegexParser.AlternationContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; 'Result&#xA;override this.VisitAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitAlternation context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alternation" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitAtom">
      <MemberSignature Language="C#" Value="public virtual Result VisitAtom (AdaptiveExpressions.CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitAtom(class AdaptiveExpressions.CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAtom (context As CommonRegexParser.AtomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; 'Result&#xA;override this.VisitAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitAtom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.atom" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCapture">
      <MemberSignature Language="C#" Value="public virtual Result VisitCapture (AdaptiveExpressions.CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCapture(class AdaptiveExpressions.CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCapture (context As CommonRegexParser.CaptureContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; 'Result&#xA;override this.VisitCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitCapture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.capture" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCc_atom">
      <MemberSignature Language="C#" Value="public virtual Result VisitCc_atom (AdaptiveExpressions.CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCc_atom(class AdaptiveExpressions.CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCc_atom (context As CommonRegexParser.Cc_atomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; 'Result&#xA;override this.VisitCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitCc_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_atom" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCc_literal">
      <MemberSignature Language="C#" Value="public virtual Result VisitCc_literal (AdaptiveExpressions.CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCc_literal(class AdaptiveExpressions.CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCc_literal (context As CommonRegexParser.Cc_literalContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; 'Result&#xA;override this.VisitCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitCc_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_literal" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitCharacter_class">
      <MemberSignature Language="C#" Value="public virtual Result VisitCharacter_class (AdaptiveExpressions.CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitCharacter_class(class AdaptiveExpressions.CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCharacter_class (context As CommonRegexParser.Character_classContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; 'Result&#xA;override this.VisitCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitCharacter_class context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.character_class" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitDigit">
      <MemberSignature Language="C#" Value="public virtual Result VisitDigit (AdaptiveExpressions.CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitDigit(class AdaptiveExpressions.CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDigit (context As CommonRegexParser.DigitContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; 'Result&#xA;override this.VisitDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitDigit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digit" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitDigits">
      <MemberSignature Language="C#" Value="public virtual Result VisitDigits (AdaptiveExpressions.CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitDigits(class AdaptiveExpressions.CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDigits (context As CommonRegexParser.DigitsContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; 'Result&#xA;override this.VisitDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitDigits context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digits" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitElement">
      <MemberSignature Language="C#" Value="public virtual Result VisitElement (AdaptiveExpressions.CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitElement(class AdaptiveExpressions.CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitElement(AdaptiveExpressions.CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitElement (context As CommonRegexParser.ElementContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; 'Result&#xA;override this.VisitElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitElement context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitElement(AdaptiveExpressions.CommonRegexParser.ElementContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.element" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitExpr">
      <MemberSignature Language="C#" Value="public virtual Result VisitExpr (AdaptiveExpressions.CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitExpr(class AdaptiveExpressions.CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitExpr (context As CommonRegexParser.ExprContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; 'Result&#xA;override this.VisitExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitExpr context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.expr" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitLetter">
      <MemberSignature Language="C#" Value="public virtual Result VisitLetter (AdaptiveExpressions.CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitLetter(class AdaptiveExpressions.CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLetter (context As CommonRegexParser.LetterContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; 'Result&#xA;override this.VisitLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitLetter context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.letter" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteral">
      <MemberSignature Language="C#" Value="public virtual Result VisitLiteral (AdaptiveExpressions.CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitLiteral(class AdaptiveExpressions.CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLiteral (context As CommonRegexParser.LiteralContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; 'Result&#xA;override this.VisitLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitLiteral context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.literal" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitName">
      <MemberSignature Language="C#" Value="public virtual Result VisitName (AdaptiveExpressions.CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitName(class AdaptiveExpressions.CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitName(AdaptiveExpressions.CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitName (context As CommonRegexParser.NameContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; 'Result&#xA;override this.VisitName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitName(AdaptiveExpressions.CommonRegexParser.NameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.name" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_capture">
      <MemberSignature Language="C#" Value="public virtual Result VisitNon_capture (AdaptiveExpressions.CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_capture(class AdaptiveExpressions.CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNon_capture (context As CommonRegexParser.Non_captureContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; 'Result&#xA;override this.VisitNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitNon_capture context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_capture" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_close_paren">
      <MemberSignature Language="C#" Value="public virtual Result VisitNon_close_paren (AdaptiveExpressions.CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_close_paren(class AdaptiveExpressions.CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNon_close_paren (context As CommonRegexParser.Non_close_parenContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; 'Result&#xA;override this.VisitNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitNon_close_paren context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_paren" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNon_close_parens">
      <MemberSignature Language="C#" Value="public virtual Result VisitNon_close_parens (AdaptiveExpressions.CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNon_close_parens(class AdaptiveExpressions.CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNon_close_parens (context As CommonRegexParser.Non_close_parensContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; 'Result&#xA;override this.VisitNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitNon_close_parens context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_parens" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNumber">
      <MemberSignature Language="C#" Value="public virtual Result VisitNumber (AdaptiveExpressions.CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNumber(class AdaptiveExpressions.CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNumber (context As CommonRegexParser.NumberContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; 'Result&#xA;override this.VisitNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitNumber context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.number" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOctal_char">
      <MemberSignature Language="C#" Value="public virtual Result VisitOctal_char (AdaptiveExpressions.CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOctal_char(class AdaptiveExpressions.CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOctal_char (context As CommonRegexParser.Octal_charContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; 'Result&#xA;override this.VisitOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitOctal_char context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_char" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOctal_digit">
      <MemberSignature Language="C#" Value="public virtual Result VisitOctal_digit (AdaptiveExpressions.CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOctal_digit(class AdaptiveExpressions.CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOctal_digit (context As CommonRegexParser.Octal_digitContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; 'Result&#xA;override this.VisitOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitOctal_digit context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_digit" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOption">
      <MemberSignature Language="C#" Value="public virtual Result VisitOption (AdaptiveExpressions.CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOption(class AdaptiveExpressions.CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitOption(AdaptiveExpressions.CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOption (context As CommonRegexParser.OptionContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; 'Result&#xA;override this.VisitOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitOption context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitOption(AdaptiveExpressions.CommonRegexParser.OptionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitOption_flag">
      <MemberSignature Language="C#" Value="public virtual Result VisitOption_flag (AdaptiveExpressions.CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitOption_flag(class AdaptiveExpressions.CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOption_flag (context As CommonRegexParser.Option_flagContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; 'Result&#xA;override this.VisitOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitOption_flag context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option_flag" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitParse">
      <MemberSignature Language="C#" Value="public virtual Result VisitParse (AdaptiveExpressions.CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitParse(class AdaptiveExpressions.CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitParse(AdaptiveExpressions.CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParse (context As CommonRegexParser.ParseContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; 'Result&#xA;override this.VisitParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitParse context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitParse(AdaptiveExpressions.CommonRegexParser.ParseContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.parse" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitQuantifier">
      <MemberSignature Language="C#" Value="public virtual Result VisitQuantifier (AdaptiveExpressions.CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitQuantifier(class AdaptiveExpressions.CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitQuantifier (context As CommonRegexParser.QuantifierContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; 'Result&#xA;override this.VisitQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitQuantifier context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitQuantifier_type">
      <MemberSignature Language="C#" Value="public virtual Result VisitQuantifier_type (AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitQuantifier_type(class AdaptiveExpressions.CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitQuantifier_type (context As CommonRegexParser.Quantifier_typeContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; 'Result&#xA;override this.VisitQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitQuantifier_type context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier_type" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitShared_atom">
      <MemberSignature Language="C#" Value="public virtual Result VisitShared_atom (AdaptiveExpressions.CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitShared_atom(class AdaptiveExpressions.CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitShared_atom (context As CommonRegexParser.Shared_atomContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; 'Result&#xA;override this.VisitShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitShared_atom context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_atom" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitShared_literal">
      <MemberSignature Language="C#" Value="public virtual Result VisitShared_literal (AdaptiveExpressions.CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitShared_literal(class AdaptiveExpressions.CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.CommonRegexBaseVisitor`1.VisitShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitShared_literal (context As CommonRegexParser.Shared_literalContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; 'Result&#xA;override this.VisitShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; 'Result" Usage="commonRegexBaseVisitor.VisitShared_literal context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:AdaptiveExpressions.ICommonRegexVisitor`1.VisitShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_literal" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
  </Members>
</Type>
