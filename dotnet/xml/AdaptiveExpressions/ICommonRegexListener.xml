<Type Name="ICommonRegexListener" FullName="AdaptiveExpressions.ICommonRegexListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b622893bb275430b2772ea4f110c721a5b81440c" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151303" /></Metadata><TypeSignature Language="C#" Value="public interface ICommonRegexListener : Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommonRegexListener implements class Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.ICommonRegexListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommonRegexListener&#xA;Implements IParseTreeListener" />
  <TypeSignature Language="F#" Value="type ICommonRegexListener = interface&#xA;    interface IParseTreeListener" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa interface define um ouvinte completo para uma árvore de análise produzida pelo <see cref="T:AdaptiveExpressions.CommonRegexParser" /> .</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnterAlpha_nums">
      <MemberSignature Language="C#" Value="public void EnterAlpha_nums (AdaptiveExpressions.CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAlpha_nums(class AdaptiveExpressions.CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterAlpha_nums (context As CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit" Usage="iCommonRegexListener.EnterAlpha_nums context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alpha_nums" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterAlternation">
      <MemberSignature Language="C#" Value="public void EnterAlternation (AdaptiveExpressions.CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAlternation(class AdaptiveExpressions.CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterAlternation (context As CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit" Usage="iCommonRegexListener.EnterAlternation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alternation" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterAtom">
      <MemberSignature Language="C#" Value="public void EnterAtom (AdaptiveExpressions.CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterAtom(class AdaptiveExpressions.CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterAtom (context As CommonRegexParser.AtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit" Usage="iCommonRegexListener.EnterAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCapture">
      <MemberSignature Language="C#" Value="public void EnterCapture (AdaptiveExpressions.CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCapture(class AdaptiveExpressions.CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterCapture (context As CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit" Usage="iCommonRegexListener.EnterCapture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.capture" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCc_atom">
      <MemberSignature Language="C#" Value="public void EnterCc_atom (AdaptiveExpressions.CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCc_atom(class AdaptiveExpressions.CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterCc_atom (context As CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit" Usage="iCommonRegexListener.EnterCc_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCc_literal">
      <MemberSignature Language="C#" Value="public void EnterCc_literal (AdaptiveExpressions.CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCc_literal(class AdaptiveExpressions.CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterCc_literal (context As CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit" Usage="iCommonRegexListener.EnterCc_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterCharacter_class">
      <MemberSignature Language="C#" Value="public void EnterCharacter_class (AdaptiveExpressions.CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterCharacter_class(class AdaptiveExpressions.CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterCharacter_class (context As CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit" Usage="iCommonRegexListener.EnterCharacter_class context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.character_class" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterDigit">
      <MemberSignature Language="C#" Value="public void EnterDigit (AdaptiveExpressions.CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterDigit(class AdaptiveExpressions.CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterDigit (context As CommonRegexParser.DigitContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit" Usage="iCommonRegexListener.EnterDigit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digit" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterDigits">
      <MemberSignature Language="C#" Value="public void EnterDigits (AdaptiveExpressions.CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterDigits(class AdaptiveExpressions.CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterDigits (context As CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit" Usage="iCommonRegexListener.EnterDigits context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digits" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterElement">
      <MemberSignature Language="C#" Value="public void EnterElement (AdaptiveExpressions.CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterElement(class AdaptiveExpressions.CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterElement(AdaptiveExpressions.CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterElement (context As CommonRegexParser.ElementContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit" Usage="iCommonRegexListener.EnterElement context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.element" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterExpr">
      <MemberSignature Language="C#" Value="public void EnterExpr (AdaptiveExpressions.CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpr(class AdaptiveExpressions.CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterExpr (context As CommonRegexParser.ExprContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit" Usage="iCommonRegexListener.EnterExpr context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.expr" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterLetter">
      <MemberSignature Language="C#" Value="public void EnterLetter (AdaptiveExpressions.CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterLetter(class AdaptiveExpressions.CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterLetter (context As CommonRegexParser.LetterContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit" Usage="iCommonRegexListener.EnterLetter context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.letter" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterLiteral">
      <MemberSignature Language="C#" Value="public void EnterLiteral (AdaptiveExpressions.CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterLiteral(class AdaptiveExpressions.CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterLiteral (context As CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit" Usage="iCommonRegexListener.EnterLiteral context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterName">
      <MemberSignature Language="C#" Value="public void EnterName (AdaptiveExpressions.CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterName(class AdaptiveExpressions.CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterName(AdaptiveExpressions.CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterName (context As CommonRegexParser.NameContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit" Usage="iCommonRegexListener.EnterName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.name" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_capture">
      <MemberSignature Language="C#" Value="public void EnterNon_capture (AdaptiveExpressions.CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_capture(class AdaptiveExpressions.CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterNon_capture (context As CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit" Usage="iCommonRegexListener.EnterNon_capture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_capture" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_close_paren">
      <MemberSignature Language="C#" Value="public void EnterNon_close_paren (AdaptiveExpressions.CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_close_paren(class AdaptiveExpressions.CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterNon_close_paren (context As CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit" Usage="iCommonRegexListener.EnterNon_close_paren context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_paren" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNon_close_parens">
      <MemberSignature Language="C#" Value="public void EnterNon_close_parens (AdaptiveExpressions.CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNon_close_parens(class AdaptiveExpressions.CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterNon_close_parens (context As CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit" Usage="iCommonRegexListener.EnterNon_close_parens context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_parens" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNumber">
      <MemberSignature Language="C#" Value="public void EnterNumber (AdaptiveExpressions.CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNumber(class AdaptiveExpressions.CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterNumber (context As CommonRegexParser.NumberContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit" Usage="iCommonRegexListener.EnterNumber context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.number" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOctal_char">
      <MemberSignature Language="C#" Value="public void EnterOctal_char (AdaptiveExpressions.CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOctal_char(class AdaptiveExpressions.CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterOctal_char (context As CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit" Usage="iCommonRegexListener.EnterOctal_char context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_char" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOctal_digit">
      <MemberSignature Language="C#" Value="public void EnterOctal_digit (AdaptiveExpressions.CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOctal_digit(class AdaptiveExpressions.CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterOctal_digit (context As CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit" Usage="iCommonRegexListener.EnterOctal_digit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_digit" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOption">
      <MemberSignature Language="C#" Value="public void EnterOption (AdaptiveExpressions.CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOption(class AdaptiveExpressions.CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterOption(AdaptiveExpressions.CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterOption (context As CommonRegexParser.OptionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit" Usage="iCommonRegexListener.EnterOption context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterOption_flag">
      <MemberSignature Language="C#" Value="public void EnterOption_flag (AdaptiveExpressions.CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterOption_flag(class AdaptiveExpressions.CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterOption_flag (context As CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit" Usage="iCommonRegexListener.EnterOption_flag context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option_flag" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterParse">
      <MemberSignature Language="C#" Value="public void EnterParse (AdaptiveExpressions.CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterParse(class AdaptiveExpressions.CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterParse(AdaptiveExpressions.CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterParse (context As CommonRegexParser.ParseContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit" Usage="iCommonRegexListener.EnterParse context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.parse" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterQuantifier">
      <MemberSignature Language="C#" Value="public void EnterQuantifier (AdaptiveExpressions.CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterQuantifier(class AdaptiveExpressions.CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterQuantifier (context As CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit" Usage="iCommonRegexListener.EnterQuantifier context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterQuantifier_type">
      <MemberSignature Language="C#" Value="public void EnterQuantifier_type (AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterQuantifier_type(class AdaptiveExpressions.CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterQuantifier_type (context As CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit" Usage="iCommonRegexListener.EnterQuantifier_type context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier_type" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterShared_atom">
      <MemberSignature Language="C#" Value="public void EnterShared_atom (AdaptiveExpressions.CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterShared_atom(class AdaptiveExpressions.CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterShared_atom (context As CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit" Usage="iCommonRegexListener.EnterShared_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterShared_literal">
      <MemberSignature Language="C#" Value="public void EnterShared_literal (AdaptiveExpressions.CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterShared_literal(class AdaptiveExpressions.CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.EnterShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterShared_literal (context As CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit" Usage="iCommonRegexListener.EnterShared_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAlpha_nums">
      <MemberSignature Language="C#" Value="public void ExitAlpha_nums (AdaptiveExpressions.CommonRegexParser.Alpha_numsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAlpha_nums(class AdaptiveExpressions.CommonRegexParser/Alpha_numsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitAlpha_nums(AdaptiveExpressions.CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitAlpha_nums (context As CommonRegexParser.Alpha_numsContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAlpha_nums : AdaptiveExpressions.CommonRegexParser.Alpha_numsContext -&gt; unit" Usage="iCommonRegexListener.ExitAlpha_nums context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Alpha_numsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alpha_nums" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAlternation">
      <MemberSignature Language="C#" Value="public void ExitAlternation (AdaptiveExpressions.CommonRegexParser.AlternationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAlternation(class AdaptiveExpressions.CommonRegexParser/AlternationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitAlternation(AdaptiveExpressions.CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitAlternation (context As CommonRegexParser.AlternationContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAlternation : AdaptiveExpressions.CommonRegexParser.AlternationContext -&gt; unit" Usage="iCommonRegexListener.ExitAlternation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AlternationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.alternation" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitAtom">
      <MemberSignature Language="C#" Value="public void ExitAtom (AdaptiveExpressions.CommonRegexParser.AtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitAtom(class AdaptiveExpressions.CommonRegexParser/AtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitAtom(AdaptiveExpressions.CommonRegexParser.AtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitAtom (context As CommonRegexParser.AtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitAtom : AdaptiveExpressions.CommonRegexParser.AtomContext -&gt; unit" Usage="iCommonRegexListener.ExitAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+AtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCapture">
      <MemberSignature Language="C#" Value="public void ExitCapture (AdaptiveExpressions.CommonRegexParser.CaptureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCapture(class AdaptiveExpressions.CommonRegexParser/CaptureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitCapture(AdaptiveExpressions.CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitCapture (context As CommonRegexParser.CaptureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCapture : AdaptiveExpressions.CommonRegexParser.CaptureContext -&gt; unit" Usage="iCommonRegexListener.ExitCapture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+CaptureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.capture" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCc_atom">
      <MemberSignature Language="C#" Value="public void ExitCc_atom (AdaptiveExpressions.CommonRegexParser.Cc_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCc_atom(class AdaptiveExpressions.CommonRegexParser/Cc_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitCc_atom(AdaptiveExpressions.CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitCc_atom (context As CommonRegexParser.Cc_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCc_atom : AdaptiveExpressions.CommonRegexParser.Cc_atomContext -&gt; unit" Usage="iCommonRegexListener.ExitCc_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCc_literal">
      <MemberSignature Language="C#" Value="public void ExitCc_literal (AdaptiveExpressions.CommonRegexParser.Cc_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCc_literal(class AdaptiveExpressions.CommonRegexParser/Cc_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitCc_literal(AdaptiveExpressions.CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitCc_literal (context As CommonRegexParser.Cc_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCc_literal : AdaptiveExpressions.CommonRegexParser.Cc_literalContext -&gt; unit" Usage="iCommonRegexListener.ExitCc_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Cc_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.cc_literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCharacter_class">
      <MemberSignature Language="C#" Value="public void ExitCharacter_class (AdaptiveExpressions.CommonRegexParser.Character_classContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitCharacter_class(class AdaptiveExpressions.CommonRegexParser/Character_classContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitCharacter_class(AdaptiveExpressions.CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitCharacter_class (context As CommonRegexParser.Character_classContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitCharacter_class : AdaptiveExpressions.CommonRegexParser.Character_classContext -&gt; unit" Usage="iCommonRegexListener.ExitCharacter_class context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Character_classContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.character_class" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitDigit">
      <MemberSignature Language="C#" Value="public void ExitDigit (AdaptiveExpressions.CommonRegexParser.DigitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitDigit(class AdaptiveExpressions.CommonRegexParser/DigitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitDigit(AdaptiveExpressions.CommonRegexParser.DigitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitDigit (context As CommonRegexParser.DigitContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitDigit : AdaptiveExpressions.CommonRegexParser.DigitContext -&gt; unit" Usage="iCommonRegexListener.ExitDigit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digit" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitDigits">
      <MemberSignature Language="C#" Value="public void ExitDigits (AdaptiveExpressions.CommonRegexParser.DigitsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitDigits(class AdaptiveExpressions.CommonRegexParser/DigitsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitDigits(AdaptiveExpressions.CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitDigits (context As CommonRegexParser.DigitsContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitDigits : AdaptiveExpressions.CommonRegexParser.DigitsContext -&gt; unit" Usage="iCommonRegexListener.ExitDigits context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+DigitsContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.digits" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitElement">
      <MemberSignature Language="C#" Value="public void ExitElement (AdaptiveExpressions.CommonRegexParser.ElementContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitElement(class AdaptiveExpressions.CommonRegexParser/ElementContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitElement(AdaptiveExpressions.CommonRegexParser.ElementContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitElement (context As CommonRegexParser.ElementContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitElement : AdaptiveExpressions.CommonRegexParser.ElementContext -&gt; unit" Usage="iCommonRegexListener.ExitElement context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ElementContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.element" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitExpr">
      <MemberSignature Language="C#" Value="public void ExitExpr (AdaptiveExpressions.CommonRegexParser.ExprContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpr(class AdaptiveExpressions.CommonRegexParser/ExprContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitExpr(AdaptiveExpressions.CommonRegexParser.ExprContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitExpr (context As CommonRegexParser.ExprContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpr : AdaptiveExpressions.CommonRegexParser.ExprContext -&gt; unit" Usage="iCommonRegexListener.ExitExpr context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ExprContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.expr" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitLetter">
      <MemberSignature Language="C#" Value="public void ExitLetter (AdaptiveExpressions.CommonRegexParser.LetterContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitLetter(class AdaptiveExpressions.CommonRegexParser/LetterContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitLetter(AdaptiveExpressions.CommonRegexParser.LetterContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitLetter (context As CommonRegexParser.LetterContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitLetter : AdaptiveExpressions.CommonRegexParser.LetterContext -&gt; unit" Usage="iCommonRegexListener.ExitLetter context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LetterContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.letter" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitLiteral">
      <MemberSignature Language="C#" Value="public void ExitLiteral (AdaptiveExpressions.CommonRegexParser.LiteralContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitLiteral(class AdaptiveExpressions.CommonRegexParser/LiteralContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitLiteral(AdaptiveExpressions.CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitLiteral (context As CommonRegexParser.LiteralContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitLiteral : AdaptiveExpressions.CommonRegexParser.LiteralContext -&gt; unit" Usage="iCommonRegexListener.ExitLiteral context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+LiteralContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitName">
      <MemberSignature Language="C#" Value="public void ExitName (AdaptiveExpressions.CommonRegexParser.NameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitName(class AdaptiveExpressions.CommonRegexParser/NameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitName(AdaptiveExpressions.CommonRegexParser.NameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitName (context As CommonRegexParser.NameContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitName : AdaptiveExpressions.CommonRegexParser.NameContext -&gt; unit" Usage="iCommonRegexListener.ExitName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.name" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_capture">
      <MemberSignature Language="C#" Value="public void ExitNon_capture (AdaptiveExpressions.CommonRegexParser.Non_captureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_capture(class AdaptiveExpressions.CommonRegexParser/Non_captureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitNon_capture(AdaptiveExpressions.CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitNon_capture (context As CommonRegexParser.Non_captureContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_capture : AdaptiveExpressions.CommonRegexParser.Non_captureContext -&gt; unit" Usage="iCommonRegexListener.ExitNon_capture context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_captureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_capture" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_close_paren">
      <MemberSignature Language="C#" Value="public void ExitNon_close_paren (AdaptiveExpressions.CommonRegexParser.Non_close_parenContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_close_paren(class AdaptiveExpressions.CommonRegexParser/Non_close_parenContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitNon_close_paren(AdaptiveExpressions.CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitNon_close_paren (context As CommonRegexParser.Non_close_parenContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_close_paren : AdaptiveExpressions.CommonRegexParser.Non_close_parenContext -&gt; unit" Usage="iCommonRegexListener.ExitNon_close_paren context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parenContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_paren" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNon_close_parens">
      <MemberSignature Language="C#" Value="public void ExitNon_close_parens (AdaptiveExpressions.CommonRegexParser.Non_close_parensContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNon_close_parens(class AdaptiveExpressions.CommonRegexParser/Non_close_parensContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitNon_close_parens(AdaptiveExpressions.CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitNon_close_parens (context As CommonRegexParser.Non_close_parensContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNon_close_parens : AdaptiveExpressions.CommonRegexParser.Non_close_parensContext -&gt; unit" Usage="iCommonRegexListener.ExitNon_close_parens context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Non_close_parensContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.non_close_parens" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNumber">
      <MemberSignature Language="C#" Value="public void ExitNumber (AdaptiveExpressions.CommonRegexParser.NumberContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNumber(class AdaptiveExpressions.CommonRegexParser/NumberContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitNumber(AdaptiveExpressions.CommonRegexParser.NumberContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitNumber (context As CommonRegexParser.NumberContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNumber : AdaptiveExpressions.CommonRegexParser.NumberContext -&gt; unit" Usage="iCommonRegexListener.ExitNumber context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+NumberContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.number" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOctal_char">
      <MemberSignature Language="C#" Value="public void ExitOctal_char (AdaptiveExpressions.CommonRegexParser.Octal_charContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOctal_char(class AdaptiveExpressions.CommonRegexParser/Octal_charContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitOctal_char(AdaptiveExpressions.CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitOctal_char (context As CommonRegexParser.Octal_charContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOctal_char : AdaptiveExpressions.CommonRegexParser.Octal_charContext -&gt; unit" Usage="iCommonRegexListener.ExitOctal_char context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_charContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_char" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOctal_digit">
      <MemberSignature Language="C#" Value="public void ExitOctal_digit (AdaptiveExpressions.CommonRegexParser.Octal_digitContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOctal_digit(class AdaptiveExpressions.CommonRegexParser/Octal_digitContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitOctal_digit(AdaptiveExpressions.CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitOctal_digit (context As CommonRegexParser.Octal_digitContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOctal_digit : AdaptiveExpressions.CommonRegexParser.Octal_digitContext -&gt; unit" Usage="iCommonRegexListener.ExitOctal_digit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Octal_digitContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.octal_digit" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOption">
      <MemberSignature Language="C#" Value="public void ExitOption (AdaptiveExpressions.CommonRegexParser.OptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOption(class AdaptiveExpressions.CommonRegexParser/OptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitOption(AdaptiveExpressions.CommonRegexParser.OptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitOption (context As CommonRegexParser.OptionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOption : AdaptiveExpressions.CommonRegexParser.OptionContext -&gt; unit" Usage="iCommonRegexListener.ExitOption context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+OptionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitOption_flag">
      <MemberSignature Language="C#" Value="public void ExitOption_flag (AdaptiveExpressions.CommonRegexParser.Option_flagContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitOption_flag(class AdaptiveExpressions.CommonRegexParser/Option_flagContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitOption_flag(AdaptiveExpressions.CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitOption_flag (context As CommonRegexParser.Option_flagContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitOption_flag : AdaptiveExpressions.CommonRegexParser.Option_flagContext -&gt; unit" Usage="iCommonRegexListener.ExitOption_flag context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Option_flagContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.option_flag" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitParse">
      <MemberSignature Language="C#" Value="public void ExitParse (AdaptiveExpressions.CommonRegexParser.ParseContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitParse(class AdaptiveExpressions.CommonRegexParser/ParseContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitParse(AdaptiveExpressions.CommonRegexParser.ParseContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitParse (context As CommonRegexParser.ParseContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitParse : AdaptiveExpressions.CommonRegexParser.ParseContext -&gt; unit" Usage="iCommonRegexListener.ExitParse context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+ParseContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.parse" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitQuantifier">
      <MemberSignature Language="C#" Value="public void ExitQuantifier (AdaptiveExpressions.CommonRegexParser.QuantifierContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitQuantifier(class AdaptiveExpressions.CommonRegexParser/QuantifierContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitQuantifier(AdaptiveExpressions.CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitQuantifier (context As CommonRegexParser.QuantifierContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitQuantifier : AdaptiveExpressions.CommonRegexParser.QuantifierContext -&gt; unit" Usage="iCommonRegexListener.ExitQuantifier context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+QuantifierContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitQuantifier_type">
      <MemberSignature Language="C#" Value="public void ExitQuantifier_type (AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitQuantifier_type(class AdaptiveExpressions.CommonRegexParser/Quantifier_typeContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitQuantifier_type(AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitQuantifier_type (context As CommonRegexParser.Quantifier_typeContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitQuantifier_type : AdaptiveExpressions.CommonRegexParser.Quantifier_typeContext -&gt; unit" Usage="iCommonRegexListener.ExitQuantifier_type context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Quantifier_typeContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.quantifier_type" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitShared_atom">
      <MemberSignature Language="C#" Value="public void ExitShared_atom (AdaptiveExpressions.CommonRegexParser.Shared_atomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitShared_atom(class AdaptiveExpressions.CommonRegexParser/Shared_atomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitShared_atom(AdaptiveExpressions.CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitShared_atom (context As CommonRegexParser.Shared_atomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitShared_atom : AdaptiveExpressions.CommonRegexParser.Shared_atomContext -&gt; unit" Usage="iCommonRegexListener.ExitShared_atom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_atomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_atom" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitShared_literal">
      <MemberSignature Language="C#" Value="public void ExitShared_literal (AdaptiveExpressions.CommonRegexParser.Shared_literalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitShared_literal(class AdaptiveExpressions.CommonRegexParser/Shared_literalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.ICommonRegexListener.ExitShared_literal(AdaptiveExpressions.CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitShared_literal (context As CommonRegexParser.Shared_literalContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitShared_literal : AdaptiveExpressions.CommonRegexParser.Shared_literalContext -&gt; unit" Usage="iCommonRegexListener.ExitShared_literal context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.CommonRegexParser+Shared_literalContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.CommonRegexParser.shared_literal" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
