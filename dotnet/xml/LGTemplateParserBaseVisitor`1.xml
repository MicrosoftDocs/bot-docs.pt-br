<Type Name="LGTemplateParserBaseVisitor&lt;Result&gt;" FullName="LGTemplateParserBaseVisitor&lt;Result&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2c31c4200308043a6975b2adad0f04510870e71" /><Meta Name="ms.sourcegitcommit" Value="36928e6f81288095af0c66776a5ef320ec309c1a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/13/2020" /><Meta Name="ms.locfileid" Value="94618190" /></Metadata><TypeSignature Language="C#" Value="public class LGTemplateParserBaseVisitor&lt;Result&gt; : Antlr4.Runtime.Tree.AbstractParseTreeVisitor&lt;Result&gt;, Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;, ILGTemplateParserVisitor&lt;Result&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LGTemplateParserBaseVisitor`1&lt;Result&gt; extends Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1&lt;!Result&gt; implements class Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;!Result&gt;, ILGTemplateParserVisitor`1&lt;!Result&gt;" />
  <TypeSignature Language="DocId" Value="T:LGTemplateParserBaseVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class LGTemplateParserBaseVisitor(Of Result)&#xA;Inherits AbstractParseTreeVisitor(Of Result)&#xA;Implements ILGTemplateParserVisitor(Of Result), IParseTreeVisitor(Of Result)" />
  <TypeSignature Language="F#" Value="type LGTemplateParserBaseVisitor&lt;'Result&gt; = class&#xA;    inherit AbstractParseTreeVisitor&lt;'Result&gt;&#xA;    interface ILGTemplateParserVisitor&lt;'Result&gt;&#xA;    interface IParseTreeVisitor&lt;'Result&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="Result" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Antlr4.Runtime.Tree.AbstractParseTreeVisitor&lt;Result&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Result</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeVisitor&lt;Result&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ILGTemplateParserVisitor&lt;Result&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="Result">O tipo de retorno da operação de visita.</typeparam>
    <summary>Essa classe fornece uma implementação vazia do <see cref="T:ILGTemplateParserVisitor`1" /> , que pode ser estendida para criar um visitante que só precisa manipular um subconjunto dos métodos disponíveis.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LGTemplateParserBaseVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitContext">
      <MemberSignature Language="C#" Value="public virtual Result VisitContext (LGTemplateParser.ContextContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitContext(LGTemplateParser/ContextContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitContext(LGTemplateParser.ContextContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitContext (context As LGTemplateParser.ContextContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitContext : LGTemplateParser.ContextContext -&gt; 'Result&#xA;override this.VisitContext : LGTemplateParser.ContextContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitContext context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitContext(LGTemplateParser.ContextContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ContextContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.context" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorStructuredName">
      <MemberSignature Language="C#" Value="public virtual Result VisitErrorStructuredName (LGTemplateParser.ErrorStructuredNameContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitErrorStructuredName(LGTemplateParser/ErrorStructuredNameContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitErrorStructuredName (context As LGTemplateParser.ErrorStructuredNameContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; 'Result&#xA;override this.VisitErrorStructuredName : LGTemplateParser.ErrorStructuredNameContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitErrorStructuredName context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitErrorStructuredName(LGTemplateParser.ErrorStructuredNameContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructuredNameContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructuredName" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorStructureLine">
      <MemberSignature Language="C#" Value="public virtual Result VisitErrorStructureLine (LGTemplateParser.ErrorStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitErrorStructureLine(LGTemplateParser/ErrorStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitErrorStructureLine (context As LGTemplateParser.ErrorStructureLineContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; 'Result&#xA;override this.VisitErrorStructureLine : LGTemplateParser.ErrorStructureLineContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitErrorStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitErrorStructureLine(LGTemplateParser.ErrorStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorStructureLine" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitErrorTemplateString">
      <MemberSignature Language="C#" Value="public virtual Result VisitErrorTemplateString (LGTemplateParser.ErrorTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitErrorTemplateString(LGTemplateParser/ErrorTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitErrorTemplateString (context As LGTemplateParser.ErrorTemplateStringContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; 'Result&#xA;override this.VisitErrorTemplateString : LGTemplateParser.ErrorTemplateStringContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitErrorTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitErrorTemplateString(LGTemplateParser.ErrorTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ErrorTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.errorTemplateString" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitExpression">
      <MemberSignature Language="C#" Value="public virtual Result VisitExpression (LGTemplateParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitExpression(LGTemplateParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitExpression(LGTemplateParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitExpression (context As LGTemplateParser.ExpressionContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitExpression : LGTemplateParser.ExpressionContext -&gt; 'Result&#xA;override this.VisitExpression : LGTemplateParser.ExpressionContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitExpression context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitExpression(LGTemplateParser.ExpressionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.expression" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionInStructure">
      <MemberSignature Language="C#" Value="public virtual Result VisitExpressionInStructure (LGTemplateParser.ExpressionInStructureContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitExpressionInStructure(LGTemplateParser/ExpressionInStructureContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitExpressionInStructure (context As LGTemplateParser.ExpressionInStructureContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; 'Result&#xA;override this.VisitExpressionInStructure : LGTemplateParser.ExpressionInStructureContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitExpressionInStructure context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitExpressionInStructure(LGTemplateParser.ExpressionInStructureContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+ExpressionInStructureContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.expressionInStructure" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitIfCondition">
      <MemberSignature Language="C#" Value="public virtual Result VisitIfCondition (LGTemplateParser.IfConditionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitIfCondition(LGTemplateParser/IfConditionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitIfCondition(LGTemplateParser.IfConditionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfCondition (context As LGTemplateParser.IfConditionContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitIfCondition : LGTemplateParser.IfConditionContext -&gt; 'Result&#xA;override this.VisitIfCondition : LGTemplateParser.IfConditionContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitIfCondition context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitIfCondition(LGTemplateParser.IfConditionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifCondition" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitIfConditionRule">
      <MemberSignature Language="C#" Value="public virtual Result VisitIfConditionRule (LGTemplateParser.IfConditionRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitIfConditionRule(LGTemplateParser/IfConditionRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitIfConditionRule(LGTemplateParser.IfConditionRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfConditionRule (context As LGTemplateParser.IfConditionRuleContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; 'Result&#xA;override this.VisitIfConditionRule : LGTemplateParser.IfConditionRuleContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitIfConditionRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitIfConditionRule(LGTemplateParser.IfConditionRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfConditionRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifConditionRule" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitIfElseBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitIfElseBody (LGTemplateParser.IfElseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitIfElseBody(LGTemplateParser/IfElseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitIfElseBody(LGTemplateParser.IfElseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfElseBody (context As LGTemplateParser.IfElseBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; 'Result&#xA;override this.VisitIfElseBody : LGTemplateParser.IfElseBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitIfElseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitIfElseBody(LGTemplateParser.IfElseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida pelo <c>ifElseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitIfElseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitIfElseTemplateBody (LGTemplateParser.IfElseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitIfElseTemplateBody(LGTemplateParser/IfElseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfElseTemplateBody (context As LGTemplateParser.IfElseTemplateBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; 'Result&#xA;override this.VisitIfElseTemplateBody : LGTemplateParser.IfElseTemplateBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitIfElseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitIfElseTemplateBody(LGTemplateParser.IfElseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+IfElseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.ifElseTemplateBody" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitKeyValueStructureLine">
      <MemberSignature Language="C#" Value="public virtual Result VisitKeyValueStructureLine (LGTemplateParser.KeyValueStructureLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitKeyValueStructureLine(LGTemplateParser/KeyValueStructureLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitKeyValueStructureLine (context As LGTemplateParser.KeyValueStructureLineContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; 'Result&#xA;override this.VisitKeyValueStructureLine : LGTemplateParser.KeyValueStructureLineContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitKeyValueStructureLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitKeyValueStructureLine(LGTemplateParser.KeyValueStructureLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureLine" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitKeyValueStructureValue">
      <MemberSignature Language="C#" Value="public virtual Result VisitKeyValueStructureValue (LGTemplateParser.KeyValueStructureValueContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitKeyValueStructureValue(LGTemplateParser/KeyValueStructureValueContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitKeyValueStructureValue (context As LGTemplateParser.KeyValueStructureValueContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; 'Result&#xA;override this.VisitKeyValueStructureValue : LGTemplateParser.KeyValueStructureValueContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitKeyValueStructureValue context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitKeyValueStructureValue(LGTemplateParser.KeyValueStructureValueContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+KeyValueStructureValueContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.keyValueStructureValue" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNormalBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitNormalBody (LGTemplateParser.NormalBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNormalBody(LGTemplateParser/NormalBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitNormalBody(LGTemplateParser.NormalBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNormalBody (context As LGTemplateParser.NormalBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNormalBody : LGTemplateParser.NormalBodyContext -&gt; 'Result&#xA;override this.VisitNormalBody : LGTemplateParser.NormalBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitNormalBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitNormalBody(LGTemplateParser.NormalBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida pelo <c>normalBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNormalTemplateBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitNormalTemplateBody (LGTemplateParser.NormalTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNormalTemplateBody(LGTemplateParser/NormalTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNormalTemplateBody (context As LGTemplateParser.NormalTemplateBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; 'Result&#xA;override this.VisitNormalTemplateBody : LGTemplateParser.NormalTemplateBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitNormalTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitNormalTemplateBody(LGTemplateParser.NormalTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateBody" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitNormalTemplateString">
      <MemberSignature Language="C#" Value="public virtual Result VisitNormalTemplateString (LGTemplateParser.NormalTemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitNormalTemplateString(LGTemplateParser/NormalTemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNormalTemplateString (context As LGTemplateParser.NormalTemplateStringContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; 'Result&#xA;override this.VisitNormalTemplateString : LGTemplateParser.NormalTemplateStringContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitNormalTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitNormalTemplateString(LGTemplateParser.NormalTemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+NormalTemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.normalTemplateString" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitStructuredBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitStructuredBody (LGTemplateParser.StructuredBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitStructuredBody(LGTemplateParser/StructuredBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitStructuredBody(LGTemplateParser.StructuredBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStructuredBody (context As LGTemplateParser.StructuredBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; 'Result&#xA;override this.VisitStructuredBody : LGTemplateParser.StructuredBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitStructuredBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitStructuredBody(LGTemplateParser.StructuredBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida pelo <c>structuredBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitStructuredBodyContentLine">
      <MemberSignature Language="C#" Value="public virtual Result VisitStructuredBodyContentLine (LGTemplateParser.StructuredBodyContentLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitStructuredBodyContentLine(LGTemplateParser/StructuredBodyContentLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStructuredBodyContentLine (context As LGTemplateParser.StructuredBodyContentLineContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; 'Result&#xA;override this.VisitStructuredBodyContentLine : LGTemplateParser.StructuredBodyContentLineContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitStructuredBodyContentLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitStructuredBodyContentLine(LGTemplateParser.StructuredBodyContentLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyContentLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyContentLine" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitStructuredBodyEndLine">
      <MemberSignature Language="C#" Value="public virtual Result VisitStructuredBodyEndLine (LGTemplateParser.StructuredBodyEndLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitStructuredBodyEndLine(LGTemplateParser/StructuredBodyEndLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStructuredBodyEndLine (context As LGTemplateParser.StructuredBodyEndLineContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; 'Result&#xA;override this.VisitStructuredBodyEndLine : LGTemplateParser.StructuredBodyEndLineContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitStructuredBodyEndLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitStructuredBodyEndLine(LGTemplateParser.StructuredBodyEndLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyEndLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyEndLine" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitStructuredBodyNameLine">
      <MemberSignature Language="C#" Value="public virtual Result VisitStructuredBodyNameLine (LGTemplateParser.StructuredBodyNameLineContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitStructuredBodyNameLine(LGTemplateParser/StructuredBodyNameLineContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStructuredBodyNameLine (context As LGTemplateParser.StructuredBodyNameLineContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; 'Result&#xA;override this.VisitStructuredBodyNameLine : LGTemplateParser.StructuredBodyNameLineContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitStructuredBodyNameLine context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitStructuredBodyNameLine(LGTemplateParser.StructuredBodyNameLineContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredBodyNameLineContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredBodyNameLine" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitStructuredTemplateBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitStructuredTemplateBody (LGTemplateParser.StructuredTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitStructuredTemplateBody(LGTemplateParser/StructuredTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStructuredTemplateBody (context As LGTemplateParser.StructuredTemplateBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; 'Result&#xA;override this.VisitStructuredTemplateBody : LGTemplateParser.StructuredTemplateBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitStructuredTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitStructuredTemplateBody(LGTemplateParser.StructuredTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+StructuredTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.structuredTemplateBody" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCaseBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitSwitchCaseBody (LGTemplateParser.SwitchCaseBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitSwitchCaseBody(LGTemplateParser/SwitchCaseBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCaseBody (context As LGTemplateParser.SwitchCaseBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; 'Result&#xA;override this.VisitSwitchCaseBody : LGTemplateParser.SwitchCaseBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitSwitchCaseBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitSwitchCaseBody(LGTemplateParser.SwitchCaseBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida pelo <c>switchCaseBody</c> rotulado como alternativa em <see cref="M:LGTemplateParser.body" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCaseRule">
      <MemberSignature Language="C#" Value="public virtual Result VisitSwitchCaseRule (LGTemplateParser.SwitchCaseRuleContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitSwitchCaseRule(LGTemplateParser/SwitchCaseRuleContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCaseRule (context As LGTemplateParser.SwitchCaseRuleContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; 'Result&#xA;override this.VisitSwitchCaseRule : LGTemplateParser.SwitchCaseRuleContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitSwitchCaseRule context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitSwitchCaseRule(LGTemplateParser.SwitchCaseRuleContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseRuleContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseRule" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCaseStat">
      <MemberSignature Language="C#" Value="public virtual Result VisitSwitchCaseStat (LGTemplateParser.SwitchCaseStatContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitSwitchCaseStat(LGTemplateParser/SwitchCaseStatContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCaseStat (context As LGTemplateParser.SwitchCaseStatContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; 'Result&#xA;override this.VisitSwitchCaseStat : LGTemplateParser.SwitchCaseStatContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitSwitchCaseStat context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitSwitchCaseStat(LGTemplateParser.SwitchCaseStatContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseStatContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseStat" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCaseTemplateBody">
      <MemberSignature Language="C#" Value="public virtual Result VisitSwitchCaseTemplateBody (LGTemplateParser.SwitchCaseTemplateBodyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitSwitchCaseTemplateBody(LGTemplateParser/SwitchCaseTemplateBodyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCaseTemplateBody (context As LGTemplateParser.SwitchCaseTemplateBodyContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; 'Result&#xA;override this.VisitSwitchCaseTemplateBody : LGTemplateParser.SwitchCaseTemplateBodyContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitSwitchCaseTemplateBody context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitSwitchCaseTemplateBody(LGTemplateParser.SwitchCaseTemplateBodyContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+SwitchCaseTemplateBodyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.switchCaseTemplateBody" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
    <Member MemberName="VisitTemplateString">
      <MemberSignature Language="C#" Value="public virtual Result VisitTemplateString (LGTemplateParser.TemplateStringContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !Result VisitTemplateString(LGTemplateParser/TemplateStringContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:LGTemplateParserBaseVisitor`1.VisitTemplateString(LGTemplateParser.TemplateStringContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTemplateString (context As LGTemplateParser.TemplateStringContext) As Result" />
      <MemberSignature Language="F#" Value="abstract member VisitTemplateString : LGTemplateParser.TemplateStringContext -&gt; 'Result&#xA;override this.VisitTemplateString : LGTemplateParser.TemplateStringContext -&gt; 'Result" Usage="lGTemplateParserBaseVisitor.VisitTemplateString context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:ILGTemplateParserVisitor`1.VisitTemplateString(LGTemplateParser.TemplateStringContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.LanguageGeneration</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Result</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="LGTemplateParser+TemplateStringContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Visite uma árvore de análise produzida por <see cref="M:LGTemplateParser.templateString" /> .
            <para>
A implementação padrão retorna o resultado da chamada <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)" /> em <paramref name="context" /> .
            </para></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <return>O resultado do visitante.</return>
      </Docs>
    </Member>
  </Members>
</Type>
