<Type Name="JsonExtensions" FullName="Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d816cf01d5ab08ceca3fe8be289b4da9f43763bf" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95451050" /></Metadata><TypeSignature Language="C#" Value="public static class JsonExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module JsonExtensions" />
  <TypeSignature Language="F#" Value="type JsonExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementa extensões JSON.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dequeue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Dequeue&lt;T&gt; (this System.Collections.Generic.List&lt;T&gt; queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Dequeue&lt;T&gt;(class System.Collections.Generic.List`1&lt;!!T&gt; queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions.Dequeue``1(System.Collections.Generic.List{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Dequeue(Of T) (queue As List(Of T)) As T" />
      <MemberSignature Language="F#" Value="static member Dequeue : System.Collections.Generic.List&lt;'T&gt; -&gt; 'T" Usage="Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions.Dequeue queue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queue" Type="System.Collections.Generic.List&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de elemento.</typeparam>
        <param name="queue">Lista de onde remover o primeiro elemento.</param>
        <summary>Remove o primeiro elemento de uma fila.</summary>
        <returns>Elemento removido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceJTokenRecursively">
      <MemberSignature Language="C#" Value="public static Newtonsoft.Json.Linq.JToken ReplaceJTokenRecursively (this Newtonsoft.Json.Linq.JToken token, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Newtonsoft.Json.Linq.JToken ReplaceJTokenRecursively(class Newtonsoft.Json.Linq.JToken token, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions.ReplaceJTokenRecursively(Newtonsoft.Json.Linq.JToken,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReplaceJTokenRecursively (token As JToken, state As Object) As JToken" />
      <MemberSignature Language="F#" Value="static member ReplaceJTokenRecursively : Newtonsoft.Json.Linq.JToken * obj -&gt; Newtonsoft.Json.Linq.JToken" Usage="Microsoft.Bot.Builder.Dialogs.Adaptive.JsonExtensions.ReplaceJTokenRecursively (token, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Dialogs.Adaptive</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Newtonsoft.Json.Linq.JToken" RefType="this" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="token">Um valor de token JSON que pode ter alguns caminhos de ligação.</param>
        <param name="state">Um escopo para pesquisar variáveis.</param>
        <summary>Substitui os caminhos de associação em um valor de token JSON pelos resultados avaliados recursivamente. Retorna o valor do token JSON final.</summary>
        <returns>Resultado da ligação de dados profunda.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
