<Type Name="Extensions" FullName="Microsoft.Bot.Builder.Dialogs.Extensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16bd8b23932e1c03f9d034391fda2484b544b377" /><Meta Name="ms.sourcegitcommit" Value="ac3a7ee8979fc942f9d7420b2f6845c726b6661a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/02/2020" /><Meta Name="ms.locfileid" Value="93149944" /></Metadata><TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.16.1.38846</AssemblyVersion>
    <AssemblyVersion>3.19.1.44133</AssemblyVersion>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
    <AssemblyVersion>3.30.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Métodos auxiliares.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHeroCard&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AddHeroCard&lt;T&gt; (this Microsoft.Bot.Connector.IMessageActivity message, string text, System.Collections.Generic.IEnumerable&lt;T&gt; options, System.Collections.Generic.IEnumerable&lt;string&gt; descriptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHeroCard&lt;T&gt;(class Microsoft.Bot.Connector.IMessageActivity message, string text, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; options, class System.Collections.Generic.IEnumerable`1&lt;string&gt; descriptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.AddHeroCard``1(Microsoft.Bot.Connector.IMessageActivity,System.String,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddHeroCard(Of T) (message As IMessageActivity, text As String, options As IEnumerable(Of T), Optional descriptions As IEnumerable(Of String) = Nothing)" />
      <MemberSignature Language="F#" Value="static member AddHeroCard : Microsoft.Bot.Connector.IMessageActivity * string * seq&lt;'T&gt; * seq&lt;string&gt; -&gt; unit" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.AddHeroCard (message, text, options, descriptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="options" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="descriptions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo das opções.</typeparam>
        <param name="message">A mensagem à qual os botões serão adicionados.</param>
        <param name="text">O texto no <see cref="T:Microsoft.Bot.Connector.HeroCard" />.</param>
        <param name="options">As opções que causam a geração de botões.</param>
        <param name="descriptions">Descrições de cada opção.</param>
        <summary>Gera botões de opções e os adiciona à mensagem.</summary>
        <remarks><typeparamref name="T" /> deve implementar ToString ().</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardCard&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void AddKeyboardCard&lt;T&gt; (this Microsoft.Bot.Connector.IMessageActivity message, string text, System.Collections.Generic.IEnumerable&lt;T&gt; options, System.Collections.Generic.IEnumerable&lt;string&gt; descriptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardCard&lt;T&gt;(class Microsoft.Bot.Connector.IMessageActivity message, string text, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; options, class System.Collections.Generic.IEnumerable`1&lt;string&gt; descriptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.AddKeyboardCard``1(Microsoft.Bot.Connector.IMessageActivity,System.String,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddKeyboardCard(Of T) (message As IMessageActivity, text As String, options As IEnumerable(Of T), Optional descriptions As IEnumerable(Of String) = Nothing)" />
      <MemberSignature Language="F#" Value="static member AddKeyboardCard : Microsoft.Bot.Connector.IMessageActivity * string * seq&lt;'T&gt; * seq&lt;string&gt; -&gt; unit" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.AddKeyboardCard (message, text, options, descriptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" RefType="this" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="options" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="descriptions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo das opções.</typeparam>
        <param name="message">A mensagem à qual os botões serão adicionados.</param>
        <param name="text">O texto no <see cref="T:Microsoft.Bot.Connector.HeroCard" />.</param>
        <param name="options">As opções que causam a geração de botões.</param>
        <param name="descriptions">Descrições de cada opção.</param>
        <summary>Gera botões de opções e os adiciona à mensagem.</summary>
        <remarks><typeparamref name="T" /> deve implementar ToString ().</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConversation">
      <MemberSignature Language="C#" Value="public static void EndConversation (this Microsoft.Bot.Builder.Dialogs.IDialogContext context, string code);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndConversation(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, string code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.EndConversation(Microsoft.Bot.Builder.Dialogs.IDialogContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub EndConversation (context As IDialogContext, code As String)" />
      <MemberSignature Language="F#" Value="static member EndConversation : Microsoft.Bot.Builder.Dialogs.IDialogContext * string -&gt; unit" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.EndConversation (context, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" RefType="this" />
        <Parameter Name="code" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="code">To be added.</param>
        <summary>Inicie um <see cref="T:Microsoft.Bot.Builder.Dialogs.EndConversationEvent" /> para redefinir o estado e a pilha da conversa e enviar uma <see cref="F:Microsoft.Bot.Connector.ActivityTypes.EndOfConversation" /> para o conector.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forward&lt;R&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task Forward&lt;R&gt; (this Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack stack, Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt; child, Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt; resume, Microsoft.Bot.Connector.IMessageActivity message, System.Threading.CancellationToken token = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task Forward&lt;R&gt;(class Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack stack, class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;!!R&gt; child, class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;!!R&gt; resume, class Microsoft.Bot.Connector.IMessageActivity message, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.Forward``1(Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack,Microsoft.Bot.Builder.Dialogs.IDialog{``0},Microsoft.Bot.Builder.Dialogs.ResumeAfter{``0},Microsoft.Bot.Connector.IMessageActivity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Forward(Of R) (stack As IDialogStack, child As IDialog(Of R), resume As ResumeAfter(Of R), message As IMessageActivity, Optional token As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member Forward : Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack * Microsoft.Bot.Builder.Dialogs.IDialog&lt;'R&gt; * Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;'R&gt; * Microsoft.Bot.Connector.IMessageActivity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.Forward (stack, child, resume, message, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="R" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stack" Type="Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack" RefType="this" />
        <Parameter Name="child" Type="Microsoft.Bot.Builder.Dialogs.IDialog&lt;R&gt;" />
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;R&gt;" />
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="R">O tipo de resultado esperado da caixa de diálogo filho.</typeparam>
        <param name="stack">A pilha de diálogo.</param>
        <param name="child">A caixa de diálogo filho.</param>
        <param name="resume">O método a ser retomado quando a caixa de diálogo filho for concluída.</param>
        <param name="message">A mensagem que será postada na caixa de diálogo filho.</param>
        <param name="token">Um token de cancelamento.</param>
        <summary>Chame uma caixa de diálogo filho, adicione-a à parte superior da pilha e poste a mensagem na caixa de diálogo filho.</summary>
        <returns>Uma tarefa que representa a operação de encaminhamento.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Get&lt;T&gt; (this Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Get&lt;T&gt;(class Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.Get``1(Microsoft.Bot.Builder.Dialogs.IBotDataBag,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Get(Of T) (bag As IBotDataBag, key As String) As T" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Bot.Builder.Dialogs.IBotDataBag * string -&gt; 'T" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.Get (bag, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use GetValue&lt;T&gt; instead", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use GetValue&lt;T&gt; instead", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bag" Type="Microsoft.Bot.Builder.Dialogs.IBotDataBag" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="bag">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignInUrlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; GetSignInUrlAsync (this Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; GetSignInUrlAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GetSignInUrlAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSignInUrlAsync (context As IDialogContext, connectionName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member GetSignInUrlAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GetSignInUrlAsync (context, connectionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" RefType="this" />
        <Parameter Name="connectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="connectionName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserTokenAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt; GetUserTokenAsync (this Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.TokenResponse&gt; GetUserTokenAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GetUserTokenAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUserTokenAsync (context As IDialogContext, connectionName As String) As Task(Of TokenResponse)" />
      <MemberSignature Language="F#" Value="static member GetUserTokenAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GetUserTokenAsync (context, connectionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" RefType="this" />
        <Parameter Name="connectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="connectionName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserTokenAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt; GetUserTokenAsync (this Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName, string magicCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.TokenResponse&gt; GetUserTokenAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName, string magicCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GetUserTokenAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUserTokenAsync (context As IDialogContext, connectionName As String, magicCode As String) As Task(Of TokenResponse)" />
      <MemberSignature Language="F#" Value="static member GetUserTokenAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext * string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GetUserTokenAsync (context, connectionName, magicCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.TokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" RefType="this" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="magicCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="connectionName">To be added.</param>
        <param name="magicCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetValue&lt;T&gt; (this Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetValue&lt;T&gt;(class Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GetValue``1(Microsoft.Bot.Builder.Dialogs.IBotDataBag,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValue(Of T) (bag As IBotDataBag, key As String) As T" />
      <MemberSignature Language="F#" Value="static member GetValue : Microsoft.Bot.Builder.Dialogs.IBotDataBag * string -&gt; 'T" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GetValue (bag, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bag" Type="Microsoft.Bot.Builder.Dialogs.IBotDataBag" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">O tipo do valor a ser obtido.</typeparam>
        <param name="bag">O recipiente de dados de bot.</param>
        <param name="key">A chave do valor a ser obtido ou definido.</param>
        <summary>Obtém o valor associado à chave especificada.</summary>
        <returns>O valor associado à chave especificada. Se a chave especificada não for encontrada, uma operação get lançará um KeyNotFoundException.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="key" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetValueOrDefault&lt;T&gt; (this Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key, T defaultValue = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetValueOrDefault&lt;T&gt;(class Microsoft.Bot.Builder.Dialogs.IBotDataBag bag, string key, !!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GetValueOrDefault``1(Microsoft.Bot.Builder.Dialogs.IBotDataBag,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of T) (bag As IBotDataBag, key As String, Optional defaultValue As T = Nothing) As T" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : Microsoft.Bot.Builder.Dialogs.IBotDataBag * string * 'T -&gt; 'T" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GetValueOrDefault (bag, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bag" Type="Microsoft.Bot.Builder.Dialogs.IBotDataBag" RefType="this" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">O tipo do valor a ser obtido.</typeparam>
        <param name="bag">O recipiente de dados de bot.</param>
        <param name="key">A chave do valor a ser obtido ou definido.</param>
        <param name="defaultValue">O valor a ser retornado se a chave não estiver presente</param>
        <summary>Obtém o valor associado à chave especificada ou um valor padrão, se não for encontrado.</summary>
        <returns>O valor associado à chave especificada. Se a chave especificada não for encontrada, <paramref name="defaultValue" /> será retornada</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GZipSerialize">
      <MemberSignature Language="C#" Value="public static string GZipSerialize (this Microsoft.Bot.Builder.Dialogs.ResumptionCookie resumptionCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GZipSerialize(class Microsoft.Bot.Builder.Dialogs.ResumptionCookie resumptionCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.GZipSerialize(Microsoft.Bot.Builder.Dialogs.ResumptionCookie)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GZipSerialize (resumptionCookie As ResumptionCookie) As String" />
      <MemberSignature Language="F#" Value="static member GZipSerialize : Microsoft.Bot.Builder.Dialogs.ResumptionCookie -&gt; string" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.GZipSerialize resumptionCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use ConversationReference.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use ConversationReference.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resumptionCookie" Type="Microsoft.Bot.Builder.Dialogs.ResumptionCookie" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resumptionCookie">O cookie de continuação.</param>
        <summary>Serializações binárias <see cref="T:Microsoft.Bot.Builder.Dialogs.ResumptionCookie" /> usando <see cref="T:System.IO.Compression.GZipStream" /> .</summary>
        <returns>Uma cadeia de caracteres codificada em base64.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PostAsync (this Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser botToUser, string text, string locale = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PostAsync(class Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser botToUser, string text, string locale, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.PostAsync(Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostAsync (botToUser As IBotToUser, text As String, Optional locale As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member PostAsync : Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.PostAsync (botToUser, text, locale, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botToUser" Type="Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser" RefType="this" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="locale" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="botToUser">Canal de comunicação a ser usado.</param>
        <param name="text">O texto de mensagem.</param>
        <param name="locale">A localidade do texto.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>Poste uma mensagem a ser enviada ao usuário, usando mensagens anteriores para estabelecer um contexto de conversa.</summary>
        <returns>Uma tarefa que representa a operação post.</returns>
        <remarks>Se o parâmetro Locale não estiver definido, a localidade da mensagem de entrada será usada para a resposta.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeDouble">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;double&gt;&gt; RecognizeDouble (this Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, Microsoft.Bot.Connector.IMessageActivity message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Dialogs.RecognizeEntity`1&lt;float64&gt;&gt; RecognizeDouble(class Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, class Microsoft.Bot.Connector.IMessageActivity message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeDouble(Microsoft.Bot.Builder.Dialogs.IPromptRecognizer,Microsoft.Bot.Connector.IMessageActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RecognizeDouble (recognizer As IPromptRecognizer, message As IMessageActivity) As IEnumerable(Of RecognizeEntity(Of Double))" />
      <MemberSignature Language="F#" Value="static member RecognizeDouble : Microsoft.Bot.Builder.Dialogs.IPromptRecognizer * Microsoft.Bot.Connector.IMessageActivity -&gt; seq&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;double&gt;&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeDouble (recognizer, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" RefType="this" />
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" />
      </Parameters>
      <Docs>
        <param name="recognizer"><see cref="T:Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" /></param>
        <param name="message">Contexto da mensagem.</param>
        <summary>Reconhecedor para um número duplo.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeDoubleInRange">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;double&gt;&gt; RecognizeDoubleInRange (this Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, Microsoft.Bot.Connector.IMessageActivity message, double? min, double? max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Dialogs.RecognizeEntity`1&lt;float64&gt;&gt; RecognizeDoubleInRange(class Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, class Microsoft.Bot.Connector.IMessageActivity message, valuetype System.Nullable`1&lt;float64&gt; min, valuetype System.Nullable`1&lt;float64&gt; max) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeDoubleInRange(Microsoft.Bot.Builder.Dialogs.IPromptRecognizer,Microsoft.Bot.Connector.IMessageActivity,System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RecognizeDoubleInRange (recognizer As IPromptRecognizer, message As IMessageActivity, min As Nullable(Of Double), max As Nullable(Of Double)) As IEnumerable(Of RecognizeEntity(Of Double))" />
      <MemberSignature Language="F#" Value="static member RecognizeDoubleInRange : Microsoft.Bot.Builder.Dialogs.IPromptRecognizer * Microsoft.Bot.Connector.IMessageActivity * Nullable&lt;double&gt; * Nullable&lt;double&gt; -&gt; seq&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;double&gt;&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeDoubleInRange (recognizer, message, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;System.Double&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" RefType="this" />
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" />
        <Parameter Name="min" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="max" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="recognizer"><see cref="T:Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" /></param>
        <param name="message">Contexto da mensagem.</param>
        <param name="max">Valor máximo.</param>
        <param name="min">Valor de mínimo.</param>
        <summary>Reconhece o intervalo duplo.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeInteger">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;long&gt;&gt; RecognizeInteger (this Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, Microsoft.Bot.Connector.IMessageActivity message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Dialogs.RecognizeEntity`1&lt;int64&gt;&gt; RecognizeInteger(class Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, class Microsoft.Bot.Connector.IMessageActivity message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeInteger(Microsoft.Bot.Builder.Dialogs.IPromptRecognizer,Microsoft.Bot.Connector.IMessageActivity)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RecognizeInteger (recognizer As IPromptRecognizer, message As IMessageActivity) As IEnumerable(Of RecognizeEntity(Of Long))" />
      <MemberSignature Language="F#" Value="static member RecognizeInteger : Microsoft.Bot.Builder.Dialogs.IPromptRecognizer * Microsoft.Bot.Connector.IMessageActivity -&gt; seq&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;int64&gt;&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeInteger (recognizer, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" RefType="this" />
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" />
      </Parameters>
      <Docs>
        <param name="recognizer"><see cref="T:Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" /></param>
        <param name="message">Contexto da mensagem.</param>
        <summary>Reconhecedor para um número Int64.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeIntegerInRange">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;long&gt;&gt; RecognizeIntegerInRange (this Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, Microsoft.Bot.Connector.IMessageActivity message, long? min, long? max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Dialogs.RecognizeEntity`1&lt;int64&gt;&gt; RecognizeIntegerInRange(class Microsoft.Bot.Builder.Dialogs.IPromptRecognizer recognizer, class Microsoft.Bot.Connector.IMessageActivity message, valuetype System.Nullable`1&lt;int64&gt; min, valuetype System.Nullable`1&lt;int64&gt; max) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeIntegerInRange(Microsoft.Bot.Builder.Dialogs.IPromptRecognizer,Microsoft.Bot.Connector.IMessageActivity,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RecognizeIntegerInRange (recognizer As IPromptRecognizer, message As IMessageActivity, min As Nullable(Of Long), max As Nullable(Of Long)) As IEnumerable(Of RecognizeEntity(Of Long))" />
      <MemberSignature Language="F#" Value="static member RecognizeIntegerInRange : Microsoft.Bot.Builder.Dialogs.IPromptRecognizer * Microsoft.Bot.Connector.IMessageActivity * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; -&gt; seq&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;int64&gt;&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.RecognizeIntegerInRange (recognizer, message, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Dialogs.RecognizeEntity&lt;System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognizer" Type="Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" RefType="this" />
        <Parameter Name="message" Type="Microsoft.Bot.Connector.IMessageActivity" />
        <Parameter Name="min" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="max" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="recognizer"><see cref="T:Microsoft.Bot.Builder.Dialogs.IPromptRecognizer" /></param>
        <param name="message">Contexto da mensagem.</param>
        <param name="max">Valor máximo.</param>
        <param name="min">Valor de mínimo.</param>
        <summary>Reconhecedor para um número Int64 dentro de um intervalo</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SayAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SayAsync (this Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser botToUser, string text, string speak = default, Microsoft.Bot.Builder.Dialogs.MessageOptions options = default, string locale = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SayAsync(class Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser botToUser, string text, string speak, class Microsoft.Bot.Builder.Dialogs.MessageOptions options, string locale, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.SayAsync(Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser,System.String,System.String,Microsoft.Bot.Builder.Dialogs.MessageOptions,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SayAsync (botToUser As IBotToUser, text As String, Optional speak As String = Nothing, Optional options As MessageOptions = Nothing, Optional locale As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member SayAsync : Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser * string * string * Microsoft.Bot.Builder.Dialogs.MessageOptions * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.SayAsync (botToUser, text, speak, options, locale, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botToUser" Type="Microsoft.Bot.Builder.Dialogs.Internals.IBotToUser" RefType="this" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="speak" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Bot.Builder.Dialogs.MessageOptions" />
        <Parameter Name="locale" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="botToUser">Canal de comunicação a ser usado.</param>
        <param name="text">O texto de mensagem.</param>
        <param name="speak">A marcação SSML para conversão de texto em fala.</param>
        <param name="options">As opções para a mensagem.</param>
        <param name="locale">A localidade do texto.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>Poste uma mensagem e uma SSML opcional para serem enviadas ao usuário, usando mensagens anteriores para estabelecer um contexto de conversa.</summary>
        <returns>Uma tarefa que representa a operação post.</returns>
        <remarks>Se o parâmetro Locale não estiver definido, a localidade da mensagem de entrada será usada para a resposta.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutUserAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; SignOutUserAsync (this Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; SignOutUserAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context, string connectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.SignOutUserAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SignOutUserAsync (context As IDialogContext, connectionName As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member SignOutUserAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.SignOutUserAsync (context, connectionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" RefType="this" />
        <Parameter Name="connectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="connectionName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public static void Wait (this Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack stack, Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;Microsoft.Bot.Connector.IMessageActivity&gt; resume);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Wait(class Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack stack, class Microsoft.Bot.Builder.Dialogs.ResumeAfter`1&lt;class Microsoft.Bot.Connector.IMessageActivity&gt; resume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.Extensions.Wait(Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack,Microsoft.Bot.Builder.Dialogs.ResumeAfter{Microsoft.Bot.Connector.IMessageActivity})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Wait (stack As IDialogStack, resume As ResumeAfter(Of IMessageActivity))" />
      <MemberSignature Language="F#" Value="static member Wait : Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack * Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;Microsoft.Bot.Connector.IMessageActivity&gt; -&gt; unit" Usage="Microsoft.Bot.Builder.Dialogs.Extensions.Wait (stack, resume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="Microsoft.Bot.Builder.Dialogs.Internals.IDialogStack" RefType="this" />
        <Parameter Name="resume" Type="Microsoft.Bot.Builder.Dialogs.ResumeAfter&lt;Microsoft.Bot.Connector.IMessageActivity&gt;" />
      </Parameters>
      <Docs>
        <param name="stack">A pilha de diálogo.</param>
        <param name="resume">O método a ser retomado quando a mensagem tiver sido recebida.</param>
        <summary>Suspenda a caixa de diálogo atual até que o usuário tenha enviado uma mensagem para o bot.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
