<Type Name="CertificateAppCredentials" FullName="Microsoft.Bot.Connector.Authentication.CertificateAppCredentials">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a941e478df4e55d6d74fe460b2fb492781339ca" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95471140" /></Metadata><TypeSignature Language="C#" Value="public class CertificateAppCredentials : Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateAppCredentials extends Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class CertificateAppCredentials&#xA;Inherits AppCredentials" />
  <TypeSignature Language="F#" Value="type CertificateAppCredentials = class&#xA;    inherit AppCredentials" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Connector.Authentication.AppCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cache e implementação de autenticação CertificateAppCredentials.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As ClientAssertionCertificate, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Certificado do cliente a ser apresentado para autenticação.</param>
        <param name="channelAuthTenant">Opcional. O locatário do token OAuth.</param>
        <param name="customHttpClient">Opcional <see cref="T:System.Net.Http.HttpClient" /> para ser usado ao adquirir tokens.</param>
        <param name="logger">Opcional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> para coletar dados de telemetria ao adquirir e gerenciar credenciais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, bool sendX5c, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, bool sendX5c, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.Boolean,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As ClientAssertionCertificate, sendX5c As Boolean, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate * bool * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, sendX5c, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate" />
        <Parameter Name="sendX5c" Type="System.Boolean" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Certificado do cliente a ser apresentado para autenticação.</param>
        <param name="sendX5c">Esse parâmetro, se verdadeiro, permite que os desenvolvedores de aplicativos obtenham roll-over de certificados fáceis no Azure AD: definir esse parâmetro como true enviará o certificado público para o Azure AD junto com a solicitação de token, para que o Azure AD possa usá-lo para validar o nome da entidade com base em uma política de emissor confiável.</param>
        <param name="channelAuthTenant">Opcional. O locatário do token OAuth.</param>
        <param name="customHttpClient">Opcional <see cref="T:System.Net.Http.HttpClient" /> para ser usado ao adquirir tokens.</param>
        <param name="logger">Opcional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> para coletar dados de telemetria ao adquirir e gerenciar credenciais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As X509Certificate2, appId As String, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, appId, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Certificado do cliente a ser apresentado para autenticação.</param>
        <param name="appId">A ID do aplicativo da Microsoft relacionada ao certifiacte.</param>
        <param name="channelAuthTenant">Opcional. O locatário do token OAuth.</param>
        <param name="customHttpClient">Opcional <see cref="T:System.Net.Http.HttpClient" /> para ser usado ao adquirir tokens.</param>
        <param name="logger">Opcional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> para coletar dados de telemetria ao adquirir e gerenciar credenciais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, bool sendX5c, string appId, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, bool sendX5c, string appId, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As X509Certificate2, sendX5c As Boolean, appId As String, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * bool * string * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, sendX5c, appId, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="sendX5c" Type="System.Boolean" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Certificado do cliente a ser apresentado para autenticação.</param>
        <param name="sendX5c">Esse parâmetro, se verdadeiro, permite que os desenvolvedores de aplicativos obtenham roll-over de certificados fáceis no Azure AD: definir esse parâmetro como true enviará o certificado público para o Azure AD junto com a solicitação de token, para que o Azure AD possa usá-lo para validar o nome da entidade com base em uma política de emissor confiável.</param>
        <param name="appId">A ID do aplicativo da Microsoft relacionada ao certifiacte.</param>
        <param name="channelAuthTenant">Opcional. O locatário do token OAuth.</param>
        <param name="customHttpClient">Opcional <see cref="T:System.Net.Http.HttpClient" /> para ser usado ao adquirir tokens.</param>
        <param name="logger">Opcional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> para coletar dados de telemetria ao adquirir e gerenciar credenciais.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAuthenticator">
      <MemberSignature Language="C#" Value="protected override Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Lazy`1&lt;class Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.BuildAuthenticator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BuildAuthenticator () As Lazy(Of AdalAuthenticator)" />
      <MemberSignature Language="F#" Value="override this.BuildAuthenticator : unit -&gt; Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;" Usage="certificateAppCredentials.BuildAuthenticator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria o Lazy a <see cref="T:Microsoft.Bot.Connector.Authentication.AdalAuthenticator" /> ser usado para aquisição de token.</summary>
        <returns>Um lento <see cref="T:Microsoft.Bot.Connector.Authentication.AdalAuthenticator" /> .</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
