<Type Name="JwtTokenValidation" FullName="Microsoft.Bot.Connector.Authentication.JwtTokenValidation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2ada2db7570e6c9a61c4f987391b0af4e28cecd" /><Meta Name="ms.sourcegitcommit" Value="36928e6f81288095af0c66776a5ef320ec309c1a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/13/2020" /><Meta Name="ms.locfileid" Value="94614588" /></Metadata><TypeSignature Language="C#" Value="public static class JwtTokenValidation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JwtTokenValidation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.JwtTokenValidation" />
  <TypeSignature Language="VB.NET" Value="Public Class JwtTokenValidation" />
  <TypeSignature Language="F#" Value="type JwtTokenValidation = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contém métodos auxiliares para autenticar solicitações HTTP de entrada.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; AuthenticateRequest (Microsoft.Bot.Schema.IActivity activity, string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider provider, System.Net.Http.HttpClient httpClient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; AuthenticateRequest(class Microsoft.Bot.Schema.IActivity activity, string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider provider, class System.Net.Http.HttpClient httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenValidation.AuthenticateRequest(Microsoft.Bot.Schema.IActivity,System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.Net.Http.HttpClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthenticateRequest (activity As IActivity, authHeader As String, credentials As ICredentialProvider, provider As IChannelProvider, Optional httpClient As HttpClient = Nothing) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member AuthenticateRequest : Microsoft.Bot.Schema.IActivity * string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * System.Net.Http.HttpClient -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenValidation.AuthenticateRequest (activity, authHeader, credentials, provider, httpClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.IActivity" />
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="provider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="activity">A atividade.</param>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="credentials">O provedor de credenciais do bot.</param>
        <param name="provider">O provedor de serviço do canal do bot.</param>
        <param name="httpClient">O cliente HTTP.</param>
        <summary>Autentica a solicitação e adiciona a atividade <see cref="P:Microsoft.Bot.Schema.Activity.ServiceUrl" /> ao conjunto de URLs confiáveis.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for concluída com êxito, o resultado conterá a identidade baseada em declarações para a solicitação.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; AuthenticateRequest (Microsoft.Bot.Schema.IActivity activity, string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider provider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, System.Net.Http.HttpClient httpClient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; AuthenticateRequest(class Microsoft.Bot.Schema.IActivity activity, string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider provider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, class System.Net.Http.HttpClient httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenValidation.AuthenticateRequest(Microsoft.Bot.Schema.IActivity,System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,System.Net.Http.HttpClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthenticateRequest (activity As IActivity, authHeader As String, credentials As ICredentialProvider, provider As IChannelProvider, authConfig As AuthenticationConfiguration, Optional httpClient As HttpClient = Nothing) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member AuthenticateRequest : Microsoft.Bot.Schema.IActivity * string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * System.Net.Http.HttpClient -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenValidation.AuthenticateRequest (activity, authHeader, credentials, provider, authConfig, httpClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.IActivity" />
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="provider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="activity">A atividade.</param>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="credentials">O provedor de credenciais do bot.</param>
        <param name="provider">O provedor de serviço do canal do bot.</param>
        <param name="authConfig">A configuração de autenticação opcional.</param>
        <param name="httpClient">O cliente HTTP.</param>
        <summary>Autentica a solicitação e adiciona a atividade <see cref="P:Microsoft.Bot.Schema.Activity.ServiceUrl" /> ao conjunto de URLs confiáveis.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for concluída com êxito, o resultado conterá a identidade baseada em declarações para a solicitação.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppIdFromClaims">
      <MemberSignature Language="C#" Value="public static string GetAppIdFromClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAppIdFromClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenValidation.GetAppIdFromClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAppIdFromClaims (claims As IEnumerable(Of Claim)) As String" />
      <MemberSignature Language="F#" Value="static member GetAppIdFromClaims : seq&lt;System.Security.Claims.Claim&gt; -&gt; string" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenValidation.GetAppIdFromClaims claims" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Uma lista de <see cref="T:System.Security.Claims.Claim" /> instâncias.</param>
        <summary>Obtém a AppId de uma lista de declarações.</summary>
        <returns>O valor da declaração appId se for encontrado (NULL se não for possível encontrar uma declaração adequada).</returns>
        <remarks>Em tokens v1, a AppId está na <see cref="F:Microsoft.Bot.Connector.Authentication.AuthenticationConstants.AppIdClaim" /> declaração.
Nos tokens v2, o AppId está na <see cref="F:Microsoft.Bot.Connector.Authentication.AuthenticationConstants.AuthorizedParty" /> declaração azp.
Se o <see cref="F:Microsoft.Bot.Connector.Authentication.AuthenticationConstants.VersionClaim" /> não estiver presente, esse método tentará obter o atributo do ou, <see cref="F:Microsoft.Bot.Connector.Authentication.AuthenticationConstants.AppIdClaim" /> se estiver presente.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAuthHeader">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateAuthHeader (string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, string channelId, string serviceUrl = default, System.Net.Http.HttpClient httpClient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateAuthHeader(string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, string channelId, string serviceUrl, class System.Net.Http.HttpClient httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenValidation.ValidateAuthHeader(System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.String,System.String,System.Net.Http.HttpClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateAuthHeader (authHeader As String, credentials As ICredentialProvider, channelProvider As IChannelProvider, channelId As String, Optional serviceUrl As String = Nothing, Optional httpClient As HttpClient = Nothing) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member ValidateAuthHeader : string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * string * string * System.Net.Http.HttpClient -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenValidation.ValidateAuthHeader (authHeader, credentials, channelProvider, channelId, serviceUrl, httpClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação a ser validado.</param>
        <param name="credentials">O provedor de credenciais do bot.</param>
        <param name="channelProvider">O provedor de serviço do canal do bot.</param>
        <param name="channelId">A ID do canal que enviou a solicitação.</param>
        <param name="serviceUrl">A URL do serviço para a atividade.</param>
        <param name="httpClient">O cliente HTTP.</param>
        <summary>Valida o cabeçalho de autenticação de uma solicitação de entrada.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for concluída com êxito, o resultado conterá a identidade baseada em declarações para a solicitação.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAuthHeader">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateAuthHeader (string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, string channelId, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, string serviceUrl = default, System.Net.Http.HttpClient httpClient = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateAuthHeader(string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, string channelId, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, string serviceUrl, class System.Net.Http.HttpClient httpClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.JwtTokenValidation.ValidateAuthHeader(System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.String,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,System.String,System.Net.Http.HttpClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateAuthHeader (authHeader As String, credentials As ICredentialProvider, channelProvider As IChannelProvider, channelId As String, authConfig As AuthenticationConfiguration, Optional serviceUrl As String = Nothing, Optional httpClient As HttpClient = Nothing) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member ValidateAuthHeader : string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * string * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * string * System.Net.Http.HttpClient -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.JwtTokenValidation.ValidateAuthHeader (authHeader, credentials, channelProvider, channelId, authConfig, serviceUrl, httpClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação a ser validado.</param>
        <param name="credentials">O provedor de credenciais do bot.</param>
        <param name="channelProvider">O provedor de serviço do canal do bot.</param>
        <param name="channelId">A ID do canal que enviou a solicitação.</param>
        <param name="authConfig">A configuração de autenticação.</param>
        <param name="serviceUrl">A URL do serviço para a atividade.</param>
        <param name="httpClient">O cliente HTTP.</param>
        <summary>Valida o cabeçalho de autenticação de uma solicitação de entrada.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for concluída com êxito, o resultado conterá a identidade baseada em declarações para a solicitação.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
