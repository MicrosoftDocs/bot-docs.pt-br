<Type Name="ServiceClientCredentialsFactory" FullName="Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd8af4932b0c0c2ac3dfa4fe61ef5e7c738d5bec" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95472951" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceClientCredentialsFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceClientCredentialsFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceClientCredentialsFactory" />
  <TypeSignature Language="F#" Value="type ServiceClientCredentialsFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A <see cref="T:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" /> classe abstrata permite que os bots forneçam seus próprios <see cref="T:Microsoft.Rest.ServiceClientCredentials" /> para bot ao canal ou bot de habilidades para chamadas de bot pai.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceClientCredentialsFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync (string appId, string oauthScope, string loginEndpoint, bool validateAuthority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync(string appId, string oauthScope, string loginEndpoint, bool validateAuthority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.CreateCredentialsAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCredentialsAsync (appId As String, oauthScope As String, loginEndpoint As String, validateAuthority As Boolean, cancellationToken As CancellationToken) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="abstract member CreateCredentialsAsync : string * string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="serviceClientCredentialsFactory.CreateCredentialsAsync (appId, oauthScope, loginEndpoint, validateAuthority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="oauthScope" Type="System.String" />
        <Parameter Name="loginEndpoint" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">A appId.</param>
        <param name="oauthScope">O escopo do OAuth.</param>
        <param name="loginEndpoint">A URL de logon.</param>
        <param name="validateAuthority">O vale de autoridade de validação a ser usado.</param>
        <param name="cancellationToken">Um token de cancelamento.</param>
        <summary>Um método de fábrica para criar os próprios ClientCredentials.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticationDisabledAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;bool&gt; IsAuthenticationDisabledAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsAuthenticationDisabledAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.IsAuthenticationDisabledAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAuthenticationDisabledAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsAuthenticationDisabledAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="serviceClientCredentialsFactory.IsAuthenticationDisabledAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Um token de cancelamento.</param>
        <summary>Verifica se a autenticação de bot está desabilitada.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for bem-sucedida e a autenticação de bot estiver desabilitada, o resultado será true; caso contrário, false.
            <para>
Esse método é assíncrono para habilitar implementações personalizadas que talvez precisem chamar o serviço de chamada para validar o par appId/senha.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAppIdAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;bool&gt; IsValidAppIdAsync (string appId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidAppIdAsync(string appId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.IsValidAppIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsValidAppIdAsync (appId As String, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsValidAppIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="serviceClientCredentialsFactory.IsValidAppIdAsync (appId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">A ID do aplicativo a ser validada.</param>
        <param name="cancellationToken">Um token de cancelamento.</param>
        <summary>Valida uma ID do aplicativo.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for bem-sucedida, o resultado será true se <paramref name="appId" /> for válido para o controlador; caso contrário, false.
            <para>
Esse método é assíncrono para habilitar implementações personalizadas que talvez precisem chamar o serviço de chamada para validar o par appId/senha.
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
