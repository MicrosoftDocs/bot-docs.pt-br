<Type Name="BotFrameworkAuthenticationFactory" FullName="Microsoft.Bot.Connector.Authentication.BotFrameworkAuthenticationFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="281029e6cdedb7818d057fce156cff9ad2a3f439" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95473010" /></Metadata><TypeSignature Language="C#" Value="public static class BotFrameworkAuthenticationFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BotFrameworkAuthenticationFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.BotFrameworkAuthenticationFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class BotFrameworkAuthenticationFactory" />
  <TypeSignature Language="F#" Value="type BotFrameworkAuthenticationFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Os ambientes de nuvem capturam o código de autenticação do protocolo bot Framework específico do ambiente.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Connector.Authentication.BotFrameworkAuthentication Create (string channelService, bool validateAuthority, string toChannelFromBotLoginUrl, string toChannelFromBotOAuthScope, string toBotFromChannelTokenIssuer, string oAuthUrl, string toBotFromChannelOpenIdMetadataUrl, string toBotFromEmulatorOpenIdMetadataUrl, string callerId, Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory credentialFactory, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfiguration, System.Net.Http.HttpClient httpClient, Microsoft.Extensions.Logging.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Connector.Authentication.BotFrameworkAuthentication Create(string channelService, bool validateAuthority, string toChannelFromBotLoginUrl, string toChannelFromBotOAuthScope, string toBotFromChannelTokenIssuer, string oAuthUrl, string toBotFromChannelOpenIdMetadataUrl, string toBotFromEmulatorOpenIdMetadataUrl, string callerId, class Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory credentialFactory, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfiguration, class System.Net.Http.HttpClient httpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.BotFrameworkAuthenticationFactory.Create(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (channelService As String, validateAuthority As Boolean, toChannelFromBotLoginUrl As String, toChannelFromBotOAuthScope As String, toBotFromChannelTokenIssuer As String, oAuthUrl As String, toBotFromChannelOpenIdMetadataUrl As String, toBotFromEmulatorOpenIdMetadataUrl As String, callerId As String, credentialFactory As ServiceClientCredentialsFactory, authConfiguration As AuthenticationConfiguration, httpClient As HttpClient, logger As ILogger) As BotFrameworkAuthentication" />
      <MemberSignature Language="F#" Value="static member Create : string * bool * string * string * string * string * string * string * string * Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.BotFrameworkAuthentication" Usage="Microsoft.Bot.Connector.Authentication.BotFrameworkAuthenticationFactory.Create (channelService, validateAuthority, toChannelFromBotLoginUrl, toChannelFromBotOAuthScope, toBotFromChannelTokenIssuer, oAuthUrl, toBotFromChannelOpenIdMetadataUrl, toBotFromEmulatorOpenIdMetadataUrl, callerId, credentialFactory, authConfiguration, httpClient, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.Authentication.BotFrameworkAuthentication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelService" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
        <Parameter Name="toChannelFromBotLoginUrl" Type="System.String" />
        <Parameter Name="toChannelFromBotOAuthScope" Type="System.String" />
        <Parameter Name="toBotFromChannelTokenIssuer" Type="System.String" />
        <Parameter Name="oAuthUrl" Type="System.String" />
        <Parameter Name="toBotFromChannelOpenIdMetadataUrl" Type="System.String" />
        <Parameter Name="toBotFromEmulatorOpenIdMetadataUrl" Type="System.String" />
        <Parameter Name="callerId" Type="System.String" />
        <Parameter Name="credentialFactory" Type="Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" />
        <Parameter Name="authConfiguration" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="channelService">O serviço de canal.</param>
        <param name="validateAuthority">O valor de autoridade de validação a ser usado.</param>
        <param name="toChannelFromBotLoginUrl">O canal to da URL de logon do bot.</param>
        <param name="toChannelFromBotOAuthScope">O para canal do escopo OAuth do bot.</param>
        <param name="toBotFromChannelTokenIssuer">O bot to do emissor do token de canal.</param>
        <param name="oAuthUrl">A URL do oAuth.</param>
        <param name="toBotFromChannelOpenIdMetadataUrl">O para o bot da URL de metadados da ID aberta do canal.</param>
        <param name="toBotFromEmulatorOpenIdMetadataUrl">O para o bot da URL de metadados de ID aberta do emulador.</param>
        <param name="callerId">A senha do aplicativo Microsoft.</param>
        <param name="credentialFactory">O IServiceClientCredentialsFactory a ser usado para criar credenciais.</param>
        <param name="authConfiguration">O AuthenticationConfiguration a ser usado.</param>
        <param name="httpClient">O HttpClient a ser usado.</param>
        <param name="logger">A instância de ILogger a ser usada.</param>
        <summary>Cria a instância de ambiente de nuvem apropriada.</summary>
        <returns>Um novo ambiente de nuvem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
