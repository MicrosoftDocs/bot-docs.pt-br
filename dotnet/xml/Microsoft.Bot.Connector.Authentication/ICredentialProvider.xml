<Type Name="ICredentialProvider" FullName="Microsoft.Bot.Connector.Authentication.ICredentialProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b2ded911637cd9a0d23755d76adc4be4e1b100f" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95459110" /></Metadata><TypeSignature Language="C#" Value="public interface ICredentialProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialProvider" />
  <TypeSignature Language="F#" Value="type ICredentialProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Interface credentialprovider. Essa interface permite que os bots forneçam sua própria implementação do que é, e o que não é, uma appId e uma senha válidas. Isso é útil no caso de bots multilocatário, em que o bot pode precisar chamar um serviço para determinar se um par de AppID/senha específico é válido.
            
Para bots de locatário único (a grande maioria), os provedores estáticos simples são suficientes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAppPasswordAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetAppPasswordAsync (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetAppPasswordAsync(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ICredentialProvider.GetAppPasswordAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppPasswordAsync (appId As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAppPasswordAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iCredentialProvider.GetAppPasswordAsync appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">A ID do aplicativo para o qual obter a senha.</param>
        <summary>Obtém a senha do aplicativo para uma determinada ID do aplicativo de bot.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for bem-sucedida e a ID do aplicativo for válida, o resultado conterá a senha; caso contrário, NULL.
            <para>
Esse método é assíncrono para habilitar implementações personalizadas que talvez precisem chamar o serviço de chamada para validar o par appId/senha.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticationDisabledAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsAuthenticationDisabledAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsAuthenticationDisabledAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ICredentialProvider.IsAuthenticationDisabledAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAuthenticationDisabledAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsAuthenticationDisabledAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iCredentialProvider.IsAuthenticationDisabledAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifica se a autenticação de bot está desabilitada.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for bem-sucedida e a autenticação de bot estiver desabilitada, o resultado será true; caso contrário, false.
            <para>
Esse método é assíncrono para habilitar implementações personalizadas que talvez precisem chamar o serviço de chamada para validar o par appId/senha.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAppIdAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsValidAppIdAsync (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidAppIdAsync(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ICredentialProvider.IsValidAppIdAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidAppIdAsync (appId As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsValidAppIdAsync : string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iCredentialProvider.IsValidAppIdAsync appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">A ID do aplicativo a ser validada.</param>
        <summary>Valida uma ID do aplicativo.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>Se a tarefa for bem-sucedida, o resultado será true se <paramref name="appId" /> for válido para o controlador; caso contrário, false.
            <para>
Esse método é assíncrono para habilitar implementações personalizadas que talvez precisem chamar o serviço de chamada para validar o par appId/senha.
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
