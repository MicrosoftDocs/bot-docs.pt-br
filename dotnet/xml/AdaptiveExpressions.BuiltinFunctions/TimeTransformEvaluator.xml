<Type Name="TimeTransformEvaluator" FullName="AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="349561928a7e89506b98c2b9aecde01aff623ac4" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95458850" /></Metadata><TypeSignature Language="C#" Value="public class TimeTransformEvaluator : AdaptiveExpressions.ExpressionEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimeTransformEvaluator extends AdaptiveExpressions.ExpressionEvaluator" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public Class TimeTransformEvaluator&#xA;Inherits ExpressionEvaluator" />
  <TypeSignature Language="F#" Value="type TimeTransformEvaluator = class&#xA;    inherit ExpressionEvaluator" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AdaptiveExpressions.ExpressionEvaluator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Avaliador que transforma uma data e hora em uma outra data e hora.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeTransformEvaluator (string type, Func&lt;DateTime,int,DateTime&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, class System.Func`3&lt;valuetype System.DateTime, int32, valuetype System.DateTime&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator.#ctor(System.String,System.Func{System.DateTime,System.Int32,System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, function As Func(Of DateTime, Integer, DateTime))" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator : string * Func&lt;DateTime, int, DateTime&gt; -&gt; AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator" Usage="new AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator (type, function)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="function" Type="System.Func&lt;System.DateTime,System.Int32,System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="type">Nome da função interna.</param>
        <param name="function">A função de transformação tempo, ela usa um objeto DateTime e um inteiro, retorna um objeto DateTime.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.BuiltinFunctions.TimeTransformEvaluator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
