<Type Name="IExpressionProperty" FullName="AdaptiveExpressions.Properties.IExpressionProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6a29aa1f6639a640d32e3d540eac9afe4cf677b" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95463820" /></Metadata><TypeSignature Language="C#" Value="public interface IExpressionProperty" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionProperty" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.Properties.IExpressionProperty" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionProperty" />
  <TypeSignature Language="F#" Value="type IExpressionProperty = interface" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Interface que define o acesso de objeto sem formatação aos valores de uma Expressionproperty.</summary>
    <remarks>Essa definição de interface permite que a reflexão funcione com Expressionproperty {T} sem precisar saber o tipo de parâmetro genérico.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public object GetObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.IExpressionProperty.GetObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (data As Object) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetObject : obj -&gt; obj" Usage="iExpressionProperty.GetObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">dados aos quais associar.</param>
        <summary>Obter valor como objeto.</summary>
        <returns>valor como objeto.</returns>
        <remarks>Métodos auxiliares que permitem trabalhar com os valores de propriedade de expressão como objetos puramente.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public void SetObject (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObject(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.IExpressionProperty.SetObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetObject (value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetObject : obj -&gt; unit" Usage="iExpressionProperty.SetObject value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">.</param>
        <summary>Defina o valor como objeto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObject">
      <MemberSignature Language="C#" Value="public (object,string) TryGetObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ValueTuple`2&lt;object, string&gt; TryGetObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.IExpressionProperty.TryGetObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObject (data As Object) As ValueTuple(Of Object, String)" />
      <MemberSignature Language="F#" Value="abstract member TryGetObject : obj -&gt; ValueTuple&lt;obj, string&gt;" Usage="iExpressionProperty.TryGetObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Object,System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "Error" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Value", "Error" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">do modelo.</param>
        <summary>Tente obter o valor como objeto.</summary>
        <returns>Valor e erro.</returns>
        <remarks>Métodos auxiliares que permitem trabalhar com os valores de propriedade de expressão como objetos puramente.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
