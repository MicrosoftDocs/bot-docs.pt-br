<Type Name="BoolExpression" FullName="AdaptiveExpressions.Properties.BoolExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36d30d6218f6f27d1a17ad7cf8592fd02909ea87" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95458640" /></Metadata><TypeSignature Language="C#" Value="public class BoolExpression : AdaptiveExpressions.Properties.ExpressionProperty&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoolExpression extends AdaptiveExpressions.Properties.ExpressionProperty`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.Properties.BoolExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class BoolExpression&#xA;Inherits ExpressionProperty(Of Boolean)" />
  <TypeSignature Language="F#" Value="type BoolExpression = class&#xA;    inherit ExpressionProperty&lt;bool&gt;" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AdaptiveExpressions.Properties.ExpressionProperty&lt;System.Boolean&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Boolean</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonConverter(typeof(AdaptiveExpressions.Converters.BoolExpressionConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonConverter(typeof(AdaptiveExpressions.Converters.BoolExpressionConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Boolid – representa uma propriedade que é uma expressão booliana ou uma cadeia de caracteres que é resolvida para um booliano.</summary>
    <remarks>Os valores de cadeia de caracteres são sempre interpretados como uma expressão, se ele tem o prefixo ' = ' ou não.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression (AdaptiveExpressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AdaptiveExpressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor(AdaptiveExpressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.BoolExpression : AdaptiveExpressions.Expression -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="new AdaptiveExpressions.Properties.BoolExpression expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="AdaptiveExpressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">expressão a ser resolvida para bool.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression (Newtonsoft.Json.Linq.JToken expressionOrValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Newtonsoft.Json.Linq.JToken expressionOrValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor(Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionOrValue As JToken)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.BoolExpression : Newtonsoft.Json.Linq.JToken -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="new AdaptiveExpressions.Properties.BoolExpression expressionOrValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionOrValue" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="expressionOrValue">expressão ou valor a ser resolvido para bool.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Boolean)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.BoolExpression : bool -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="new AdaptiveExpressions.Properties.BoolExpression value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">valor bool.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression (Func&lt;object,object&gt; lambda);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, object&gt; lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor(System.Func{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lambda As Func(Of Object, Object))" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.BoolExpression : Func&lt;obj, obj&gt; -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="new AdaptiveExpressions.Properties.BoolExpression lambda" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lambda" Type="System.Func&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">função (dados) que é avaliada como bool.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoolExpression (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.BoolExpression : string -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="new AdaptiveExpressions.Properties.BoolExpression expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">expressão a ser resolvida para bool.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.BoolExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.BoolExpression (AdaptiveExpressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.BoolExpression op_Implicit(class AdaptiveExpressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.op_Implicit(AdaptiveExpressions.Expression)~AdaptiveExpressions.Properties.BoolExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expression As Expression) As BoolExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : AdaptiveExpressions.Expression -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="AdaptiveExpressions.Properties.BoolExpression.op_Implicit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="AdaptiveExpressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">A instância de expressão a ser convertida.</param>
        <summary>Converte uma instância de expressão em bool.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.BoolExpression (Newtonsoft.Json.Linq.JToken expressionOrValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.BoolExpression op_Implicit(class Newtonsoft.Json.Linq.JToken expressionOrValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.op_Implicit(Newtonsoft.Json.Linq.JToken)~AdaptiveExpressions.Properties.BoolExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expressionOrValue As JToken) As BoolExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Newtonsoft.Json.Linq.JToken -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="AdaptiveExpressions.Properties.BoolExpression.op_Implicit expressionOrValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionOrValue" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="expressionOrValue">O token JSON a ser convertido.</param>
        <summary>Converte um token JSON em Boolion.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.BoolExpression (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.BoolExpression op_Implicit(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.op_Implicit(System.Boolean)~AdaptiveExpressions.Properties.BoolExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Boolean) As BoolExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : bool -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="AdaptiveExpressions.Properties.BoolExpression.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">O valor booliano a ser convertido.</param>
        <summary>Converte um valor booliano em uma bool.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.BoolExpression (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.BoolExpression op_Implicit(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.BoolExpression.op_Implicit(System.String)~AdaptiveExpressions.Properties.BoolExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expression As String) As BoolExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; AdaptiveExpressions.Properties.BoolExpression" Usage="AdaptiveExpressions.Properties.BoolExpression.op_Implicit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.BoolExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">O valor da cadeia de caracteres a ser convertida.</param>
        <summary>Converte um valor de cadeia de caracteres em uma bool.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
