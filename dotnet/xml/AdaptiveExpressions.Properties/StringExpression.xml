<Type Name="StringExpression" FullName="AdaptiveExpressions.Properties.StringExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef4eed61897baff4c98fbe529d1daff4fedc8299" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95455840" /></Metadata><TypeSignature Language="C#" Value="public class StringExpression : AdaptiveExpressions.Properties.ExpressionProperty&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringExpression extends AdaptiveExpressions.Properties.ExpressionProperty`1&lt;string&gt;" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.Properties.StringExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class StringExpression&#xA;Inherits ExpressionProperty(Of String)" />
  <TypeSignature Language="F#" Value="type StringExpression = class&#xA;    inherit ExpressionProperty&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>AdaptiveExpressions.Properties.ExpressionProperty&lt;System.String&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.String</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Newtonsoft.Json.JsonConverter(typeof(AdaptiveExpressions.Converters.StringExpressionConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonConverter(typeof(AdaptiveExpressions.Converters.StringExpressionConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stringid-representa uma propriedade que é um valor de cadeia de caracteres ou uma expressão de cadeia de caracteres.</summary>
    <remarks>Se o valor for * uma cadeia de caracteres com o prefixo ' = ', a cadeia de caracteres será tratada como uma expressão para resolver para uma cadeia de caracteres. * uma cadeia de caracteres sem ' = ', então o valor é tratado como cadeia de caracteres com interpolação de cadeia de caracteres.
* Você pode escapar do prefixo ' = ' colocando uma barra invertida.  
            Exemplos: prop = "Olá $ {user.name}" = &gt; "Olá, João" prop = "= Length (User. Name)" = &gt; "3" prop = "= User.Name" = &gt; "Joe" prop = " \= User" = &gt; "= user".</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.StringExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringExpression (AdaptiveExpressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class AdaptiveExpressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.#ctor(AdaptiveExpressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.StringExpression : AdaptiveExpressions.Expression -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="new AdaptiveExpressions.Properties.StringExpression expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="AdaptiveExpressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">expressão para uma cadeia de caracteres.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.StringExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringExpression (Newtonsoft.Json.Linq.JToken expressionOrValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Newtonsoft.Json.Linq.JToken expressionOrValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.#ctor(Newtonsoft.Json.Linq.JToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionOrValue As JToken)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.StringExpression : Newtonsoft.Json.Linq.JToken -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="new AdaptiveExpressions.Properties.StringExpression expressionOrValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionOrValue" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="expressionOrValue">valor a ser interpretado como uma cadeia de caracteres ou expressão para uma cadeia de caracteres.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.StringExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringExpression (Func&lt;object,object&gt; lambda);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, object&gt; lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.#ctor(System.Func{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lambda As Func(Of Object, Object))" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.StringExpression : Func&lt;obj, obj&gt; -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="new AdaptiveExpressions.Properties.StringExpression lambda" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lambda" Type="System.Func&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">função (dados) que é avaliada como cadeia de caracteres.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.StringExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringExpression (string expressionOrValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionOrValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionOrValue As String)" />
      <MemberSignature Language="F#" Value="new AdaptiveExpressions.Properties.StringExpression : string -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="new AdaptiveExpressions.Properties.StringExpression expressionOrValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionOrValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionOrValue">Cadeia de caracteres para interpretar como cadeia de caracteres ou expressão para uma cadeia de caracteres.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.Properties.StringExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.StringExpression (AdaptiveExpressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.StringExpression op_Implicit(class AdaptiveExpressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.op_Implicit(AdaptiveExpressions.Expression)~AdaptiveExpressions.Properties.StringExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expression As Expression) As StringExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : AdaptiveExpressions.Expression -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="AdaptiveExpressions.Properties.StringExpression.op_Implicit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.StringExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="AdaptiveExpressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">A instância de expressão a ser convertida.</param>
        <summary>Converte uma instância de expressão em uma instância de Stringion.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.StringExpression (Newtonsoft.Json.Linq.JToken valueOrExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.StringExpression op_Implicit(class Newtonsoft.Json.Linq.JToken valueOrExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.op_Implicit(Newtonsoft.Json.Linq.JToken)~AdaptiveExpressions.Properties.StringExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (valueOrExpression As JToken) As StringExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Newtonsoft.Json.Linq.JToken -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="AdaptiveExpressions.Properties.StringExpression.op_Implicit valueOrExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.StringExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueOrExpression" Type="Newtonsoft.Json.Linq.JToken" />
      </Parameters>
      <Docs>
        <param name="valueOrExpression">O token JSON a ser convertido.</param>
        <summary>Converte um token JSON em uma instância de Stringion.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator AdaptiveExpressions.Properties.StringExpression (string valueOrExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class AdaptiveExpressions.Properties.StringExpression op_Implicit(string valueOrExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.op_Implicit(System.String)~AdaptiveExpressions.Properties.StringExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (valueOrExpression As String) As StringExpression" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; AdaptiveExpressions.Properties.StringExpression" Usage="AdaptiveExpressions.Properties.StringExpression.op_Implicit valueOrExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.Properties.StringExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueOrExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueOrExpression">O valor da cadeia de caracteres a ser convertida.</param>
        <summary>Converte um valor de cadeia de caracteres em uma instância de Stringion.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.Properties.StringExpression.SetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (value As Object)" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj -&gt; unit" Usage="stringExpression.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valor a ser definido.</param>
        <summary>Define o valor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
