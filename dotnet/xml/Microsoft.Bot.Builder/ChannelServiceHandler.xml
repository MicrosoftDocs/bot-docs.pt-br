<Type Name="ChannelServiceHandler" FullName="Microsoft.Bot.Builder.ChannelServiceHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d63a4a517bd431bd63f0a71c62521499931c8e14" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93152214" /></Metadata><TypeSignature Language="C#" Value="public class ChannelServiceHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelServiceHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.ChannelServiceHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelServiceHandler" />
  <TypeSignature Language="F#" Value="type ChannelServiceHandler = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uma classe para ajudar na implementação do protocolo bot Framework.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelServiceHandler (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfiguration, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfiguration, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,Microsoft.Bot.Connector.Authentication.IChannelProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, authConfiguration As AuthenticationConfiguration, Optional channelProvider As IChannelProvider = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.ChannelServiceHandler : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * Microsoft.Bot.Connector.Authentication.IChannelProvider -&gt; Microsoft.Bot.Builder.ChannelServiceHandler" Usage="new Microsoft.Bot.Builder.ChannelServiceHandler (credentialProvider, authConfiguration, channelProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="authConfiguration" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="authConfiguration">A configuração de autenticação.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <summary>Inicializa uma nova instância da <see cref="T:Microsoft.Bot.Builder.ChannelServiceHandler" /> classe usando um provedor de credenciais.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">lançar ArgumentNullException.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelProvider">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Connector.Authentication.IChannelProvider ChannelProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Connector.Authentication.IChannelProvider ChannelProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.ChannelServiceHandler.ChannelProvider" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ChannelProvider As IChannelProvider" />
      <MemberSignature Language="F#" Value="member this.ChannelProvider : Microsoft.Bot.Connector.Authentication.IChannelProvider" Usage="Microsoft.Bot.Builder.ChannelServiceHandler.ChannelProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.Authentication.IChannelProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o provedor de canal que implementa o <see cref="T:Microsoft.Bot.Connector.Authentication.IChannelProvider" /> .</summary>
        <value>O provedor de canal que implementa o <see cref="T:Microsoft.Bot.Connector.Authentication.IChannelProvider" /> .</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleCreateConversationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt; HandleCreateConversationAsync (string authHeader, Microsoft.Bot.Schema.ConversationParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ConversationResourceResponse&gt; HandleCreateConversationAsync(string authHeader, class Microsoft.Bot.Schema.ConversationParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleCreateConversationAsync(System.String,Microsoft.Bot.Schema.ConversationParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleCreateConversationAsync (authHeader As String, parameters As ConversationParameters, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConversationResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleCreateConversationAsync : string * Microsoft.Bot.Schema.ConversationParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;" Usage="channelServiceHandler.HandleCreateConversationAsync (authHeader, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Bot.Schema.ConversationParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="parameters">Parâmetros dos quais criar a conversa.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Crie uma nova conversa.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleDeleteActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleDeleteActivityAsync (string authHeader, string conversationId, string activityId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task HandleDeleteActivityAsync(string authHeader, string conversationId, string activityId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleDeleteActivityAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleDeleteActivityAsync (authHeader As String, conversationId As String, activityId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.HandleDeleteActivityAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="channelServiceHandler.HandleDeleteActivityAsync (authHeader, conversationId, activityId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="activityId">A ID da atividade.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Exclui uma atividade existente.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleDeleteConversationMemberAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleDeleteConversationMemberAsync (string authHeader, string conversationId, string memberId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task HandleDeleteConversationMemberAsync(string authHeader, string conversationId, string memberId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleDeleteConversationMemberAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleDeleteConversationMemberAsync (authHeader As String, conversationId As String, memberId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.HandleDeleteConversationMemberAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="channelServiceHandler.HandleDeleteConversationMemberAsync (authHeader, conversationId, memberId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="memberId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="memberId">ID do membro a ser excluído desta conversa.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Exclui um membro de uma conversa.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task" /> representando a operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleGetActivityMembersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt; HandleGetActivityMembersAsync (string authHeader, string conversationId, string activityId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt; HandleGetActivityMembersAsync(string authHeader, string conversationId, string activityId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleGetActivityMembersAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleGetActivityMembersAsync (authHeader As String, conversationId As String, activityId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of ChannelAccount))" />
      <MemberSignature Language="F#" Value="member this.HandleGetActivityMembersAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;" Usage="channelServiceHandler.HandleGetActivityMembersAsync (authHeader, conversationId, activityId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="activityId">A ID da atividade.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Enumera os membros de uma atividade.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleGetConversationMembersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt; HandleGetConversationMembersAsync (string authHeader, string conversationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt; HandleGetConversationMembersAsync(string authHeader, string conversationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleGetConversationMembersAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleGetConversationMembersAsync (authHeader As String, conversationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of ChannelAccount))" />
      <MemberSignature Language="F#" Value="member this.HandleGetConversationMembersAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;" Usage="channelServiceHandler.HandleGetConversationMembersAsync (authHeader, conversationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Enumera os membros de uma conversa.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleGetConversationPagedMembersAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt; HandleGetConversationPagedMembersAsync (string authHeader, string conversationId, int? pageSize = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.PagedMembersResult&gt; HandleGetConversationPagedMembersAsync(string authHeader, string conversationId, valuetype System.Nullable`1&lt;int32&gt; pageSize, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleGetConversationPagedMembersAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleGetConversationPagedMembersAsync (authHeader As String, conversationId As String, Optional pageSize As Nullable(Of Integer) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PagedMembersResult)" />
      <MemberSignature Language="F#" Value="member this.HandleGetConversationPagedMembersAsync : string * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;" Usage="channelServiceHandler.HandleGetConversationPagedMembersAsync (authHeader, conversationId, pageSize, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="pageSize">Tamanho de página sugerido.</param>
        <param name="continuationToken">Um token de continuação.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Enumera os membros de uma conversa de uma página por vez.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleGetConversationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt; HandleGetConversationsAsync (string authHeader, string conversationId, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ConversationsResult&gt; HandleGetConversationsAsync(string authHeader, string conversationId, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleGetConversationsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleGetConversationsAsync (authHeader As String, conversationId As String, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConversationsResult)" />
      <MemberSignature Language="F#" Value="member this.HandleGetConversationsAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt;" Usage="channelServiceHandler.HandleGetConversationsAsync (authHeader, conversationId, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="continuationToken">Um token de ignorar ou de continuação.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Lista as conversas nas quais o bot participou.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleReplyToActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; HandleReplyToActivityAsync (string authHeader, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; HandleReplyToActivityAsync(string authHeader, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleReplyToActivityAsync(System.String,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleReplyToActivityAsync (authHeader As String, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleReplyToActivityAsync : string * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.HandleReplyToActivityAsync (authHeader, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="activityId">A ID da atividade à qual a resposta se destina.</param>
        <param name="activity">A atividade a ser enviada.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Envia uma resposta a uma atividade.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleSendConversationHistoryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; HandleSendConversationHistoryAsync (string authHeader, string conversationId, Microsoft.Bot.Schema.Transcript transcript, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; HandleSendConversationHistoryAsync(string authHeader, string conversationId, class Microsoft.Bot.Schema.Transcript transcript, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleSendConversationHistoryAsync(System.String,System.String,Microsoft.Bot.Schema.Transcript,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleSendConversationHistoryAsync (authHeader As String, conversationId As String, transcript As Transcript, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleSendConversationHistoryAsync : string * string * Microsoft.Bot.Schema.Transcript * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.HandleSendConversationHistoryAsync (authHeader, conversationId, transcript, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="transcript" Type="Microsoft.Bot.Schema.Transcript" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="transcript">Transcrição de atividades.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Carrega as atividades históricas da conversa.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleSendToConversationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; HandleSendToConversationAsync (string authHeader, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; HandleSendToConversationAsync(string authHeader, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleSendToConversationAsync(System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleSendToConversationAsync (authHeader As String, conversationId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleSendToConversationAsync : string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.HandleSendToConversationAsync (authHeader, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="activity">A atividade a ser enviada.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Envia uma atividade para o final de uma conversa.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleUpdateActivityAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; HandleUpdateActivityAsync (string authHeader, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; HandleUpdateActivityAsync(string authHeader, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleUpdateActivityAsync(System.String,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleUpdateActivityAsync (authHeader As String, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleUpdateActivityAsync : string * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.HandleUpdateActivityAsync (authHeader, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="activityId">A ID da atividade a ser atualizada.</param>
        <param name="activity">A atividade de substituição.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Edita uma atividade existente enviada anteriormente.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleUploadAttachmentAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; HandleUploadAttachmentAsync (string authHeader, string conversationId, Microsoft.Bot.Schema.AttachmentData attachmentUpload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; HandleUploadAttachmentAsync(string authHeader, string conversationId, class Microsoft.Bot.Schema.AttachmentData attachmentUpload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.HandleUploadAttachmentAsync(System.String,System.String,Microsoft.Bot.Schema.AttachmentData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleUploadAttachmentAsync (authHeader As String, conversationId As String, attachmentUpload As AttachmentData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="member this.HandleUploadAttachmentAsync : string * string * Microsoft.Bot.Schema.AttachmentData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.HandleUploadAttachmentAsync (authHeader, conversationId, attachmentUpload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="attachmentUpload" Type="Microsoft.Bot.Schema.AttachmentData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="authHeader">O cabeçalho de autenticação.</param>
        <param name="conversationId">A ID da conversa.</param>
        <param name="attachmentUpload">Dados de anexo.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Armazena dados em um repositório em conformidade ao lidar com empresas.</summary>
        <returns>Um <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado da operação assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateConversationAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt; OnCreateConversationAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, Microsoft.Bot.Schema.ConversationParameters parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ConversationResourceResponse&gt; OnCreateConversationAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, class Microsoft.Bot.Schema.ConversationParameters parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnCreateConversationAsync(System.Security.Claims.ClaimsIdentity,Microsoft.Bot.Schema.ConversationParameters,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateConversationAsync (claimsIdentity As ClaimsIdentity, parameters As ConversationParameters, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConversationResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateConversationAsync : System.Security.Claims.ClaimsIdentity * Microsoft.Bot.Schema.ConversationParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;&#xA;override this.OnCreateConversationAsync : System.Security.Claims.ClaimsIdentity * Microsoft.Bot.Schema.ConversationParameters * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;" Usage="channelServiceHandler.OnCreateConversationAsync (claimsIdentity, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="parameters" Type="Microsoft.Bot.Schema.ConversationParameters" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="parameters">Parâmetros dos quais criar a conversa.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API createconversation ().</summary>
        <returns>tarefa para uma resposta de recurso de conversa.</returns>
        <remarks>Substitua esse método para criar uma nova conversa.
            
POSTE nesse método com um bot * sendo o bot criando a conversa * IsGroup definida como true se esta não for uma mensagem direta (o padrão é false) * matriz que contém os membros a serem incluídos na conversa 
O valor de retorno é um ResourceResponse que contém uma ID de conversa que é adequada para uso na carga da mensagem e nos URIs da API REST.
            
A maioria dos canais oferece suporte apenas à semântica de bots que iniciam uma conversa de mensagem direta.  Um exemplo de como fazer isso seria: 
var Resource = Await Connector. Conversations. createconversation (New Conversation () {bot = bot, Members = New ChannelAccount [] {New ChannelAccount ("Usuário1")}); Await Connect. Conversations. OnSendToConversationAsync (recurso. ID, nova atividade ()...) ; 
completo.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnDeleteActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnDeleteActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnDeleteActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeleteActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnDeleteActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="channelServiceHandler.OnDeleteActivityAsync (claimsIdentity, conversationId, activityId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="activityId">ActivityId a ser excluída.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API OnDeleteActivityAsync ().</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Substitua esse método para excluir uma atividade existente.
            
Alguns canais permitem que você exclua uma atividade existente e, se for bem-sucedido, esse método removerá a atividade especificada.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteConversationMemberAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnDeleteConversationMemberAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string memberId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnDeleteConversationMemberAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string memberId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnDeleteConversationMemberAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeleteConversationMemberAsync (claimsIdentity As ClaimsIdentity, conversationId As String, memberId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteConversationMemberAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnDeleteConversationMemberAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="channelServiceHandler.OnDeleteConversationMemberAsync (claimsIdentity, conversationId, memberId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="memberId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="memberId">ID do membro a ser excluído desta conversa.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API DeleteConversationMember () para habilidade.</summary>
        <returns>agenda.</returns>
        <remarks>Substitua esse método para excluir um membro de uma conversa.
            
Essa API REST usa uma Conversaid e um MemberId (do tipo cadeia de caracteres) e remove esse membro da conversa. Se esse membro for o último da conversa, a conversa também será excluída.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetActivityMembersAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt; OnGetActivityMembersAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt; OnGetActivityMembersAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnGetActivityMembersAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetActivityMembersAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of ChannelAccount))" />
      <MemberSignature Language="F#" Value="abstract member OnGetActivityMembersAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&#xA;override this.OnGetActivityMembersAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;" Usage="channelServiceHandler.OnGetActivityMembersAsync (claimsIdentity, conversationId, activityId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="activityId">ID da atividade.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API OnGetActivityMembersAsync ().</summary>
        <returns>tarefa com resultado.</returns>
        <remarks>Substitua esse método para enumerar os membros de uma atividade.
            
Essa API REST usa uma Conversaid e uma ActivityId, retornando uma matriz de objetos ChannelAccount representando os membros da atividade específica na conversa.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetConversationMembersAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt; OnGetConversationMembersAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt; OnGetConversationMembersAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnGetConversationMembersAsync(System.Security.Claims.ClaimsIdentity,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetConversationMembersAsync (claimsIdentity As ClaimsIdentity, conversationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IList(Of ChannelAccount))" />
      <MemberSignature Language="F#" Value="abstract member OnGetConversationMembersAsync : System.Security.Claims.ClaimsIdentity * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&#xA;override this.OnGetConversationMembersAsync : System.Security.Claims.ClaimsIdentity * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;" Usage="channelServiceHandler.OnGetConversationMembersAsync (claimsIdentity, conversationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API GetConversationMembers () para habilidade.</summary>
        <returns>tarefa para uma resposta.</returns>
        <remarks>Substitua esse método para enumerar os membros de uma conversa.
            
Essa API REST usa uma Conversaid e retorna uma matriz de objetos ChannelAccount que representam os membros da conversa.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetConversationPagedMembersAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt; OnGetConversationPagedMembersAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, int? pageSize = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.PagedMembersResult&gt; OnGetConversationPagedMembersAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, valuetype System.Nullable`1&lt;int32&gt; pageSize, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnGetConversationPagedMembersAsync(System.Security.Claims.ClaimsIdentity,System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetConversationPagedMembersAsync (claimsIdentity As ClaimsIdentity, conversationId As String, Optional pageSize As Nullable(Of Integer) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PagedMembersResult)" />
      <MemberSignature Language="F#" Value="abstract member OnGetConversationPagedMembersAsync : System.Security.Claims.ClaimsIdentity * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;&#xA;override this.OnGetConversationPagedMembersAsync : System.Security.Claims.ClaimsIdentity * string * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;" Usage="channelServiceHandler.OnGetConversationPagedMembersAsync (claimsIdentity, conversationId, pageSize, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="pageSize">Tamanho de página sugerido.</param>
        <param name="continuationToken">Token de continuação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API GetConversationPagedMembers () para habilidade.</summary>
        <returns>tarefa para uma resposta.</returns>
        <remarks>Substitua esse método para enumerar os membros de uma conversa de uma página por vez.
            
Essa API REST usa uma Conversaid. Opcionalmente, um pageSize e/ou continuationToken podem ser fornecidos. Ele retorna um PagedMembersResult, que contém uma matriz de ChannelAccounts que representa os membros da conversa e um token de continuação que pode ser usado para obter mais valores.
            
Uma página de registros ChannelAccounts é retornada com cada chamada. O número de registros em uma página pode variar entre canais e chamadas. O parâmetro pageSize pode ser usado como uma sugestão. Se não houver nenhum resultado adicional, a resposta não conterá um token de continuação. Se não houver Membros na conversa, os membros ficarão vazios ou não estarão presentes na resposta.
            
Uma resposta a uma solicitação que tem um token de continuação de uma solicitação anterior pode raramente retornar membros de uma solicitação anterior.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetConversationsAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt; OnGetConversationsAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ConversationsResult&gt; OnGetConversationsAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnGetConversationsAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetConversationsAsync (claimsIdentity As ClaimsIdentity, conversationId As String, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ConversationsResult)" />
      <MemberSignature Language="F#" Value="abstract member OnGetConversationsAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt;&#xA;override this.OnGetConversationsAsync : System.Security.Claims.ClaimsIdentity * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt;" Usage="channelServiceHandler.OnGetConversationsAsync (claimsIdentity, conversationId, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ConversationsResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">conversaid.</param>
        <param name="continuationToken">token de ignorar ou de continuação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API OnGetConversationsAsync () para habilidade.</summary>
        <returns>tarefa para ConversationsResult.</returns>
        <remarks>Substitua esse método para listar as conversas nas quais esse bot participou.
            
OBTER deste método com um token de salto 
O valor de retorno é um ConversationsResult, que contém uma matriz de ConversationMembers e um token Skip.  Se o token de salto não estiver vazio, haverá valores adicionais a serem retornados. Chame esse método novamente com o token retornado para obter mais valores.
            
Cada objeto ConversationMembers contém a ID da conversa e uma matriz de ChannelAccounts que descrevem os membros da conversa.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReplyToActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnReplyToActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnReplyToActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnReplyToActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReplyToActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnReplyToActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&#xA;override this.OnReplyToActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.OnReplyToActivityAsync (claimsIdentity, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="activityId">ActivityId a resposta é (opcional).</param>
        <param name="activity">Atividade a ser enviada.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API OnReplyToActivityAsync ().</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>A substituição desse método permite responder a uma atividade.
            
Isso é um pouco diferente de SendToConversation ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendConversationHistoryAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnSendConversationHistoryAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, Microsoft.Bot.Schema.Transcript transcript, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnSendConversationHistoryAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, class Microsoft.Bot.Schema.Transcript transcript, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnSendConversationHistoryAsync(System.Security.Claims.ClaimsIdentity,System.String,Microsoft.Bot.Schema.Transcript,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSendConversationHistoryAsync (claimsIdentity As ClaimsIdentity, conversationId As String, transcript As Transcript, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnSendConversationHistoryAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.Transcript * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&#xA;override this.OnSendConversationHistoryAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.Transcript * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.OnSendConversationHistoryAsync (claimsIdentity, conversationId, transcript, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="transcript" Type="Microsoft.Bot.Schema.Transcript" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="transcript">Transcrição de atividades.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API SendConversationHistory () para habilidade.</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Substituir esse método para esse método permite que você carregue as atividades históricas para a conversa.
            
O remetente deve garantir que as atividades históricas tenham IDs exclusivas e carimbos de data/hora apropriados. As IDs são usadas pelo cliente para lidar com atividades duplicadas e os carimbos de data/hora são usados pelo cliente para renderizar as atividades na ordem correta.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendToConversationAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnSendToConversationAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnSendToConversationAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnSendToConversationAsync(System.Security.Claims.ClaimsIdentity,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSendToConversationAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnSendToConversationAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&#xA;override this.OnSendToConversationAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.OnSendToConversationAsync (claimsIdentity, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">conversaid.</param>
        <param name="activity">Atividade a ser enviada.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API SendToConversation () para habilidade.</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Esse método permite que você envie uma atividade ao final de uma conversa.
            
Isso é um pouco diferente de ReplyToActivity ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnUpdateActivityAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnUpdateActivityAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnUpdateActivityAsync(System.Security.Claims.ClaimsIdentity,System.String,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUpdateActivityAsync (claimsIdentity As ClaimsIdentity, conversationId As String, activityId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&#xA;override this.OnUpdateActivityAsync : System.Security.Claims.ClaimsIdentity * string * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.OnUpdateActivityAsync (claimsIdentity, conversationId, activityId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="activityId">ActivityId para atualizar.</param>
        <param name="activity">Atividade de substituição.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API OnUpdateActivityAsync ().</summary>
        <returns>tarefa para uma resposta de recurso.</returns>
        <remarks>Substitua esse método para editar uma atividade existente enviada anteriormente.
            
Alguns canais permitem editar uma atividade existente para refletir o novo estado de uma conversa de bot.
            
Por exemplo, você pode remover botões depois que alguém clicar no botão "aprovar".</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUploadAttachmentAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt; OnUploadAttachmentAsync (System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, Microsoft.Bot.Schema.AttachmentData attachmentUpload, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt; OnUploadAttachmentAsync(class System.Security.Claims.ClaimsIdentity claimsIdentity, string conversationId, class Microsoft.Bot.Schema.AttachmentData attachmentUpload, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ChannelServiceHandler.OnUploadAttachmentAsync(System.Security.Claims.ClaimsIdentity,System.String,Microsoft.Bot.Schema.AttachmentData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUploadAttachmentAsync (claimsIdentity As ClaimsIdentity, conversationId As String, attachmentUpload As AttachmentData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnUploadAttachmentAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.AttachmentData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&#xA;override this.OnUploadAttachmentAsync : System.Security.Claims.ClaimsIdentity * string * Microsoft.Bot.Schema.AttachmentData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;" Usage="channelServiceHandler.OnUploadAttachmentAsync (claimsIdentity, conversationId, attachmentUpload, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.ResourceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="attachmentUpload" Type="Microsoft.Bot.Schema.AttachmentData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="claimsIdentity">claimsIdentity para o bot deve ter AudienceClaim, AppIdClaim e ServiceUrlClaim.</param>
        <param name="conversationId">ID da conversa.</param>
        <param name="attachmentUpload">Dados de anexo.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>API UploadAttachment ().</summary>
        <returns>tarefa com resultado.</returns>
        <remarks>Substitua esse método para armazenar dados em um repositório em conformidade ao lidar com empresas.
            
A resposta é um ResourceResponse que contém um attachmentid que é adequado para usar com a API de anexos.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
