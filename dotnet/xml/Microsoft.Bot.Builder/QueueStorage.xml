<Type Name="QueueStorage" FullName="Microsoft.Bot.Builder.QueueStorage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ef61bed3f7733cefc2b57f3b6a84475396246b0" /><Meta Name="ms.sourcegitcommit" Value="36928e6f81288095af0c66776a5ef320ec309c1a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/13/2020" /><Meta Name="ms.locfileid" Value="94618363" /></Metadata><TypeSignature Language="C#" Value="public abstract class QueueStorage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit QueueStorage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.QueueStorage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class QueueStorage" />
  <TypeSignature Language="F#" Value="type QueueStorage = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uma classe base para enfileirar uma atividade para processamento posterior.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueueStorage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.QueueStorage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueActivityAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;string&gt; QueueActivityAsync (Microsoft.Bot.Schema.Activity activity, TimeSpan? visibilityTimeout = default, TimeSpan? timeToLive = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; QueueActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; visibilityTimeout, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; timeToLive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.QueueStorage.QueueActivityAsync(Microsoft.Bot.Schema.Activity,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function QueueActivityAsync (activity As Activity, Optional visibilityTimeout As Nullable(Of TimeSpan) = Nothing, Optional timeToLive As Nullable(Of TimeSpan) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member QueueActivityAsync : Microsoft.Bot.Schema.Activity * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="queueStorage.QueueActivityAsync (activity, visibilityTimeout, timeToLive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="visibilityTimeout" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="timeToLive" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">O <see cref="T:Microsoft.Bot.Schema.Activity" /> a ser enfileirado para processamento posterior.</param>
        <param name="visibilityTimeout">Tempo limite de visibilidade.  Opcional com um valor padrão de 0.  Não pode ser maior que 7 dias.</param>
        <param name="timeToLive">Especifica o intervalo de vida útil para a mensagem.</param>
        <param name="cancellationToken">Token de cancelamento para a operação assíncrona.</param>
        <summary>Enfileira uma atividade para processamento posterior. O tempo limite de visibilidade especifica por quanto tempo a mensagem deve ser invisível para remover as operações de retirada da fila e de inspeção. O conteúdo da mensagem deve ser uma cadeia de caracteres codificada em UTF-8 com tamanho de 64 KB.</summary>
        <returns>Uma cadeia de caracteres de resultado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
