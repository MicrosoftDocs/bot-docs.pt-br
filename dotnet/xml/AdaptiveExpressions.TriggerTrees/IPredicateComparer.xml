<Type Name="IPredicateComparer" FullName="AdaptiveExpressions.TriggerTrees.IPredicateComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bba698d3a6f0f961a04656a22cda723711312fa" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151384" /></Metadata><TypeSignature Language="C#" Value="public interface IPredicateComparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPredicateComparer" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.TriggerTrees.IPredicateComparer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPredicateComparer" />
  <TypeSignature Language="F#" Value="type IPredicateComparer = interface" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Compare dois predicados para identificar a relação entre eles.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public string Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Predicate" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.IPredicateComparer.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As String" />
      <MemberSignature Language="F#" Value="member this.Predicate : string" Usage="AdaptiveExpressions.TriggerTrees.IPredicateComparer.Predicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do predicado.</summary>
        <value>Nome do predicado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relationship">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.RelationshipType Relationship (AdaptiveExpressions.Expression predicate, AdaptiveExpressions.Expression other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype AdaptiveExpressions.TriggerTrees.RelationshipType Relationship(class AdaptiveExpressions.Expression predicate, class AdaptiveExpressions.Expression other) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.IPredicateComparer.Relationship(AdaptiveExpressions.Expression,AdaptiveExpressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Relationship (predicate As Expression, other As Expression) As RelationshipType" />
      <MemberSignature Language="F#" Value="abstract member Relationship : AdaptiveExpressions.Expression * AdaptiveExpressions.Expression -&gt; AdaptiveExpressions.TriggerTrees.RelationshipType" Usage="iPredicateComparer.Relationship (predicate, other)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.RelationshipType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="AdaptiveExpressions.Expression" />
        <Parameter Name="other" Type="AdaptiveExpressions.Expression" />
      </Parameters>
      <Docs>
        <param name="predicate">Primeiro predicado.</param>
        <param name="other">Segundo predicado.</param>
        <summary>Identifique a relação entre dois predicados.</summary>
        <returns>Relação entre predicados.</returns>
        <remarks>Isso é útil para fazer coisas como identificar esse intervalo ("tamanho", 1, 5) é mais especializado do que o intervalo ("tamanho", 1, 10).</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
