<Type Name="IOptimizer" FullName="AdaptiveExpressions.TriggerTrees.IOptimizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9da5dfa53d74bee5ad62463bda2f4d101e0fd84" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93151385" /></Metadata><TypeSignature Language="C#" Value="public interface IOptimizer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOptimizer" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.TriggerTrees.IOptimizer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOptimizer" />
  <TypeSignature Language="F#" Value="type IOptimizer = interface" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Otimize uma cláusula reescrevendo-a.</summary>
    <remarks>Se a cláusula retornada for nula, a expressão será sempre falsa.
Isso é para permitir coisas como combinar comparações simples em um predicado de intervalo.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Optimize">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Clause Optimize (AdaptiveExpressions.TriggerTrees.Clause clause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class AdaptiveExpressions.TriggerTrees.Clause Optimize(class AdaptiveExpressions.TriggerTrees.Clause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.IOptimizer.Optimize(AdaptiveExpressions.TriggerTrees.Clause)" />
      <MemberSignature Language="VB.NET" Value="Public Function Optimize (clause As Clause) As Clause" />
      <MemberSignature Language="F#" Value="abstract member Optimize : AdaptiveExpressions.TriggerTrees.Clause -&gt; AdaptiveExpressions.TriggerTrees.Clause" Usage="iOptimizer.Optimize clause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Clause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clause" Type="AdaptiveExpressions.TriggerTrees.Clause" />
      </Parameters>
      <Docs>
        <param name="clause">Cláusula original.</param>
        <summary>Opcionalmente, reescreva uma cláusula.</summary>
        <returns>Cláusula otimizada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
