<Type Name="TriggerTree" FullName="AdaptiveExpressions.TriggerTrees.TriggerTree">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da225d002aff8d10ff7ddc7d630be39b3eb30b1d" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95463640" /></Metadata><TypeSignature Language="C#" Value="public class TriggerTree" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TriggerTree extends System.Object" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.TriggerTrees.TriggerTree" />
  <TypeSignature Language="VB.NET" Value="Public Class TriggerTree" />
  <TypeSignature Language="F#" Value="type TriggerTree = class" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{ToString()}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{ToString()}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(AdaptiveExpressions.TriggerTrees.TriggerTree/Debugger))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(AdaptiveExpressions.TriggerTrees.TriggerTree/Debugger))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Uma árvore de gatilhos organiza avaliadores de acordo com generalização/especialização para facilitar o uso de regras.</summary>
    <remarks>Uma expressão de gatilho gera true se a expressão avaliada em um quadro for verdadeira.
A própria expressão consiste em funções booleanas arbitrárias ("predicados") combinadas com &amp; &amp; | |!.
A maioria dos predicados é expressa no quadro passado, mas pode ser qualquer coisa: há até mesmo maneiras de otimizar ou compará-los.
Organizando avaliadores em uma árvore (tecnicamente um DAG) torna-se mais fácil usar regras reduzindo o acoplamento entre as regras.
Por exemplo, se uma regra se aplicar se algum predicado A for true, outra regra que se aplique se A &amp; &amp; B for verdadeira será mais especializada.  Se a segunda expressão for true, porque sabemos que a relação pode ignorar a primeira regra, embora sua expressão seja verdadeira.  Sem esse tipo de recurso para adicionar a segunda regra, você precisaria alterar a primeira para se tornar um &amp; &amp; ! B.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TriggerTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:AdaptiveExpressions.TriggerTrees.TriggerTree" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrigger">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Trigger AddTrigger (AdaptiveExpressions.Expression expression, object action, params AdaptiveExpressions.TriggerTrees.Quantifier[] quantifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.TriggerTrees.Trigger AddTrigger(class AdaptiveExpressions.Expression expression, object action, class AdaptiveExpressions.TriggerTrees.Quantifier[] quantifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.AddTrigger(AdaptiveExpressions.Expression,System.Object,AdaptiveExpressions.TriggerTrees.Quantifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTrigger (expression As Expression, action As Object, ParamArray quantifiers As Quantifier()) As Trigger" />
      <MemberSignature Language="F#" Value="member this.AddTrigger : AdaptiveExpressions.Expression * obj * AdaptiveExpressions.TriggerTrees.Quantifier[] -&gt; AdaptiveExpressions.TriggerTrees.Trigger" Usage="triggerTree.AddTrigger (expression, action, quantifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Trigger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="AdaptiveExpressions.Expression" />
        <Parameter Name="action" Type="System.Object" />
        <Parameter Name="quantifiers" Type="AdaptiveExpressions.TriggerTrees.Quantifier[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expression">Gatilho a ser adicionado.</param>
        <param name="action">Ação quando disparada.</param>
        <param name="quantifiers">Quantificadores a serem usados ao expandir expressões.</param>
        <summary>Adicione uma expressão de gatilho à árvore.</summary>
        <returns>Novo gatilho.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrigger">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Trigger AddTrigger (string expression, object action, params AdaptiveExpressions.TriggerTrees.Quantifier[] quantifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.TriggerTrees.Trigger AddTrigger(string expression, object action, class AdaptiveExpressions.TriggerTrees.Quantifier[] quantifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.AddTrigger(System.String,System.Object,AdaptiveExpressions.TriggerTrees.Quantifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTrigger (expression As String, action As Object, ParamArray quantifiers As Quantifier()) As Trigger" />
      <MemberSignature Language="F#" Value="member this.AddTrigger : string * obj * AdaptiveExpressions.TriggerTrees.Quantifier[] -&gt; AdaptiveExpressions.TriggerTrees.Trigger" Usage="triggerTree.AddTrigger (expression, action, quantifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Trigger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="action" Type="System.Object" />
        <Parameter Name="quantifiers" Type="AdaptiveExpressions.TriggerTrees.Quantifier[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expression">Gatilho a ser adicionado.</param>
        <param name="action">Ação quando disparada.</param>
        <param name="quantifiers">Quantificadores a serem usados ao expandir expressões.</param>
        <summary>Adicione uma expressão de gatilho à árvore.</summary>
        <returns>Novo gatilho.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,AdaptiveExpressions.TriggerTrees.IPredicateComparer&gt; Comparers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class AdaptiveExpressions.TriggerTrees.IPredicateComparer&gt; Comparers" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.TriggerTree.Comparers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparers As Dictionary(Of String, IPredicateComparer)" />
      <MemberSignature Language="F#" Value="member this.Comparers : System.Collections.Generic.Dictionary&lt;string, AdaptiveExpressions.TriggerTrees.IPredicateComparer&gt;" Usage="AdaptiveExpressions.TriggerTrees.TriggerTree.Comparers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,AdaptiveExpressions.TriggerTrees.IPredicateComparer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor de um dicionário, que tem valores IPredicateComparer, com chaves de cadeia de caracteres.</summary>
        <value>Um dicionário de valores IPredicateComparer, com chaves de cadeia de caracteres.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGraph">
      <MemberSignature Language="C#" Value="public void GenerateGraph (string outPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateGraph(string outPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.GenerateGraph(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateGraph (outPath As String)" />
      <MemberSignature Language="F#" Value="member this.GenerateGraph : string -&gt; unit" Usage="triggerTree.GenerateGraph outPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outPath">O caminho para salvar o grafo.</param>
        <summary>Gera um grafo para o caminho fornecido.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt; Matches (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class AdaptiveExpressions.TriggerTrees.Trigger&gt; Matches(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.Matches(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (state As Object) As IEnumerable(Of Trigger)" />
      <MemberSignature Language="F#" Value="member this.Matches : obj -&gt; seq&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;" Usage="triggerTree.Matches state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;AdaptiveExpressions.TriggerTrees.Trigger&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Estado a ser avaliado.</param>
        <summary>Retorna as possíveis correspondências dadas o estado atual.</summary>
        <returns>Enumeração de possíveis correspondências.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optimizers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;AdaptiveExpressions.TriggerTrees.IOptimizer&gt; Optimizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class AdaptiveExpressions.TriggerTrees.IOptimizer&gt; Optimizers" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.TriggerTree.Optimizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Optimizers As List(Of IOptimizer)" />
      <MemberSignature Language="F#" Value="member this.Optimizers : System.Collections.Generic.List&lt;AdaptiveExpressions.TriggerTrees.IOptimizer&gt;" Usage="AdaptiveExpressions.TriggerTrees.TriggerTree.Optimizers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;AdaptiveExpressions.TriggerTrees.IOptimizer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma lista de otimizadores para cláusulas de otimização.</summary>
        <value>Um valor de lista de otimizadores.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTrigger">
      <MemberSignature Language="C#" Value="public bool RemoveTrigger (AdaptiveExpressions.TriggerTrees.Trigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveTrigger(class AdaptiveExpressions.TriggerTrees.Trigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.RemoveTrigger(AdaptiveExpressions.TriggerTrees.Trigger)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveTrigger (trigger As Trigger) As Boolean" />
      <MemberSignature Language="F#" Value="member this.RemoveTrigger : AdaptiveExpressions.TriggerTrees.Trigger -&gt; bool" Usage="triggerTree.RemoveTrigger trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="AdaptiveExpressions.TriggerTrees.Trigger" />
      </Parameters>
      <Docs>
        <param name="trigger">Gatilho a ser removido.</param>
        <summary>Remover gatilho de árvore.</summary>
        <returns>Verdadeiro se o gatilho for removido.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Node Root { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class AdaptiveExpressions.TriggerTrees.Node Root" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.TriggerTree.Root" />
      <MemberSignature Language="VB.NET" Value="Public Property Root As Node" />
      <MemberSignature Language="F#" Value="member this.Root : AdaptiveExpressions.TriggerTrees.Node with get, set" Usage="AdaptiveExpressions.TriggerTrees.TriggerTree.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Node</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor do nó raiz.</summary>
        <value>Uma instância de nó.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="triggerTree.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cadeia de caracteres que representa o objeto atual.</summary>
        <returns>Um valor da cadeia de caracteres.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalTriggers">
      <MemberSignature Language="C#" Value="public int TotalTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalTriggers" />
      <MemberSignature Language="DocId" Value="P:AdaptiveExpressions.TriggerTrees.TriggerTree.TotalTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalTriggers As Integer" />
      <MemberSignature Language="F#" Value="member this.TotalTriggers : int with get, set" Usage="AdaptiveExpressions.TriggerTrees.TriggerTree.TotalTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número total de gatilhos.</summary>
        <value>Um número integet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeToString">
      <MemberSignature Language="C#" Value="public string TreeToString (int indent = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TreeToString(int32 indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.TreeToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TreeToString (Optional indent As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="member this.TreeToString : int -&gt; string" Usage="triggerTree.TreeToString indent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indent">Nível de recuo atual.</param>
        <summary>Gerar uma cadeia de caracteres que descreve a árvore.</summary>
        <returns>Cadeia de caracteres que descreve a árvore.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTree">
      <MemberSignature Language="C#" Value="public AdaptiveExpressions.TriggerTrees.Node VerifyTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class AdaptiveExpressions.TriggerTrees.Node VerifyTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.TriggerTree.VerifyTree" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyTree () As Node" />
      <MemberSignature Language="F#" Value="member this.VerifyTree : unit -&gt; AdaptiveExpressions.TriggerTrees.Node" Usage="triggerTree.VerifyTree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.Node</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verifique se a árvore atende a invariáveis de especialização/generalização.</summary>
        <returns>Nó inadequado, se encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
