<Type Name="Extensions" FullName="AdaptiveExpressions.TriggerTrees.Extensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec4b92ea211673c06de6f49c626d2a1b9d6e68cc" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95463700" /></Metadata><TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.TriggerTrees.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Método de extensão para alternar entre <see cref="T:AdaptiveExpressions.TriggerTrees.RelationshipType" /> "generalizados" e "specialize".</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Swap">
      <MemberSignature Language="C#" Value="public static AdaptiveExpressions.TriggerTrees.RelationshipType Swap (this AdaptiveExpressions.TriggerTrees.RelationshipType original);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype AdaptiveExpressions.TriggerTrees.RelationshipType Swap(valuetype AdaptiveExpressions.TriggerTrees.RelationshipType original) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.TriggerTrees.Extensions.Swap(AdaptiveExpressions.TriggerTrees.RelationshipType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Swap (original As RelationshipType) As RelationshipType" />
      <MemberSignature Language="F#" Value="static member Swap : AdaptiveExpressions.TriggerTrees.RelationshipType -&gt; AdaptiveExpressions.TriggerTrees.RelationshipType" Usage="AdaptiveExpressions.TriggerTrees.Extensions.Swap original" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>AdaptiveExpressions.TriggerTrees.RelationshipType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="AdaptiveExpressions.TriggerTrees.RelationshipType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="original">O Relationtype original.</param>
        <summary>Operação de permuta entre RelationshipType. Generalizations e RelationshipType. specialize.
Se o original for RelationshipType. specialize, a operação de permuta retornará RelationshipType. Generalizations.
Se o original for RelationshipType. generaliza, a operação de permuta retornará RelationshipType. specialize.
Caso contrário, a operação de permuta retorna o Relationtype original.</summary>
        <returns>O RelationshipType após a troca.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
