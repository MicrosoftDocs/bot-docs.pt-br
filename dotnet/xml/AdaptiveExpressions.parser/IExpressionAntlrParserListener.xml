<Type Name="IExpressionAntlrParserListener" FullName="AdaptiveExpressions.parser.IExpressionAntlrParserListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea373027285a4d15e37a946136073122e8cddc9a" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93150290" /></Metadata><TypeSignature Language="C#" Value="public interface IExpressionAntlrParserListener : Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionAntlrParserListener implements class Antlr4.Runtime.Tree.IParseTreeListener" />
  <TypeSignature Language="DocId" Value="T:AdaptiveExpressions.parser.IExpressionAntlrParserListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionAntlrParserListener&#xA;Implements IParseTreeListener" />
  <TypeSignature Language="F#" Value="type IExpressionAntlrParserListener = interface&#xA;    interface IParseTreeListener" />
  <AssemblyInfo>
    <AssemblyName>AdaptiveExpressions</AssemblyName>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Antlr4.Runtime.Tree.IParseTreeListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Essa interface define um ouvinte completo para uma árvore de análise produzida pelo <see cref="T:AdaptiveExpressions.parser.ExpressionAntlrParser" /> .</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EnterArgsList">
      <MemberSignature Language="C#" Value="public void EnterArgsList (AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterArgsList(class AdaptiveExpressions.parser.ExpressionAntlrParser/ArgsListContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterArgsList(AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterArgsList (context As ExpressionAntlrParser.ArgsListContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterArgsList : AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterArgsList context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ArgsListContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.argsList" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterArrayCreationExp">
      <MemberSignature Language="C#" Value="public void EnterArrayCreationExp (AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterArrayCreationExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/ArrayCreationExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterArrayCreationExp(AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterArrayCreationExp (context As ExpressionAntlrParser.ArrayCreationExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterArrayCreationExp : AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterArrayCreationExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ArrayCreationExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>arrayCreationExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterBinaryOpExp">
      <MemberSignature Language="C#" Value="public void EnterBinaryOpExp (AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterBinaryOpExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/BinaryOpExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterBinaryOpExp(AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterBinaryOpExp (context As ExpressionAntlrParser.BinaryOpExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterBinaryOpExp : AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterBinaryOpExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+BinaryOpExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>binaryOpExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterExpression">
      <MemberSignature Language="C#" Value="public void EnterExpression (AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterExpression(class AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterExpression(AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterExpression (context As ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterExpression : AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterExpression context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterFile">
      <MemberSignature Language="C#" Value="public void EnterFile (AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterFile(class AdaptiveExpressions.parser.ExpressionAntlrParser/FileContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterFile(AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterFile (context As ExpressionAntlrParser.FileContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterFile : AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterFile context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+FileContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.file" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterFuncInvokeExp">
      <MemberSignature Language="C#" Value="public void EnterFuncInvokeExp (AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterFuncInvokeExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/FuncInvokeExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterFuncInvokeExp(AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterFuncInvokeExp (context As ExpressionAntlrParser.FuncInvokeExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterFuncInvokeExp : AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterFuncInvokeExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+FuncInvokeExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>funcInvokeExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIdAtom">
      <MemberSignature Language="C#" Value="public void EnterIdAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIdAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/IdAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterIdAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterIdAtom (context As ExpressionAntlrParser.IdAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIdAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterIdAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+IdAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>idAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterIndexAccessExp">
      <MemberSignature Language="C#" Value="public void EnterIndexAccessExp (AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterIndexAccessExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/IndexAccessExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterIndexAccessExp(AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterIndexAccessExp (context As ExpressionAntlrParser.IndexAccessExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterIndexAccessExp : AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterIndexAccessExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+IndexAccessExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>indexAccessExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterJsonCreationExp">
      <MemberSignature Language="C#" Value="public void EnterJsonCreationExp (AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterJsonCreationExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/JsonCreationExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterJsonCreationExp(AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterJsonCreationExp (context As ExpressionAntlrParser.JsonCreationExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterJsonCreationExp : AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterJsonCreationExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+JsonCreationExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>jsonCreationExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKey">
      <MemberSignature Language="C#" Value="public void EnterKey (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKey(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterKey(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterKey (context As ExpressionAntlrParser.KeyContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKey : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterKey context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.key" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValuePair">
      <MemberSignature Language="C#" Value="public void EnterKeyValuePair (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValuePair(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyValuePairContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterKeyValuePair(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterKeyValuePair (context As ExpressionAntlrParser.KeyValuePairContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValuePair : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterKeyValuePair context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyValuePairContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.keyValuePair" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterKeyValuePairList">
      <MemberSignature Language="C#" Value="public void EnterKeyValuePairList (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterKeyValuePairList(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyValuePairListContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterKeyValuePairList(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterKeyValuePairList (context As ExpressionAntlrParser.KeyValuePairListContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterKeyValuePairList : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterKeyValuePairList context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyValuePairListContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.keyValuePairList" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterLambda">
      <MemberSignature Language="C#" Value="public void EnterLambda (AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterLambda(class AdaptiveExpressions.parser.ExpressionAntlrParser/LambdaContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterLambda(AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterLambda (context As ExpressionAntlrParser.LambdaContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterLambda : AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterLambda context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+LambdaContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.lambda" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterMemberAccessExp">
      <MemberSignature Language="C#" Value="public void EnterMemberAccessExp (AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterMemberAccessExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/MemberAccessExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterMemberAccessExp(AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterMemberAccessExp (context As ExpressionAntlrParser.MemberAccessExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterMemberAccessExp : AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterMemberAccessExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+MemberAccessExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>memberAccessExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterNumericAtom">
      <MemberSignature Language="C#" Value="public void EnterNumericAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterNumericAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/NumericAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterNumericAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterNumericAtom (context As ExpressionAntlrParser.NumericAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterNumericAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterNumericAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+NumericAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>numericAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterParenthesisExp">
      <MemberSignature Language="C#" Value="public void EnterParenthesisExp (AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterParenthesisExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/ParenthesisExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterParenthesisExp(AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterParenthesisExp (context As ExpressionAntlrParser.ParenthesisExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterParenthesisExp : AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterParenthesisExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ParenthesisExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>parenthesisExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterPrimaryExp">
      <MemberSignature Language="C#" Value="public void EnterPrimaryExp (AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterPrimaryExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/PrimaryExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterPrimaryExp(AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterPrimaryExp (context As ExpressionAntlrParser.PrimaryExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterPrimaryExp : AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterPrimaryExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+PrimaryExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>primaryExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterPrimaryExpression">
      <MemberSignature Language="C#" Value="public void EnterPrimaryExpression (AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterPrimaryExpression(class AdaptiveExpressions.parser.ExpressionAntlrParser/PrimaryExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterPrimaryExpression(AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterPrimaryExpression (context As ExpressionAntlrParser.PrimaryExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterPrimaryExpression : AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterPrimaryExpression context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+PrimaryExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStringAtom">
      <MemberSignature Language="C#" Value="public void EnterStringAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStringAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterStringAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterStringAtom (context As ExpressionAntlrParser.StringAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStringAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterStringAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>stringAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStringInterpolation">
      <MemberSignature Language="C#" Value="public void EnterStringInterpolation (AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStringInterpolation(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringInterpolationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterStringInterpolation(AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterStringInterpolation (context As ExpressionAntlrParser.StringInterpolationContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStringInterpolation : AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterStringInterpolation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringInterpolationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.stringInterpolation" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterStringInterpolationAtom">
      <MemberSignature Language="C#" Value="public void EnterStringInterpolationAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStringInterpolationAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringInterpolationAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterStringInterpolationAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterStringInterpolationAtom (context As ExpressionAntlrParser.StringInterpolationAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterStringInterpolationAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterStringInterpolationAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringInterpolationAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>stringInterpolationAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterTextContent">
      <MemberSignature Language="C#" Value="public void EnterTextContent (AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterTextContent(class AdaptiveExpressions.parser.ExpressionAntlrParser/TextContentContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterTextContent(AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterTextContent (context As ExpressionAntlrParser.TextContentContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterTextContent : AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterTextContent context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+TextContentContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.textContent" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterUnaryOpExp">
      <MemberSignature Language="C#" Value="public void EnterUnaryOpExp (AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterUnaryOpExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/UnaryOpExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.EnterUnaryOpExp(AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnterUnaryOpExp (context As ExpressionAntlrParser.UnaryOpExpContext)" />
      <MemberSignature Language="F#" Value="abstract member EnterUnaryOpExp : AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.EnterUnaryOpExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+UnaryOpExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Insira uma árvore de análise produzida pelo <c>unaryOpExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitArgsList">
      <MemberSignature Language="C#" Value="public void ExitArgsList (AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitArgsList(class AdaptiveExpressions.parser.ExpressionAntlrParser/ArgsListContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitArgsList(AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitArgsList (context As ExpressionAntlrParser.ArgsListContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitArgsList : AdaptiveExpressions.parser.ExpressionAntlrParser.ArgsListContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitArgsList context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ArgsListContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.argsList" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitArrayCreationExp">
      <MemberSignature Language="C#" Value="public void ExitArrayCreationExp (AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitArrayCreationExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/ArrayCreationExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitArrayCreationExp(AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitArrayCreationExp (context As ExpressionAntlrParser.ArrayCreationExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitArrayCreationExp : AdaptiveExpressions.parser.ExpressionAntlrParser.ArrayCreationExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitArrayCreationExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ArrayCreationExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>arrayCreationExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitBinaryOpExp">
      <MemberSignature Language="C#" Value="public void ExitBinaryOpExp (AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitBinaryOpExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/BinaryOpExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitBinaryOpExp(AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitBinaryOpExp (context As ExpressionAntlrParser.BinaryOpExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitBinaryOpExp : AdaptiveExpressions.parser.ExpressionAntlrParser.BinaryOpExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitBinaryOpExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+BinaryOpExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>binaryOpExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitExpression">
      <MemberSignature Language="C#" Value="public void ExitExpression (AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitExpression(class AdaptiveExpressions.parser.ExpressionAntlrParser/ExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitExpression(AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitExpression (context As ExpressionAntlrParser.ExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitExpression : AdaptiveExpressions.parser.ExpressionAntlrParser.ExpressionContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitExpression context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitFile">
      <MemberSignature Language="C#" Value="public void ExitFile (AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitFile(class AdaptiveExpressions.parser.ExpressionAntlrParser/FileContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitFile(AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitFile (context As ExpressionAntlrParser.FileContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitFile : AdaptiveExpressions.parser.ExpressionAntlrParser.FileContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitFile context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+FileContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.file" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitFuncInvokeExp">
      <MemberSignature Language="C#" Value="public void ExitFuncInvokeExp (AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitFuncInvokeExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/FuncInvokeExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitFuncInvokeExp(AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitFuncInvokeExp (context As ExpressionAntlrParser.FuncInvokeExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitFuncInvokeExp : AdaptiveExpressions.parser.ExpressionAntlrParser.FuncInvokeExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitFuncInvokeExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+FuncInvokeExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>funcInvokeExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIdAtom">
      <MemberSignature Language="C#" Value="public void ExitIdAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIdAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/IdAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitIdAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitIdAtom (context As ExpressionAntlrParser.IdAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIdAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.IdAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitIdAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+IdAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>idAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitIndexAccessExp">
      <MemberSignature Language="C#" Value="public void ExitIndexAccessExp (AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitIndexAccessExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/IndexAccessExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitIndexAccessExp(AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitIndexAccessExp (context As ExpressionAntlrParser.IndexAccessExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitIndexAccessExp : AdaptiveExpressions.parser.ExpressionAntlrParser.IndexAccessExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitIndexAccessExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+IndexAccessExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>indexAccessExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitJsonCreationExp">
      <MemberSignature Language="C#" Value="public void ExitJsonCreationExp (AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitJsonCreationExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/JsonCreationExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitJsonCreationExp(AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitJsonCreationExp (context As ExpressionAntlrParser.JsonCreationExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitJsonCreationExp : AdaptiveExpressions.parser.ExpressionAntlrParser.JsonCreationExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitJsonCreationExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+JsonCreationExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>jsonCreationExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKey">
      <MemberSignature Language="C#" Value="public void ExitKey (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKey(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitKey(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitKey (context As ExpressionAntlrParser.KeyContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKey : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitKey context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.key" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValuePair">
      <MemberSignature Language="C#" Value="public void ExitKeyValuePair (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValuePair(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyValuePairContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitKeyValuePair(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitKeyValuePair (context As ExpressionAntlrParser.KeyValuePairContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValuePair : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitKeyValuePair context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyValuePairContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.keyValuePair" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitKeyValuePairList">
      <MemberSignature Language="C#" Value="public void ExitKeyValuePairList (AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitKeyValuePairList(class AdaptiveExpressions.parser.ExpressionAntlrParser/KeyValuePairListContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitKeyValuePairList(AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitKeyValuePairList (context As ExpressionAntlrParser.KeyValuePairListContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitKeyValuePairList : AdaptiveExpressions.parser.ExpressionAntlrParser.KeyValuePairListContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitKeyValuePairList context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+KeyValuePairListContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.keyValuePairList" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitLambda">
      <MemberSignature Language="C#" Value="public void ExitLambda (AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitLambda(class AdaptiveExpressions.parser.ExpressionAntlrParser/LambdaContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitLambda(AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitLambda (context As ExpressionAntlrParser.LambdaContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitLambda : AdaptiveExpressions.parser.ExpressionAntlrParser.LambdaContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitLambda context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+LambdaContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.lambda" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitMemberAccessExp">
      <MemberSignature Language="C#" Value="public void ExitMemberAccessExp (AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitMemberAccessExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/MemberAccessExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitMemberAccessExp(AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitMemberAccessExp (context As ExpressionAntlrParser.MemberAccessExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitMemberAccessExp : AdaptiveExpressions.parser.ExpressionAntlrParser.MemberAccessExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitMemberAccessExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+MemberAccessExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>memberAccessExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitNumericAtom">
      <MemberSignature Language="C#" Value="public void ExitNumericAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitNumericAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/NumericAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitNumericAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitNumericAtom (context As ExpressionAntlrParser.NumericAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitNumericAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.NumericAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitNumericAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+NumericAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>numericAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitParenthesisExp">
      <MemberSignature Language="C#" Value="public void ExitParenthesisExp (AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitParenthesisExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/ParenthesisExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitParenthesisExp(AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitParenthesisExp (context As ExpressionAntlrParser.ParenthesisExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitParenthesisExp : AdaptiveExpressions.parser.ExpressionAntlrParser.ParenthesisExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitParenthesisExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+ParenthesisExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>parenthesisExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitPrimaryExp">
      <MemberSignature Language="C#" Value="public void ExitPrimaryExp (AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitPrimaryExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/PrimaryExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitPrimaryExp(AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitPrimaryExp (context As ExpressionAntlrParser.PrimaryExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitPrimaryExp : AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitPrimaryExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+PrimaryExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>primaryExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitPrimaryExpression">
      <MemberSignature Language="C#" Value="public void ExitPrimaryExpression (AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitPrimaryExpression(class AdaptiveExpressions.parser.ExpressionAntlrParser/PrimaryExpressionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitPrimaryExpression(AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitPrimaryExpression (context As ExpressionAntlrParser.PrimaryExpressionContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitPrimaryExpression : AdaptiveExpressions.parser.ExpressionAntlrParser.PrimaryExpressionContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitPrimaryExpression context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+PrimaryExpressionContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStringAtom">
      <MemberSignature Language="C#" Value="public void ExitStringAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStringAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitStringAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitStringAtom (context As ExpressionAntlrParser.StringAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStringAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.StringAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitStringAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>stringAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStringInterpolation">
      <MemberSignature Language="C#" Value="public void ExitStringInterpolation (AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStringInterpolation(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringInterpolationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitStringInterpolation(AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitStringInterpolation (context As ExpressionAntlrParser.StringInterpolationContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStringInterpolation : AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitStringInterpolation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringInterpolationContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.stringInterpolation" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitStringInterpolationAtom">
      <MemberSignature Language="C#" Value="public void ExitStringInterpolationAtom (AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStringInterpolationAtom(class AdaptiveExpressions.parser.ExpressionAntlrParser/StringInterpolationAtomContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitStringInterpolationAtom(AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitStringInterpolationAtom (context As ExpressionAntlrParser.StringInterpolationAtomContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitStringInterpolationAtom : AdaptiveExpressions.parser.ExpressionAntlrParser.StringInterpolationAtomContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitStringInterpolationAtom context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+StringInterpolationAtomContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>stringInterpolationAtom</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.primaryExpression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTextContent">
      <MemberSignature Language="C#" Value="public void ExitTextContent (AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitTextContent(class AdaptiveExpressions.parser.ExpressionAntlrParser/TextContentContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitTextContent(AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitTextContent (context As ExpressionAntlrParser.TextContentContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitTextContent : AdaptiveExpressions.parser.ExpressionAntlrParser.TextContentContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitTextContent context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+TextContentContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida por <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.textContent" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitUnaryOpExp">
      <MemberSignature Language="C#" Value="public void ExitUnaryOpExp (AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitUnaryOpExp(class AdaptiveExpressions.parser.ExpressionAntlrParser/UnaryOpExpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:AdaptiveExpressions.parser.IExpressionAntlrParserListener.ExitUnaryOpExp(AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitUnaryOpExp (context As ExpressionAntlrParser.UnaryOpExpContext)" />
      <MemberSignature Language="F#" Value="abstract member ExitUnaryOpExp : AdaptiveExpressions.parser.ExpressionAntlrParser.UnaryOpExpContext -&gt; unit" Usage="iExpressionAntlrParserListener.ExitUnaryOpExp context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>AdaptiveExpressions</AssemblyName>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="AdaptiveExpressions.parser.ExpressionAntlrParser+UnaryOpExpContext">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Antlr4.Runtime.Misc.NotNull]</AttributeName>
              <AttributeName Language="F#">[&lt;Antlr4.Runtime.Misc.NotNull&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">A árvore de análise.</param>
        <summary>Saia de uma árvore de análise produzida pelo <c>unaryOpExp</c> rotulado como alternativa em <see cref="M:AdaptiveExpressions.parser.ExpressionAntlrParser.expression" /> .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
