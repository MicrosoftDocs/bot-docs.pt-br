<Type Name="BotFrameworkHttpAdapter" FullName="Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d938fabe90cba647e7ec601fb296d42f4f9dd212" /><Meta Name="ms.sourcegitcommit" Value="d974a0b93f13db7720fcb332f37bf8a404d77e43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/20/2020" /><Meta Name="ms.locfileid" Value="93150260" /></Metadata><TypeSignature Language="C#" Value="public class BotFrameworkHttpAdapter : Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase, Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotFrameworkHttpAdapter extends Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase implements class Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class BotFrameworkHttpAdapter&#xA;Inherits BotFrameworkHttpAdapterBase&#xA;Implements IBotFrameworkHttpAdapter" />
  <TypeSignature Language="F#" Value="type BotFrameworkHttpAdapter = class&#xA;    inherit BotFrameworkHttpAdapterBase&#xA;    interface IBotFrameworkHttpAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Streaming.BotFrameworkHttpAdapterBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Uma implementação de adaptador Bot Builder usada para lidar com solicitações HTTP do bot Framework.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BotFrameworkHttpAdapter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (configuration As IConfiguration, Optional logger As ILogger(Of BotFrameworkHttpAdapter) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter (configuration, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt;" />
      </Parameters>
      <Docs>
        <param name="configuration">Uma instância <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapter (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider = default, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional credentialProvider As ICredentialProvider = Nothing, Optional channelProvider As IChannelProvider = Nothing, Optional logger As ILogger(Of BotFrameworkHttpAdapter) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter (credentialProvider, channelProvider, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt;" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" /> classe usando um provedor de credenciais.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapter (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, System.Net.Http.HttpClient httpClient, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class System.Net.Http.HttpClient httpClient, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, channelProvider As IChannelProvider, httpClient As HttpClient, logger As ILogger(Of BotFrameworkHttpAdapter))" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt; -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter (credentialProvider, channelProvider, httpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter&gt;" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="httpClient">O <see cref="T:System.Net.Http.HttpClient" /> usado.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" /> classe usando um provedor de credenciais.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotFrameworkHttpAdapter (Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Bot.Builder.IMiddleware middleware = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Bot.Builder.IMiddleware middleware, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.#ctor(Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Rest.TransientFaultHandling.RetryPolicy,System.Net.Http.HttpClient,Microsoft.Bot.Builder.IMiddleware,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credentialProvider As ICredentialProvider, authConfig As AuthenticationConfiguration, Optional channelProvider As IChannelProvider = Nothing, Optional connectorClientRetryPolicy As RetryPolicy = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional middleware As IMiddleware = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter : Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Rest.TransientFaultHandling.RetryPolicy * System.Net.Http.HttpClient * Microsoft.Bot.Builder.IMiddleware * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter (credentialProvider, authConfig, channelProvider, connectorClientRetryPolicy, customHttpClient, middleware, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="connectorClientRetryPolicy" Type="Microsoft.Rest.TransientFaultHandling.RetryPolicy" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="middleware" Type="Microsoft.Bot.Builder.IMiddleware" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="authConfig">A configuração de autenticação.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="connectorClientRetryPolicy">Política de repetição para repetir operações HTTP.</param>
        <param name="customHttpClient">O cliente HTTP.</param>
        <param name="middleware">O middleware a ser adicionado inicialmente ao adaptador.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" /> classe usando um provedor de credenciais.</summary>
        <remarks>Use um <see cref="T:Microsoft.Bot.Builder.MiddlewareSet" /> objeto para adicionar vários componentes de middleware no construtor. Use o método IMiddleware para adicionar middleware adicional ao adaptador após a construção.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="credentialProvider" /> é <c>nulo</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BotFrameworkHttpAdapter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig = default, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider = default, Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Bot.Builder.IMiddleware middleware = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentialProvider, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class Microsoft.Rest.TransientFaultHandling.RetryPolicy connectorClientRetryPolicy, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Bot.Builder.IMiddleware middleware, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration,Microsoft.Bot.Connector.Authentication.IChannelProvider,Microsoft.Rest.TransientFaultHandling.RetryPolicy,System.Net.Http.HttpClient,Microsoft.Bot.Builder.IMiddleware,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (configuration As IConfiguration, credentialProvider As ICredentialProvider, Optional authConfig As AuthenticationConfiguration = Nothing, Optional channelProvider As IChannelProvider = Nothing, Optional connectorClientRetryPolicy As RetryPolicy = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional middleware As IMiddleware = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration * Microsoft.Bot.Connector.Authentication.IChannelProvider * Microsoft.Rest.TransientFaultHandling.RetryPolicy * System.Net.Http.HttpClient * Microsoft.Bot.Builder.IMiddleware * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" Usage="new Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter (configuration, credentialProvider, authConfig, channelProvider, connectorClientRetryPolicy, customHttpClient, middleware, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="credentialProvider" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="connectorClientRetryPolicy" Type="Microsoft.Rest.TransientFaultHandling.RetryPolicy" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="middleware" Type="Microsoft.Bot.Builder.IMiddleware" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="configuration">Uma instância <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</param>
        <param name="credentialProvider">O provedor de credenciais.</param>
        <param name="authConfig">A configuração de autenticação.</param>
        <param name="channelProvider">O provedor de canal.</param>
        <param name="connectorClientRetryPolicy">Política de repetição para repetir operações HTTP.</param>
        <param name="customHttpClient">O cliente HTTP.</param>
        <param name="middleware">O middleware a ser adicionado inicialmente ao adaptador.</param>
        <param name="logger">A implementação de ILogger que esse adaptador deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ProcessAsync (Microsoft.AspNetCore.Http.HttpRequest httpRequest, Microsoft.AspNetCore.Http.HttpResponse httpResponse, Microsoft.Bot.Builder.IBot bot, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessAsync(class Microsoft.AspNetCore.Http.HttpRequest httpRequest, class Microsoft.AspNetCore.Http.HttpResponse httpResponse, class Microsoft.Bot.Builder.IBot bot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.ProcessAsync(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.HttpResponse,Microsoft.Bot.Builder.IBot,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessAsync (httpRequest As HttpRequest, httpResponse As HttpResponse, bot As IBot, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : Microsoft.AspNetCore.Http.HttpRequest * Microsoft.AspNetCore.Http.HttpResponse * Microsoft.Bot.Builder.IBot * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ProcessAsync : Microsoft.AspNetCore.Http.HttpRequest * Microsoft.AspNetCore.Http.HttpResponse * Microsoft.Bot.Builder.IBot * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botFrameworkHttpAdapter.ProcessAsync (httpRequest, httpResponse, bot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter.ProcessAsync(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.HttpResponse,Microsoft.Bot.Builder.IBot,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpRequest" Type="Microsoft.AspNetCore.Http.HttpRequest" />
        <Parameter Name="httpResponse" Type="Microsoft.AspNetCore.Http.HttpResponse" />
        <Parameter Name="bot" Type="Microsoft.Bot.Builder.IBot" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpRequest">O objeto de solicitação HTTP, normalmente em um manipulador POST por um controlador.</param>
        <param name="httpResponse">O objeto de resposta HTTP.</param>
        <param name="bot">A implementação do bot.</param>
        <param name="cancellationToken">Um token de cancelamento que pode ser usado por outros objetos ou threads para receber um aviso de cancelamento.</param>
        <summary>Esse método pode ser chamado de dentro de um método POST em qualquer implementação do controlador.</summary>
        <returns>Uma tarefa que representa o trabalho na fila a ser executado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
