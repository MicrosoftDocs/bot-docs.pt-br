<Type Name="IConversations" FullName="Microsoft.Bot.Connector.IConversations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30ab163b4ced13efc88c8e9d47f1d77f07f53ecb" /><Meta Name="ms.sourcegitcommit" Value="71e7c93a312c21f0559005656e7b237e5a74113c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/23/2020" /><Meta Name="ms.locfileid" Value="95461110" /></Metadata><TypeSignature Language="C#" Value="public interface IConversations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConversations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.IConversations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConversations" />
  <TypeSignature Language="F#" Value="type IConversations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>3.16.1.38846</AssemblyVersion>
    <AssemblyVersion>3.19.1.44133</AssemblyVersion>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
    <AssemblyVersion>3.30.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.7.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.2.0</AssemblyVersion>
    <AssemblyVersion>4.9.3.0</AssemblyVersion>
    <AssemblyVersion>4.10.0.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.11.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Operações de conversas.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateConversationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationResourceResponse&gt;&gt; CreateConversationWithHttpMessagesAsync (Microsoft.Bot.Connector.ConversationParameters parameters, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ConversationResourceResponse&gt;&gt; CreateConversationWithHttpMessagesAsync(class Microsoft.Bot.Connector.ConversationParameters parameters, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.CreateConversationWithHttpMessagesAsync(Microsoft.Bot.Connector.ConversationParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConversationWithHttpMessagesAsync (parameters As ConversationParameters, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ConversationResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateConversationWithHttpMessagesAsync : Microsoft.Bot.Connector.ConversationParameters * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationResourceResponse&gt;&gt;" Usage="iConversations.CreateConversationWithHttpMessagesAsync (parameters, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Bot.Connector.ConversationParameters" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConversationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;&gt; CreateConversationWithHttpMessagesAsync (Microsoft.Bot.Schema.ConversationParameters parameters, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ConversationResourceResponse&gt;&gt; CreateConversationWithHttpMessagesAsync(class Microsoft.Bot.Schema.ConversationParameters parameters, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.CreateConversationWithHttpMessagesAsync(Microsoft.Bot.Schema.ConversationParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConversationWithHttpMessagesAsync (parameters As ConversationParameters, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ConversationResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreateConversationWithHttpMessagesAsync : Microsoft.Bot.Schema.ConversationParameters * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;&gt;" Usage="iConversations.CreateConversationWithHttpMessagesAsync (parameters, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.Bot.Schema.ConversationParameters" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="parameters">Parâmetros dos quais criar a conversa</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>Createconversation</summary>
        <returns>To be added.</returns>
        <remarks>Crie uma nova conversa.
            
POSTE nesse método com um bot * sendo o bot criando a conversa * IsGroup definida como true se esta não for uma mensagem direta (o padrão é false) * matriz que contém os membros a serem incluídos na conversa 
O valor de retorno é um ResourceResponse que contém uma ID de conversa que é adequada para uso na carga da mensagem e nos URIs da API REST.
            
A maioria dos canais oferece suporte apenas à semântica de bots que iniciam uma conversa de mensagem direta.  Um exemplo de como fazer isso seria: 
' ' ' var Resource = Await Connector. Conversations. createconversation (New Conversation () {bot = bot, Members = New ChannelAccount [] {New ChannelAccount ("Usuário1")}); Await Connect. Conversations. SendToConversationAsync (recurso. ID, nova atividade ()...) ; 
             ```</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteActivityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteActivityWithHttpMessagesAsync (string conversationId, string activityId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteActivityWithHttpMessagesAsync(string conversationId, string activityId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.DeleteActivityWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteActivityWithHttpMessagesAsync (conversationId As String, activityId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteActivityWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iConversations.DeleteActivityWithHttpMessagesAsync (conversationId, activityId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="activityId">ActivityId a ser excluída</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>DeleteActivity</summary>
        <returns>To be added.</returns>
        <remarks>Excluir uma atividade existente.
            
Alguns canais permitem que você exclua uma atividade existente e, se for bem-sucedido, esse método removerá a atividade especificada.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteConversationMemberWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt; DeleteConversationMemberWithHttpMessagesAsync (string conversationId, string memberId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse&gt; DeleteConversationMemberWithHttpMessagesAsync(string conversationId, string memberId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.DeleteConversationMemberWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteConversationMemberWithHttpMessagesAsync (conversationId As String, memberId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteConversationMemberWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;" Usage="iConversations.DeleteConversationMemberWithHttpMessagesAsync (conversationId, memberId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="memberId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="memberId">ID do membro a ser excluído desta conversa</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>DeleteConversationMember</summary>
        <returns>To be added.</returns>
        <remarks>Exclui um membro de uma conversa.
            
Essa API REST usa uma Conversaid e um MemberId (do tipo cadeia de caracteres) e remove esse membro da conversa. Se esse membro for o último da conversa, a conversa também será excluída.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="GetActivityMembersWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt; GetActivityMembersWithHttpMessagesAsync (string conversationId, string activityId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt; GetActivityMembersWithHttpMessagesAsync(string conversationId, string activityId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.GetActivityMembersWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActivityMembersWithHttpMessagesAsync (conversationId As String, activityId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of IList(Of ChannelAccount)))" />
      <MemberSignature Language="F#" Value="abstract member GetActivityMembersWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt;" Usage="iConversations.GetActivityMembersWithHttpMessagesAsync (conversationId, activityId, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt; GetActivityMembersWithHttpMessagesAsync (string conversationId, string activityId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt; GetActivityMembersWithHttpMessagesAsync(string conversationId, string activityId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="F#" Value="abstract member GetActivityMembersWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt;" Usage="iConversations.GetActivityMembersWithHttpMessagesAsync (conversationId, activityId, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-3.0">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-stable">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activityId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="activityId">ID da atividade</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>GetActivityMembers</summary>
        <returns>To be added.</returns>
        <remarks>Enumere os membros de uma atividade.
            
Essa API REST usa uma Conversaid e uma ActivityId, retornando uma matriz de objetos ChannelAccount representando os membros da atividade específica na conversa.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConversationMembersWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt; GetConversationMembersWithHttpMessagesAsync (string conversationId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt; GetConversationMembersWithHttpMessagesAsync(string conversationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.GetConversationMembersWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConversationMembersWithHttpMessagesAsync (conversationId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of IList(Of ChannelAccount)))" />
      <MemberSignature Language="F#" Value="abstract member GetConversationMembersWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt;" Usage="iConversations.GetConversationMembersWithHttpMessagesAsync (conversationId, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt; GetConversationMembersWithHttpMessagesAsync (string conversationId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt; GetConversationMembersWithHttpMessagesAsync(string conversationId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="F#" Value="abstract member GetConversationMembersWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt;" Usage="iConversations.GetConversationMembersWithHttpMessagesAsync (conversationId, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-3.0">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Connector.ChannelAccount&gt;&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-stable">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>GetConversationMembers</summary>
        <returns>To be added.</returns>
        <remarks>Enumere os membros de uma conversa.
            
Essa API REST usa uma Conversaid e retorna uma matriz de objetos ChannelAccount que representam os membros da conversa.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConversationPagedMembersWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.PagedMembersResult&gt;&gt; GetConversationPagedMembersWithHttpMessagesAsync (string conversationId, int? pageSize = default, string continuationToken = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.PagedMembersResult&gt;&gt; GetConversationPagedMembersWithHttpMessagesAsync(string conversationId, valuetype System.Nullable`1&lt;int32&gt; pageSize, string continuationToken, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.GetConversationPagedMembersWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConversationPagedMembersWithHttpMessagesAsync (conversationId As String, Optional pageSize As Nullable(Of Integer) = Nothing, Optional continuationToken As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of PagedMembersResult))" />
      <MemberSignature Language="F#" Value="abstract member GetConversationPagedMembersWithHttpMessagesAsync : string * Nullable&lt;int&gt; * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.PagedMembersResult&gt;&gt;" Usage="iConversations.GetConversationPagedMembersWithHttpMessagesAsync (conversationId, pageSize, continuationToken, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;&gt; GetConversationPagedMembersWithHttpMessagesAsync (string conversationId, int? pageSize = default, string continuationToken = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.PagedMembersResult&gt;&gt; GetConversationPagedMembersWithHttpMessagesAsync(string conversationId, valuetype System.Nullable`1&lt;int32&gt; pageSize, string continuationToken, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="F#" Value="abstract member GetConversationPagedMembersWithHttpMessagesAsync : string * Nullable&lt;int&gt; * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;&gt;" Usage="iConversations.GetConversationPagedMembersWithHttpMessagesAsync (conversationId, pageSize, continuationToken, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-3.0">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.PagedMembersResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-stable">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.PagedMembersResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="pageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="pageSize">Tamanho de página sugerido</param>
        <param name="continuationToken">Token de continuação</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>GetConversationPagedMembers</summary>
        <returns>To be added.</returns>
        <remarks>Enumere os membros de uma conversa de uma página por vez.
            
Essa API REST usa uma Conversaid. Opcionalmente, um pageSize e/ou continuationToken podem ser fornecidos. Ele retorna um PagedMembersResult, que contém uma matriz de ChannelAccounts que representa os membros da conversa e um token de continuação que pode ser usado para obter mais valores.
            
Uma página de registros ChannelAccounts é retornada com cada chamada.
O número de registros em uma página pode variar entre canais e chamadas. O parâmetro pageSize pode ser usado como uma sugestão. Se não houver nenhum resultado adicional, a resposta não conterá um token de continuação. Se não houver Membros na conversa, os membros ficarão vazios ou não estarão presentes na resposta.
            
Uma resposta a uma solicitação que tem um token de continuação de uma solicitação anterior pode raramente retornar membros de uma solicitação anterior.</remarks>
        <exception cref="T:Microsoft.Rest.HttpOperationException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConversationsWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationsResult&gt;&gt; GetConversationsWithHttpMessagesAsync (string continuationToken = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ConversationsResult&gt;&gt; GetConversationsWithHttpMessagesAsync(string continuationToken, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.GetConversationsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConversationsWithHttpMessagesAsync (Optional continuationToken As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ConversationsResult))" />
      <MemberSignature Language="F#" Value="abstract member GetConversationsWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationsResult&gt;&gt;" Usage="iConversations.GetConversationsWithHttpMessagesAsync (continuationToken, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-3.0" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationsResult&gt;&gt; GetConversationsWithHttpMessagesAsync (string continuationToken = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ConversationsResult&gt;&gt; GetConversationsWithHttpMessagesAsync(string continuationToken, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberSignature Language="F#" Value="abstract member GetConversationsWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationsResult&gt;&gt;" Usage="iConversations.GetConversationsWithHttpMessagesAsync (continuationToken, customHeaders, cancellationToken)" FrameworkAlternate="botbuilder-dotnet-stable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-3.0">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ConversationsResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="botbuilder-dotnet-stable">System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ConversationsResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationToken">token de ignorar ou de continuação</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>Getconversations</summary>
        <returns>To be added.</returns>
        <remarks>Listar as conversas nas quais este bot participou.
            
OBTER deste método com um token de salto 
O valor de retorno é um ConversationsResult, que contém uma matriz de ConversationMembers e um token Skip.  Se o token de salto não estiver vazio, haverá valores adicionais a serem retornados. Chame esse método novamente com o token retornado para obter mais valores.
            
Cada objeto ConversationMembers contém a ID da conversa e uma matriz de ChannelAccounts que descrevem os membros da conversa.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplyToActivityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt; ReplyToActivityWithHttpMessagesAsync (string conversationId, string activityId, Microsoft.Bot.Connector.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ResourceResponse&gt;&gt; ReplyToActivityWithHttpMessagesAsync(string conversationId, string activityId, class Microsoft.Bot.Connector.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.ReplyToActivityWithHttpMessagesAsync(System.String,System.String,Microsoft.Bot.Connector.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplyToActivityWithHttpMessagesAsync (conversationId As String, activityId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member ReplyToActivityWithHttpMessagesAsync : string * string * Microsoft.Bot.Connector.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;" Usage="iConversations.ReplyToActivityWithHttpMessagesAsync (conversationId, activityId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="activityId" Type="System.String" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.Activity" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="3" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="conversationId">To be added.</param>
        <param name="activityId">To be added.</param>
        <param name="activity">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToActivityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt; ReplyToActivityWithHttpMessagesAsync (string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt;&gt; ReplyToActivityWithHttpMessagesAsync(string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.ReplyToActivityWithHttpMessagesAsync(System.String,System.String,Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplyToActivityWithHttpMessagesAsync (conversationId As String, activityId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member ReplyToActivityWithHttpMessagesAsync : string * string * Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;" Usage="iConversations.ReplyToActivityWithHttpMessagesAsync (conversationId, activityId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="activityId" Type="System.String" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="3" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="activityId">ActivityId a resposta é (opcional)</param>
        <param name="activity">Atividade a ser enviada</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>ReplyToActivity</summary>
        <returns>To be added.</returns>
        <remarks>Esse método permite que você responda a uma atividade.
            
Isso é um pouco diferente de SendToConversation ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="SendConversationHistoryWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt; SendConversationHistoryWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Connector.Transcript history, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ResourceResponse&gt;&gt; SendConversationHistoryWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Connector.Transcript history, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.SendConversationHistoryWithHttpMessagesAsync(System.String,Microsoft.Bot.Connector.Transcript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendConversationHistoryWithHttpMessagesAsync (conversationId As String, history As Transcript, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member SendConversationHistoryWithHttpMessagesAsync : string * Microsoft.Bot.Connector.Transcript * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;" Usage="iConversations.SendConversationHistoryWithHttpMessagesAsync (conversationId, history, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="history" Type="Microsoft.Bot.Connector.Transcript" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="conversationId">To be added.</param>
        <param name="history">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendConversationHistoryWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt; SendConversationHistoryWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Schema.Transcript transcript, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt;&gt; SendConversationHistoryWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Schema.Transcript transcript, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.SendConversationHistoryWithHttpMessagesAsync(System.String,Microsoft.Bot.Schema.Transcript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendConversationHistoryWithHttpMessagesAsync (conversationId As String, transcript As Transcript, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member SendConversationHistoryWithHttpMessagesAsync : string * Microsoft.Bot.Schema.Transcript * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;" Usage="iConversations.SendConversationHistoryWithHttpMessagesAsync (conversationId, transcript, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="transcript" Type="Microsoft.Bot.Schema.Transcript" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="transcript">Transcrição de atividades</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>SendConversationHistory</summary>
        <returns>To be added.</returns>
        <remarks>Esse método permite que você carregue as atividades históricas para a conversa.
            
O remetente deve garantir que as atividades históricas tenham IDs exclusivas e carimbos de data/hora apropriados. As IDs são usadas pelo cliente para lidar com atividades duplicadas e os carimbos de data/hora são usados pelo cliente para renderizar as atividades na ordem correta.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="SendToConversationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt; SendToConversationWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Connector.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ResourceResponse&gt;&gt; SendToConversationWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Connector.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.SendToConversationWithHttpMessagesAsync(System.String,Microsoft.Bot.Connector.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToConversationWithHttpMessagesAsync (conversationId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member SendToConversationWithHttpMessagesAsync : string * Microsoft.Bot.Connector.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;" Usage="iConversations.SendToConversationWithHttpMessagesAsync (conversationId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.Activity" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="conversationId">To be added.</param>
        <param name="activity">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendToConversationWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt; SendToConversationWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt;&gt; SendToConversationWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.SendToConversationWithHttpMessagesAsync(System.String,Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToConversationWithHttpMessagesAsync (conversationId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member SendToConversationWithHttpMessagesAsync : string * Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;" Usage="iConversations.SendToConversationWithHttpMessagesAsync (conversationId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="activity">Atividade a ser enviada</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>SendToConversation</summary>
        <returns>To be added.</returns>
        <remarks>Esse método permite que você envie uma atividade ao final de uma conversa.
            
Isso é um pouco diferente de ReplyToActivity ().
* SendToConversation (conversaid) – acrescentará a atividade ao final da conversa de acordo com o carimbo de data/hora ou a semântica do canal.
* ReplyToActivity (conversaid, ActivityId) – adiciona a atividade como uma resposta a outra atividade, se o canal der suporte a ela. Se o canal não oferecer suporte a respostas aninhadas, ReplyToActivity retornará ao SendToConversation.
            
Use ReplyToActivity ao responder a uma atividade específica na conversa.
            
Use SendToConversation em todos os outros casos.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateActivityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt; UpdateActivityWithHttpMessagesAsync (string conversationId, string activityId, Microsoft.Bot.Connector.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ResourceResponse&gt;&gt; UpdateActivityWithHttpMessagesAsync(string conversationId, string activityId, class Microsoft.Bot.Connector.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.UpdateActivityWithHttpMessagesAsync(System.String,System.String,Microsoft.Bot.Connector.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateActivityWithHttpMessagesAsync (conversationId As String, activityId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateActivityWithHttpMessagesAsync : string * string * Microsoft.Bot.Connector.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;" Usage="iConversations.UpdateActivityWithHttpMessagesAsync (conversationId, activityId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="activityId" Type="System.String" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="activity" Type="Microsoft.Bot.Connector.Activity" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="3" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="conversationId">To be added.</param>
        <param name="activityId">To be added.</param>
        <param name="activity">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateActivityWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt; UpdateActivityWithHttpMessagesAsync (string conversationId, string activityId, Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt;&gt; UpdateActivityWithHttpMessagesAsync(string conversationId, string activityId, class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.UpdateActivityWithHttpMessagesAsync(System.String,System.String,Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateActivityWithHttpMessagesAsync (conversationId As String, activityId As String, activity As Activity, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member UpdateActivityWithHttpMessagesAsync : string * string * Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;" Usage="iConversations.UpdateActivityWithHttpMessagesAsync (conversationId, activityId, activity, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="activityId" Type="System.String" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="3" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="4" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="activityId">ActivityId para atualizar</param>
        <param name="activity">Atividade de substituição</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>UpdateActivity</summary>
        <returns>To be added.</returns>
        <remarks>Editar uma atividade existente.
            
Alguns canais permitem editar uma atividade existente para refletir o novo estado de uma conversa de bot.
            
Por exemplo, você pode remover botões depois que alguém clicar no botão "aprovar".</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadAttachmentWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt; UploadAttachmentWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Connector.AttachmentData attachmentUpload, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Connector.ResourceResponse&gt;&gt; UploadAttachmentWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Connector.AttachmentData attachmentUpload, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.UploadAttachmentWithHttpMessagesAsync(System.String,Microsoft.Bot.Connector.AttachmentData,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadAttachmentWithHttpMessagesAsync (conversationId As String, attachmentUpload As AttachmentData, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member UploadAttachmentWithHttpMessagesAsync : string * Microsoft.Bot.Connector.AttachmentData * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;" Usage="iConversations.UploadAttachmentWithHttpMessagesAsync (conversationId, attachmentUpload, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Connector.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="attachmentUpload" Type="Microsoft.Bot.Connector.AttachmentData" Index="1" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-3.0" />
      </Parameters>
      <Docs>
        <param name="conversationId">To be added.</param>
        <param name="attachmentUpload">To be added.</param>
        <param name="customHeaders">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAttachmentWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt; UploadAttachmentWithHttpMessagesAsync (string conversationId, Microsoft.Bot.Schema.AttachmentData attachmentUpload, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.ResourceResponse&gt;&gt; UploadAttachmentWithHttpMessagesAsync(string conversationId, class Microsoft.Bot.Schema.AttachmentData attachmentUpload, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.IConversations.UploadAttachmentWithHttpMessagesAsync(System.String,Microsoft.Bot.Schema.AttachmentData,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadAttachmentWithHttpMessagesAsync (conversationId As String, attachmentUpload As AttachmentData, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of ResourceResponse))" />
      <MemberSignature Language="F#" Value="abstract member UploadAttachmentWithHttpMessagesAsync : string * Microsoft.Bot.Schema.AttachmentData * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;" Usage="iConversations.UploadAttachmentWithHttpMessagesAsync (conversationId, attachmentUpload, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.2.0</AssemblyVersion>
        <AssemblyVersion>4.9.3.0</AssemblyVersion>
        <AssemblyVersion>4.10.0.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.11.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.ResourceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationId" Type="System.String" Index="0" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="attachmentUpload" Type="Microsoft.Bot.Schema.AttachmentData" Index="1" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" Index="2" FrameworkAlternate="botbuilder-dotnet-stable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="botbuilder-dotnet-stable" />
      </Parameters>
      <Docs>
        <param name="conversationId">Identificação da conversa</param>
        <param name="attachmentUpload">Dados de anexo</param>
        <param name="customHeaders">Os cabeçalhos que serão adicionados à solicitação.</param>
        <param name="cancellationToken">O token de cancelamento.</param>
        <summary>UploadAttachment</summary>
        <returns>To be added.</returns>
        <remarks>Carregue um anexo diretamente no armazenamento de blobs de um canal.
            
Isso é útil porque permite que você armazene dados em um repositório em conformidade ao lidar com empresas.
            
A resposta é um ResourceResponse que contém um attachmentid que é adequado para usar com a API de anexos.</remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">Gerado quando a operação retornou um código de status inválido</exception>
        <exception cref="T:Microsoft.Rest.SerializationException">Gerado quando não é possível desserializar a resposta</exception>
        <exception cref="T:Microsoft.Rest.ValidationException">Gerado quando um parâmetro obrigatório é nulo</exception>
      </Docs>
    </Member>
  </Members>
</Type>
