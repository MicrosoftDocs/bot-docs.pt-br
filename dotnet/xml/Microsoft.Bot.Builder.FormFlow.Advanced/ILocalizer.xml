<Type Name="ILocalizer" FullName="Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="566b0b9c7c99898901ee09e7bf18d86bfd15863c" /><Meta Name="ms.sourcegitcommit" Value="5add21ad3daf0ce894612a22b951b98350961720" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="06/04/2020" /><Meta Name="ms.locfileid" Value="93149348" /></Metadata><TypeSignature Language="C#" Value="public interface ILocalizer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILocalizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILocalizer" />
  <TypeSignature Language="F#" Value="type ILocalizer = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.16.1.38846</AssemblyVersion>
    <AssemblyVersion>3.19.1.44133</AssemblyVersion>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
    <AssemblyVersion>3.30.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Interface para localizar recursos de cadeia de caracteres.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string prefix, Microsoft.Bot.Builder.FormFlow.TemplateAttribute template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string prefix, class Microsoft.Bot.Builder.FormFlow.TemplateAttribute template) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,Microsoft.Bot.Builder.FormFlow.TemplateAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (prefix As String, template As TemplateAttribute)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * Microsoft.Bot.Builder.FormFlow.TemplateAttribute -&gt; unit" Usage="iLocalizer.Add (prefix, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="template" Type="Microsoft.Bot.Builder.FormFlow.TemplateAttribute" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo do recurso.</param>
        <param name="template">O modelo a ser adicionado.</param>
        <summary>Adiciona padrões de modelo separados por ponto e vírgula em prefixo; uso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Collections.Generic.IEnumerable&lt;string&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, class System.Collections.Generic.IEnumerable`1&lt;string&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, list As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="abstract member Add : string * seq&lt;string&gt; -&gt; unit" Usage="iLocalizer.Add (key, list)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="key">Chave para indexação da lista de tradução.</param>
        <param name="list">Lista de termos traduzidos.</param>
        <summary>Adicione uma chave e uma lista de traduções separadas por ponto e vírgula.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string prefix, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; templates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string prefix, class System.Collections.Generic.IReadOnlyDictionary`2&lt;valuetype Microsoft.Bot.Builder.FormFlow.TemplateUsage, class Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; templates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (prefix As String, templates As IReadOnlyDictionary(Of TemplateUsage, TemplateAttribute))" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage, Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; -&gt; unit" Usage="iLocalizer.Add (prefix, templates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="templates" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo do recurso.</param>
        <param name="templates">O dicionário do modelo a ser adicionado.</param>
        <summary>Adiciona padrões de modelo separados por ponto e vírgula em prefixo; uso.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string prefix, System.Collections.Generic.IReadOnlyDictionary&lt;object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string prefix, class System.Collections.Generic.IReadOnlyDictionary`2&lt;object, class Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,System.Collections.Generic.IReadOnlyDictionary{System.Object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (prefix As String, dictionary As IReadOnlyDictionary(Of Object, DescribeAttribute))" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Collections.Generic.IReadOnlyDictionary&lt;obj, Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; -&gt; unit" Usage="iLocalizer.Add (prefix, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.Object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo do recurso.</param>
        <param name="dictionary">O dicionário a ser adicionado.</param>
        <summary>Adiciona o valor do dicionário em objeto, se a enumeração e o prefixo; objeto caso contrário.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string prefix, System.Collections.Generic.IReadOnlyDictionary&lt;object,Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string prefix, class System.Collections.Generic.IReadOnlyDictionary`2&lt;object, class Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,System.Collections.Generic.IReadOnlyDictionary{System.Object,Microsoft.Bot.Builder.FormFlow.TermsAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (prefix As String, dictionary As IReadOnlyDictionary(Of Object, TermsAttribute))" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Collections.Generic.IReadOnlyDictionary&lt;obj, Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; -&gt; unit" Usage="iLocalizer.Add (prefix, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.Object,Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo do recurso.</param>
        <param name="dictionary">O dicionário a ser adicionado.</param>
        <summary>Adiciona valores do dicionário separados por ponto e vírgula em Object se a enumeração e o prefixo; caso contrário, Object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string translation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, string translation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, translation As String)" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; unit" Usage="iLocalizer.Add (key, translation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="translation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Chave para indexação de tradução.</param>
        <param name="translation">Tradução para a chave.</param>
        <summary>Adicione uma chave e sua tradução.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retornar a cultura do localizador.</summary>
        <value>Cultura atual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer Load (System.Collections.IDictionaryEnumerator reader, out System.Collections.Generic.IEnumerable&lt;string&gt; missing, out System.Collections.Generic.IEnumerable&lt;string&gt; extra);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer Load(class System.Collections.IDictionaryEnumerator reader, [out] class System.Collections.Generic.IEnumerable`1&lt;string&gt;&amp; missing, [out] class System.Collections.Generic.IEnumerable`1&lt;string&gt;&amp; extra) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Load(System.Collections.IDictionaryEnumerator,System.Collections.Generic.IEnumerable{System.String}@,System.Collections.Generic.IEnumerable{System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (reader As IDictionaryEnumerator, ByRef missing As IEnumerable(Of String), ByRef extra As IEnumerable(Of String)) As ILocalizer" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Collections.IDictionaryEnumerator * seq * seq -&gt; Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer" Usage="iLocalizer.Load (reader, missing, extra)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Collections.IDictionaryEnumerator" />
        <Parameter Name="missing" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" RefType="out" />
        <Parameter Name="extra" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">Dicionário com recursos.</param>
        <param name="missing">Chaves encontradas no localizador atual que não estão no localizador carregado.</param>
        <param name="extra">Chaves encontradas no localizador carregado que não estavam no localizador atual.</param>
        <summary>Carregue o localizador de um fluxo.</summary>
        <returns>Novo localizador do leitor.</returns>
        <remarks><see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Save(System.Resources.IResourceWriter)" /> para ver o formato de recurso.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public bool Lookup (string key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Lookup(string key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Lookup(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lookup (key As String, ByRef value As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Lookup : string * string -&gt; bool" Usage="iLocalizer.Lookup (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Chave para pesquisa.</param>
        <param name="value">Valor a ser definido, se presente.</param>
        <summary>Traduza uma chave para uma tradução.</summary>
        <returns>True se o valor for encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDictionary">
      <MemberSignature Language="C#" Value="public void LookupDictionary (string prefix, System.Collections.Generic.IDictionary&lt;object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupDictionary(string prefix, class System.Collections.Generic.IDictionary`2&lt;object, class Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.LookupDictionary(System.String,System.Collections.Generic.IDictionary{System.Object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LookupDictionary (prefix As String, dictionary As IDictionary(Of Object, DescribeAttribute))" />
      <MemberSignature Language="F#" Value="abstract member LookupDictionary : string * System.Collections.Generic.IDictionary&lt;obj, Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt; -&gt; unit" Usage="iLocalizer.LookupDictionary (prefix, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.Object,Microsoft.Bot.Builder.FormFlow.DescribeAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo.</param>
        <param name="dictionary">Dicionário com valores existentes.</param>
        <summary>Pesquisar prefixo; objeto do dicionário e substituir valor do localizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDictionary">
      <MemberSignature Language="C#" Value="public void LookupDictionary (string prefix, System.Collections.Generic.IDictionary&lt;object,Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupDictionary(string prefix, class System.Collections.Generic.IDictionary`2&lt;object, class Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.LookupDictionary(System.String,System.Collections.Generic.IDictionary{System.Object,Microsoft.Bot.Builder.FormFlow.TermsAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LookupDictionary (prefix As String, dictionary As IDictionary(Of Object, TermsAttribute))" />
      <MemberSignature Language="F#" Value="abstract member LookupDictionary : string * System.Collections.Generic.IDictionary&lt;obj, Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt; -&gt; unit" Usage="iLocalizer.LookupDictionary (prefix, dictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.Object,Microsoft.Bot.Builder.FormFlow.TermsAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo.</param>
        <param name="dictionary">Dicionário com valores existentes.</param>
        <summary>Pesquisar prefixo; objeto do dicionário e substituir valores do localizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTemplates">
      <MemberSignature Language="C#" Value="public void LookupTemplates (string prefix, System.Collections.Generic.IDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; templates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupTemplates(string prefix, class System.Collections.Generic.IDictionary`2&lt;valuetype Microsoft.Bot.Builder.FormFlow.TemplateUsage, class Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; templates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.LookupTemplates(System.String,System.Collections.Generic.IDictionary{Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LookupTemplates (prefix As String, templates As IDictionary(Of TemplateUsage, TemplateAttribute))" />
      <MemberSignature Language="F#" Value="abstract member LookupTemplates : string * System.Collections.Generic.IDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage, Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt; -&gt; unit" Usage="iLocalizer.LookupTemplates (prefix, templates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="templates" Type="System.Collections.Generic.IDictionary&lt;Microsoft.Bot.Builder.FormFlow.TemplateUsage,Microsoft.Bot.Builder.FormFlow.TemplateAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="prefix">O prefixo.</param>
        <param name="templates">Dicionário de modelo com valores existentes.</param>
        <summary>Pesquisa o prefixo; uso e substitui padrões no modelo do localizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValues">
      <MemberSignature Language="C#" Value="public bool LookupValues (string key, out string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LookupValues(string key, [out] string[]&amp; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.LookupValues(System.String,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function LookupValues (key As String, ByRef values As String()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member LookupValues : string * String[] -&gt; bool" Usage="iLocalizer.LookupValues (key, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="values" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Chave para pesquisa.</param>
        <param name="values">Valor da matriz a ser definido, se presente.</param>
        <summary>Traduza uma chave para uma matriz de valores.</summary>
        <returns>True se o valor for encontrado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit" Usage="iLocalizer.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Chave a ser removida.</param>
        <summary>Remova uma chave do localizador.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Resources.IResourceWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Resources.IResourceWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.ILocalizer.Save(System.Resources.IResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As IResourceWriter)" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Resources.IResourceWriter -&gt; unit" Usage="iLocalizer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Resources.IResourceWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Onde escrever recursos.</param>
        <summary>Salve os recursos do localizador no fluxo.</summary>
        <remarks>Os valores de recurso são todas as cadeias de caracteres.  A chave e o valor podem ter partes diferentes separadas por ponto e vírgula.
Chave | Valor | Descrição----|-------|------------chave; VALOR | Cadeia de caracteres | Valor simples.
chaves LISTA | String [; String] * | Lista de valores.
uso; campo [; campo] *; MODELO | padrão [;p attern]* | Lista de padrões de modelo.  A chave inclui campos que usam modelo.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
