<Type Name="Language" FullName="Microsoft.Bot.Builder.FormFlow.Advanced.Language">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27ff80e1beddc54209d80758df44c47155a4f4b9" /><Meta Name="ms.sourcegitcommit" Value="ac3a7ee8979fc942f9d7420b2f6845c726b6661a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="09/02/2020" /><Meta Name="ms.locfileid" Value="93149561" /></Metadata><TypeSignature Language="C#" Value="public class Language" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Language extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.FormFlow.Advanced.Language" />
  <TypeSignature Language="VB.NET" Value="Public Class Language" />
  <TypeSignature Language="F#" Value="type Language = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.16.1.38846</AssemblyVersion>
    <AssemblyVersion>3.19.1.44133</AssemblyVersion>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
    <AssemblyVersion>3.30.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Utilitários relacionados à linguagem.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Language ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ANormalization">
      <MemberSignature Language="C#" Value="public static string ANormalization (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ANormalization(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.ANormalization(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ANormalization (input As String) As String" />
      <MemberSignature Language="F#" Value="static member ANormalization : string -&gt; string" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.ANormalization input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Cadeia de caracteres a ser corrigida.</param>
        <summary>Alterne ' a ' antes de consoantes e ' an ' antes de vogais.</summary>
        <returns>Cadeia de caracteres com ' a ' e ' an ' normalizado.</returns>
        <remarks>Isso não é perfeito porque o inglês é complexo, mas faz um trabalho razoável.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArticleOrNone">
      <MemberSignature Language="C#" Value="public static bool ArticleOrNone (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ArticleOrNone(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.ArticleOrNone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArticleOrNone (word As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member ArticleOrNone : string -&gt; bool" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.ArticleOrNone word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palavra a ser testada.</param>
        <summary>Teste uma palavra para artigos ou ruído.</summary>
        <returns>True se o Word estiver <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonWord(System.String)" /> ou um artigo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildList">
      <MemberSignature Language="C#" Value="public static string BuildList (System.Collections.Generic.IEnumerable&lt;string&gt; values, string separator, string lastSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BuildList(class System.Collections.Generic.IEnumerable`1&lt;string&gt; values, string separator, string lastSeparator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.BuildList(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BuildList (values As IEnumerable(Of String), separator As String, lastSeparator As String) As String" />
      <MemberSignature Language="F#" Value="static member BuildList : seq&lt;string&gt; * string * string -&gt; string" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.BuildList (values, separator, lastSeparator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="lastSeparator" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="values">Valor na lista.</param>
        <param name="separator">Separador entre todos os elementos, exceto por último.</param>
        <param name="lastSeparator">Último separador de elemento.</param>
        <summary>Dada uma lista de valores de cadeia de caracteres que geram uma lista em inglês adequada.</summary>
        <returns>Valor em uma lista em inglês adequada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CamelCase">
      <MemberSignature Language="C#" Value="public static string CamelCase (string original);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CamelCase(string original) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.CamelCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CamelCase (original As String) As String" />
      <MemberSignature Language="F#" Value="static member CamelCase : string -&gt; string" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.CamelCase original" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="original">Cadeia de caracteres original.</param>
        <summary>Quebre uma cadeia de caracteres em palavras baseadas em alterações de maiúsculas e minúsculas.</summary>
        <returns>Cadeia de caracteres com palavras nos limites de alteração de caso ou _.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTerms">
      <MemberSignature Language="C#" Value="public static string[] GenerateTerms (string phrase, int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GenerateTerms(string phrase, int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateTerms (phrase As String, maxLength As Integer) As String()" />
      <MemberSignature Language="F#" Value="static member GenerateTerms : string * int -&gt; string[]" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.GenerateTerms (phrase, maxLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">Cadeia de caracteres original a ser processada.</param>
        <param name="maxLength">Comprimento máximo da frase para dar suporte.</param>
        <summary>Gerar expressões regulares para corresponder a sequências de palavras na cadeia de caracteres original.</summary>
        <returns>Matriz de expressões regulares para corresponder subsequências na entrada.</returns>
        <remarks>Essa função chamará <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.CamelCase(System.String)" /> e, em seguida, irá gerar subcoleções até MaxLength.  
            Por exemplo, uma enumeração de AngusBeefAndGarlicPizza geraria: ' Angus? ', ' reforces? ', ' garlics? ', ' pizzas? ', ' Angus? aprimoramentos? ', ' garlics? pizzas? e ' Angus Force e garlic pizza '.
Você pode chamá-lo diretamente ou ele é usado quando <see cref="T:Microsoft.Bot.Builder.FormFlow.Advanced.FieldReflector`1" /> o gera termos ou quando <see cref="T:Microsoft.Bot.Builder.FormFlow.TermsAttribute" /> é usado com um <see cref="P:Microsoft.Bot.Builder.FormFlow.TermsAttribute.MaxPhrase" /> argumento.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoiseResponse">
      <MemberSignature Language="C#" Value="public static bool NoiseResponse (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool NoiseResponse(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NoiseResponse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoiseResponse (word As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member NoiseResponse : string -&gt; bool" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.NoiseResponse word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palavra a ser testada.</param>
        <summary>Teste para ver se uma palavra pode ser ignorada em um resposne.</summary>
        <returns>True se o Word for uma <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonWord(System.String)" /> ou palavras irrelevantes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoiseWord">
      <MemberSignature Language="C#" Value="public static bool NoiseWord (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool NoiseWord(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NoiseWord(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoiseWord (word As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member NoiseWord : string -&gt; bool" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.NoiseWord word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palavra a ser testada.</param>
        <summary>Teste para ver se uma palavra está com ruído.</summary>
        <returns>True se o Word for um número, uma <see cref="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonWord(System.String)" /> ou uma palavra parada. " /&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNoiseWords">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; NonNoiseWords (System.Collections.Generic.IEnumerable&lt;string&gt; words);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; NonNoiseWords(class System.Collections.Generic.IEnumerable`1&lt;string&gt; words) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonNoiseWords(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonNoiseWords (words As IEnumerable(Of String)) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="static member NonNoiseWords : seq&lt;string&gt; -&gt; seq&lt;string&gt;" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonNoiseWords words" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="words" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="words" />
        <summary>Teste as palavras para ver se elas são todas ignoradas em uma resposta.</summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonWord">
      <MemberSignature Language="C#" Value="public static bool NonWord (string word);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool NonWord(string word) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonWord(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonWord (word As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member NonWord : string -&gt; bool" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.NonWord word" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="word">Palavra a ser verificada.</param>
        <summary>Teste para ver se o Word está com pontuação ou espaço em branco.</summary>
        <returns>True se o Word estiver com pontuação ou espaço em branco.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static string Normalize (string value, Microsoft.Bot.Builder.FormFlow.CaseNormalization normalization);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Normalize(string value, valuetype Microsoft.Bot.Builder.FormFlow.CaseNormalization normalization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.Normalize(System.String,Microsoft.Bot.Builder.FormFlow.CaseNormalization)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Normalize (value As String, normalization As CaseNormalization) As String" />
      <MemberSignature Language="F#" Value="static member Normalize : string * Microsoft.Bot.Builder.FormFlow.CaseNormalization -&gt; string" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.Normalize (value, normalization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="normalization" Type="Microsoft.Bot.Builder.FormFlow.CaseNormalization" />
      </Parameters>
      <Docs>
        <param name="value">O valor a ser normalizado.</param>
        <param name="normalization">A normalização a ser aplicada.</param>
        <summary>Normalizar uma cadeia de caracteres.</summary>
        <returns>Uma cadeia de caracteres normalizada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionalPlurals">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; OptionalPlurals (System.Collections.Generic.IEnumerable&lt;string&gt; words);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; OptionalPlurals(class System.Collections.Generic.IEnumerable`1&lt;string&gt; words) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.OptionalPlurals(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Iterator Function OptionalPlurals (words As IEnumerable(Of String)) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="static member OptionalPlurals : seq&lt;string&gt; -&gt; seq&lt;string&gt;" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.OptionalPlurals words" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.Advanced.Language/&lt;OptionalPlurals&gt;d__10))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.Advanced.Language/&lt;OptionalPlurals&gt;d__10))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="words" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="words">Palavras para Pluralize.</param>
        <summary>Verifique se todas as palavras terminam com um s opcional.</summary>
        <returns>Enumeração de Regex de palavra plural.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.FormFlow.Advanced.LanguageResources Resources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.FormFlow.Advanced.LanguageResources Resources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resources () As LanguageResources" />
      <MemberSignature Language="F#" Value="static member Resources : unit -&gt; Microsoft.Bot.Builder.FormFlow.Advanced.LanguageResources" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.Resources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.FormFlow.Advanced.LanguageResources</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorne recursos específicos de linguagem para a cultura atual.</summary>
        <returns>Recursos de idioma.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordBreak">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; WordBreak (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; WordBreak(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.FormFlow.Advanced.Language.WordBreak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Iterator Function WordBreak (input As String) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="static member WordBreak : string -&gt; seq&lt;string&gt;" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.WordBreak input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.Advanced.Language/&lt;WordBreak&gt;d__8))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Bot.Builder.FormFlow.Advanced.Language/&lt;WordBreak&gt;d__8))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Cadeia de caracteres a ser quebrada.</param>
        <summary>Quebrar entrada em palavras.</summary>
        <returns>Enumeração de palavras.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordBreaker">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Regex WordBreaker;" />
      <MemberSignature Language="ILAsm" Value=".field public static class System.Text.RegularExpressions.Regex WordBreaker" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Builder.FormFlow.Advanced.Language.WordBreaker" />
      <MemberSignature Language="VB.NET" Value="Public Shared WordBreaker As Regex " />
      <MemberSignature Language="F#" Value=" staticval mutable WordBreaker : System.Text.RegularExpressions.Regex" Usage="Microsoft.Bot.Builder.FormFlow.Advanced.Language.WordBreaker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
        <AssemblyVersion>3.30.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Regex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Expressão regular para dividir uma cadeia de caracteres em palavras.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
