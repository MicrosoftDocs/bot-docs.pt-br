### YamlMime:FAQ
metadata:
  title: Perguntas frequentes sobre segurança e privacidade do bot Framework
  description: Respostas para perguntas frequentes sobre segurança e privacidade comuns.
  services: service
  ms.service: bot-service
  ms.topic: article
  author: mmiele
  ms.author: botcc
  ms.date: 01/25/2020
  ms.openlocfilehash: a67582c9098eef0c2e1593b7bfb56e8f2766cfb9
  ms.sourcegitcommit: 22a92bc07c85f899b3b1dca4f19421bc302db23f
  ms.translationtype: MT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 02/12/2021
  ms.locfileid: "100271895"
title: Perguntas frequentes sobre segurança e privacidade do bot Framework
summary: >
  Este artigo responde às perguntas mais frequentes sobre segurança e privacidade.


  <!-- Attention writers!!
     1 - This article contains FAQs regarding Bot Framework security and privacy.
     1 - When you create a new FAQ, please add the related link to the proper section in bot-service-resources-bot-framework-faq.md.-->

  [!INCLUDE [applies-to-v4](includes/applies-to-v4-current.md)]
sections:
- name: Azure
  questions:
  - question: Os bots registrados no Bot Framework coletam informações pessoais? Em caso afirmativo, como posso ter certeza de que os dados estão seguros e protegidos? E quanto à privacidade?
    answer: >
      Cada bot é seu próprio serviço, e os desenvolvedores desses serviços são obrigados a fornecer Termos de Serviço e Políticas de Privacidade de acordo com seu Código de Conduta do Desenvolvedor. Para obter mais informações, confira as [diretrizes de análise do bot](bot-service-review-guidelines.md).
  - question: Pode hospedar meu bot em meus próprios servidores?
    answer: >
      Sim. Seu bot pode ser hospedado em qualquer lugar na Internet. Em seus próprios servidores, no Azure ou em qualquer outro data center.

      O único requisito é que o bot deve expor um ponto de extremidade HTTPS publicamente acessível.
  - question: Como os bots são vetados ou removidos do serviço?
    answer: >
      Os usuários têm um modo para relatar o comportamento inadequado de um bot, que é o cartão de visita do bot no diretório.

      Os desenvolvedores precisam respeitar os termos de serviço da Microsoft para participar do serviço.
  - question: Quais URLs específicas eu preciso para permitir-list no meu firewall corporativo para acessar os serviços do bot Framework?
    answer: >
      Se você tiver um firewall de saída bloqueando o tráfego do bot para a Internet, você precisará permitir-listar as seguintes URLs nesse firewall:


      - `login.botframework.com` (Autenticação do bot)

      - `login.microsoftonline.com` (Autenticação do bot)

      - `westus.api.cognitive.microsoft.com` (para integração do NLP no Luis.ai)

      - `*.botframework.com` (canais)

      - `state.botframework.com` (compatibilidade com versões anteriores)

      - `login.windows.net` (Logon do Windows)

      - `login.windows.com` (Logon do Windows)

      - `sts.windows.net` (Logon do Windows)

      - URLs adicionais para canais específicos do Bot Framework


      > [!NOTE]

      > Você pode usar `<channel>.botframework.com` se preferir não permitir-listar uma URL com um asterisco. `<channel>` é igual a cada canal que seu bot usa, como `directline.botframework.com`, `webchat.botframework.com` e `slack.botframework.com`.

      > Também vale a pena observar o tráfego em seu firewall enquanto testa o bot para verificar se nada mais está sendo bloqueado.
  - question: Posso bloquear todo o tráfego para o meu bot, exceto o tráfego do Bot Framework Service?
    answer: >
      Os serviços do bot Framework são hospedados em data centers do Azure no mundo todo e a lista de IPs do Azure está em constante mudança.

      Isso significa que a listagem de determinados endereços IP pode funcionar um dia e interromper o próximo à medida que os endereços IP do Azure mudam.
  - question: Qual função RBAC é necessária para criar e implantar um bot?
    answer: >
      A criação de um bot no portal do Azure requer acesso de colaborador na assinatura ou em um grupo de recursos específico.

      Um usuário com a função de *Colaborador* em um grupo de recursos pode criar um bot nesse grupo de recursos específico.

      Um usuário na função de *Colaborador* para uma assinatura pode criar um bot em um grupo de recursos novo ou existente.


      Usando a CLI do Azure, uma abordagem de controle de acesso baseado em função pode dar suporte a funções personalizadas.

      Se você quiser tornar uma função personalizada com permissões mais restritas, o conjunto a seguir permitirá que o usuário crie e implante um bot que também ofereça suporte a LUIS, QnA Maker e Application Insights.

        "Microsoft.Web/ *", "Microsoft.BotService/* ", "Microsoft.Storage/ *", "Microsoft.Resources/deployments/* ", "Microsoft.CognitiveServices/ *", "Microsoft.Search/searchServices/* ", "Microsoft.Insights/ *", "Microsoft.Insights/components/* "

       > [!NOTE]
       > O LUIS e o QnA Maker exigem permissões de Serviços Cognitivos. O QnA Maker também requer permissões de Pesquisa.
       > Ao criar uma função personalizada, lembre-se de que qualquer permissão de *negação* herdada substituirá essas permissões de *permissão* .
  - question: O que mantém o meu bot protegido de clientes que se passam pelo Bot Framework Service?
    answer: >
      1. Todas as solicitações do Authentic bot Framework são acompanhadas por um token JWT cuja assinatura criptográfica pode ser verificada seguindo o guia de [autenticação](rest-api/bot-framework-rest-connector-authentication.md) .

      O token foi projetado para que os invasores não possam se passar por serviços confiáveis.

      1. O token de segurança que acompanha todas as solicitações feitas para seu bot tem a ServiceUrl codificada dentro dele, o que significa que, mesmo se um invasor obtiver acesso ao token, eles não conseguirá redirecionar a conversa para uma nova ServiceUrl.

      Isso é imposto por todas as implementações do SDK e documentado em nossos materiais de [referência](rest-api/bot-framework-rest-connector-authentication.md#bot-to-connector&preserve-view=true) de autenticação.

      1. Se o token de entrada estiver ausente ou se for malformado, o SDK do Bot Framework não irá gerar um token na resposta. Isso limita o dano que poderá ocorrer se o bot for configurado incorretamente.

      1. Dentro do bot, você pode verificar manualmente a ServiceUrl fornecida no token. Isso torna o bot mais frágil em caso de alterações de topologia de serviço, por isso que é possível, mas não recomendado.


      > [!NOTE]

      > Essas são conexões de saída do bot para a Internet.

      > Não há uma lista de nomes DNS ou Endereços IP que o Serviço Bot Framework Connector usará para se comunicar com o bot.

      > Não há suporte para a lista de permissões de endereço IP de entrada.
  - question: Qual é a finalidade do código mágico durante a autenticação?
    answer: >
      No controle de chat da Web, há dois mecanismos para garantir que o usuário apropriado esteja conectado.


      1. **Código mágico**. No final do processo de entrada, o usuário recebe um código de 6 dígitos gerado aleatoriamente (*código mágico*).

      O usuário deve digitar esse código na conversa para concluir o processo de entrada. Isso tende a resultar em uma experiência de usuário inadequada.

      Além disso, ele ainda está suscetível a ataques de phishing. Um usuário mal-intencionado pode induzir outro usuário a se conectar e a obter o código mágico por meio de phishing.

          > [!WARNING]
          > O uso do código mágico é preterido. Em vez disso, você deve usar a **Autenticação avançada de linha direta**, descrita abaixo.

      1. **Autenticação avançada de linha direta**. Devido aos problemas com a abordagem do *código mágico* , o serviço de bot do Azure removeu sua necessidade.

      O Serviço de Bot do Azure garante que o processo de conexão só possa ser concluído na **mesma sessão do navegador** que a do próprio Webchat.

      Para habilitar essa proteção, você deve iniciar o chat Web com um **token de linha direta** que contém uma lista de **origens confiáveis**, também conhecido como domínios confiáveis, que podem hospedar o cliente de chat da Web do bot.

      Com as opções de autenticação avançadas, você pode especificar estaticamente a lista de origens confiáveis na página de configuração de linha direta.

      Para obter mais informações, consulte [Autenticação avançada de linha direta](v4sdk/bot-builder-security-enhanced.md).
  - question: Como a estrutura de bot lida com gerenciamento de identidade e acesso?
    answer: >
      O IAM (gerenciamento de acesso e identidade), é uma estrutura (políticas e tecnologias) para permitir que as pessoas adequadas tenham acesso apropriado aos recursos de tecnologia. Para obter mais informações, consulte [Identity Management](https://en.wikipedia.org/wiki/Identity_management).


      A estrutura de bot fornece os seguintes mecanismos de identificação:


      - **Autenticação de bot**. Determina se uma solicitação provém de uma fonte legítima.
        Ele é controlado pelo **serviço do conector do bot** e permite a comunicação segura entre um bot e um canal.
        Para obter mais informações, consulte [autenticação de bot](v4sdk/bot-builder-concept-authentication-types.md#bot-authentication).

      - **Autenticação do usuário**. Ele permite que o bot acesse recursos online protegidos em nome do usuário.
        O OAuth padrão do setor é usado para autenticar o usuário e autorizar o bot a acessar os recursos.
        Para obter mais informações, consulte [autenticação do usuário](v4sdk/bot-builder-concept-authentication-types.md#user-authentication).

      Em resumo, a estrutura de bot manipula a autenticação de serviço a serviço (autenticação de bot), essencialmente Validando que uma solicitação realmente vem de um canal adequado. O bot é responsável por lidar com níveis inferiores de autenticação.

      Você pode aplicar um filtro para que seu bot aceite apenas solicitações de uma ID de locatário específica ou você pode exigir que seus usuários se autentiquem com algum serviço OAuth (autenticação de usuário).
  - question: Como fazer restringir o uso do meu bot para os usuários que pertencem somente ao meu locatário?
    answer: >-
      Você tem duas opções diferentes para restringir mensagens de entrada que seu bot processa.


      - Se você estiver lidando com dados seguros, é definitivamente recomendável usar o OAuth para autenticar os usuários.

      - Usar o middleware é outra boa opção. Por exemplo, no caso do **canal equipes**, adicione a `TeamsTenantFilteringMiddleware` classe ao bot e conecte-a em seu método de inicialização.
        Consulte estes exemplos:  [versão C#](https://github.com/microsoft/botbuilder-dotnet/tree/main/tests/Teams/Roster), [versão JavaScript](https://github.com/microsoft/botbuilder-js/tree/3481a14c39d49719be0b6917fdc85afb5381602e/libraries/teams-scenarios/integrationBot).

        > [!WARNING]
        > Você não pode impedir que as equipes enviem mensagens de vários locatários, nem pode impedir que alguém Instale seu bot se eles tiverem o manifesto do aplicativo.
        > Tudo o que você pode fazer é impedir que o bot processe as mensagens indesejadas.
